{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { Children, cloneElement } from 'react';\nimport { isTabPanel, isTab, isTabList } from './elementTypes';\n\nfunction isTabChild(child) {\n  return isTab(child) || isTabList(child) || isTabPanel(child);\n}\n\nexport function deepMap(children, callback) {\n  return Children.map(children, function (child) {\n    // null happens when conditionally rendering TabPanel/Tab\n    // see https://github.com/reactjs/react-tabs/issues/37\n    if (child === null) return null;\n\n    if (isTabChild(child)) {\n      return callback(child);\n    }\n\n    if (child.props && child.props.children && typeof child.props.children === 'object') {\n      // Clone the child that has children and map them too\n      return /*#__PURE__*/cloneElement(child, _extends({}, child.props, {\n        children: deepMap(child.props.children, callback)\n      }));\n    }\n\n    return child;\n  });\n}\nexport function deepForEach(children, callback) {\n  return Children.forEach(children, function (child) {\n    // null happens when conditionally rendering TabPanel/Tab\n    // see https://github.com/reactjs/react-tabs/issues/37\n    if (child === null) return;\n\n    if (isTab(child) || isTabPanel(child)) {\n      callback(child);\n    } else if (child.props && child.props.children && typeof child.props.children === 'object') {\n      if (isTabList(child)) callback(child);\n      deepForEach(child.props.children, callback);\n    }\n  });\n}","map":{"version":3,"sources":["/Library/WebServer/Documents/capstone/capstone-project-re-coder/node_modules/react-tabs/esm/helpers/childrenDeepMap.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","Children","cloneElement","isTabPanel","isTab","isTabList","isTabChild","child","deepMap","children","callback","map","props","deepForEach","forEach"],"mappings":"AAAA,SAASA,QAAT,GAAoB;AAAEA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,WAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,YAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,UAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,WAAOL,MAAP;AAAgB,GAA5P;;AAA8P,SAAOH,QAAQ,CAACY,KAAT,CAAe,IAAf,EAAqBP,SAArB,CAAP;AAAyC;;AAE7T,SAASQ,QAAT,EAAmBC,YAAnB,QAAuC,OAAvC;AACA,SAASC,UAAT,EAAqBC,KAArB,EAA4BC,SAA5B,QAA6C,gBAA7C;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB,SAAOH,KAAK,CAACG,KAAD,CAAL,IAAgBF,SAAS,CAACE,KAAD,CAAzB,IAAoCJ,UAAU,CAACI,KAAD,CAArD;AACD;;AAED,OAAO,SAASC,OAAT,CAAiBC,QAAjB,EAA2BC,QAA3B,EAAqC;AAC1C,SAAOT,QAAQ,CAACU,GAAT,CAAaF,QAAb,EAAuB,UAAUF,KAAV,EAAiB;AAC7C;AACA;AACA,QAAIA,KAAK,KAAK,IAAd,EAAoB,OAAO,IAAP;;AAEpB,QAAID,UAAU,CAACC,KAAD,CAAd,EAAuB;AACrB,aAAOG,QAAQ,CAACH,KAAD,CAAf;AACD;;AAED,QAAIA,KAAK,CAACK,KAAN,IAAeL,KAAK,CAACK,KAAN,CAAYH,QAA3B,IAAuC,OAAOF,KAAK,CAACK,KAAN,CAAYH,QAAnB,KAAgC,QAA3E,EAAqF;AACnF;AACA,aAAO,aAAaP,YAAY,CAACK,KAAD,EAAQnB,QAAQ,CAAC,EAAD,EAAKmB,KAAK,CAACK,KAAX,EAAkB;AAChEH,QAAAA,QAAQ,EAAED,OAAO,CAACD,KAAK,CAACK,KAAN,CAAYH,QAAb,EAAuBC,QAAvB;AAD+C,OAAlB,CAAhB,CAAhC;AAGD;;AAED,WAAOH,KAAP;AACD,GAjBM,CAAP;AAkBD;AACD,OAAO,SAASM,WAAT,CAAqBJ,QAArB,EAA+BC,QAA/B,EAAyC;AAC9C,SAAOT,QAAQ,CAACa,OAAT,CAAiBL,QAAjB,EAA2B,UAAUF,KAAV,EAAiB;AACjD;AACA;AACA,QAAIA,KAAK,KAAK,IAAd,EAAoB;;AAEpB,QAAIH,KAAK,CAACG,KAAD,CAAL,IAAgBJ,UAAU,CAACI,KAAD,CAA9B,EAAuC;AACrCG,MAAAA,QAAQ,CAACH,KAAD,CAAR;AACD,KAFD,MAEO,IAAIA,KAAK,CAACK,KAAN,IAAeL,KAAK,CAACK,KAAN,CAAYH,QAA3B,IAAuC,OAAOF,KAAK,CAACK,KAAN,CAAYH,QAAnB,KAAgC,QAA3E,EAAqF;AAC1F,UAAIJ,SAAS,CAACE,KAAD,CAAb,EAAsBG,QAAQ,CAACH,KAAD,CAAR;AACtBM,MAAAA,WAAW,CAACN,KAAK,CAACK,KAAN,CAAYH,QAAb,EAAuBC,QAAvB,CAAX;AACD;AACF,GAXM,CAAP;AAYD","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { Children, cloneElement } from 'react';\nimport { isTabPanel, isTab, isTabList } from './elementTypes';\n\nfunction isTabChild(child) {\n  return isTab(child) || isTabList(child) || isTabPanel(child);\n}\n\nexport function deepMap(children, callback) {\n  return Children.map(children, function (child) {\n    // null happens when conditionally rendering TabPanel/Tab\n    // see https://github.com/reactjs/react-tabs/issues/37\n    if (child === null) return null;\n\n    if (isTabChild(child)) {\n      return callback(child);\n    }\n\n    if (child.props && child.props.children && typeof child.props.children === 'object') {\n      // Clone the child that has children and map them too\n      return /*#__PURE__*/cloneElement(child, _extends({}, child.props, {\n        children: deepMap(child.props.children, callback)\n      }));\n    }\n\n    return child;\n  });\n}\nexport function deepForEach(children, callback) {\n  return Children.forEach(children, function (child) {\n    // null happens when conditionally rendering TabPanel/Tab\n    // see https://github.com/reactjs/react-tabs/issues/37\n    if (child === null) return;\n\n    if (isTab(child) || isTabPanel(child)) {\n      callback(child);\n    } else if (child.props && child.props.children && typeof child.props.children === 'object') {\n      if (isTabList(child)) callback(child);\n      deepForEach(child.props.children, callback);\n    }\n  });\n}"]},"metadata":{},"sourceType":"module"}