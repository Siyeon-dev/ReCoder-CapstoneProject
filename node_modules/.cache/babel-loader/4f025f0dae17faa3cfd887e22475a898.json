{"ast":null,"code":"//.CommonJS\nvar CSSOM = {\n  CSSRule: require(\"./CSSRule\").CSSRule,\n  CSSStyleSheet: require(\"./CSSStyleSheet\").CSSStyleSheet,\n  MediaList: require(\"./MediaList\").MediaList\n}; ///CommonJS\n\n/**\n * @constructor\n * @see http://dev.w3.org/csswg/cssom/#cssimportrule\n * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSImportRule\n */\n\nCSSOM.CSSImportRule = function CSSImportRule() {\n  CSSOM.CSSRule.call(this);\n  this.href = \"\";\n  this.media = new CSSOM.MediaList();\n  this.styleSheet = new CSSOM.CSSStyleSheet();\n};\n\nCSSOM.CSSImportRule.prototype = new CSSOM.CSSRule();\nCSSOM.CSSImportRule.prototype.constructor = CSSOM.CSSImportRule;\nCSSOM.CSSImportRule.prototype.type = 3;\nObject.defineProperty(CSSOM.CSSImportRule.prototype, \"cssText\", {\n  get: function () {\n    var mediaText = this.media.mediaText;\n    return \"@import url(\" + this.href + \")\" + (mediaText ? \" \" + mediaText : \"\") + \";\";\n  },\n  set: function (cssText) {\n    var i = 0;\n    /**\n     * @import url(partial.css) screen, handheld;\n     *        ||               |\n     *        after-import     media\n     *         |\n     *         url\n     */\n\n    var state = '';\n    var buffer = '';\n    var index;\n\n    for (var character; character = cssText.charAt(i); i++) {\n      switch (character) {\n        case ' ':\n        case '\\t':\n        case '\\r':\n        case '\\n':\n        case '\\f':\n          if (state === 'after-import') {\n            state = 'url';\n          } else {\n            buffer += character;\n          }\n\n          break;\n\n        case '@':\n          if (!state && cssText.indexOf('@import', i) === i) {\n            state = 'after-import';\n            i += 'import'.length;\n            buffer = '';\n          }\n\n          break;\n\n        case 'u':\n          if (state === 'url' && cssText.indexOf('url(', i) === i) {\n            index = cssText.indexOf(')', i + 1);\n\n            if (index === -1) {\n              throw i + ': \")\" not found';\n            }\n\n            i += 'url('.length;\n            var url = cssText.slice(i, index);\n\n            if (url[0] === url[url.length - 1]) {\n              if (url[0] === '\"' || url[0] === \"'\") {\n                url = url.slice(1, -1);\n              }\n            }\n\n            this.href = url;\n            i = index;\n            state = 'media';\n          }\n\n          break;\n\n        case '\"':\n          if (state === 'url') {\n            index = cssText.indexOf('\"', i + 1);\n\n            if (!index) {\n              throw i + \": '\\\"' not found\";\n            }\n\n            this.href = cssText.slice(i + 1, index);\n            i = index;\n            state = 'media';\n          }\n\n          break;\n\n        case \"'\":\n          if (state === 'url') {\n            index = cssText.indexOf(\"'\", i + 1);\n\n            if (!index) {\n              throw i + ': \"\\'\" not found';\n            }\n\n            this.href = cssText.slice(i + 1, index);\n            i = index;\n            state = 'media';\n          }\n\n          break;\n\n        case ';':\n          if (state === 'media') {\n            if (buffer) {\n              this.media.mediaText = buffer.trim();\n            }\n          }\n\n          break;\n\n        default:\n          if (state === 'media') {\n            buffer += character;\n          }\n\n          break;\n      }\n    }\n  }\n}); //.CommonJS\n\nexports.CSSImportRule = CSSOM.CSSImportRule; ///CommonJS","map":{"version":3,"sources":["/Library/WebServer/Documents/capstone/capstone-project-re-coder/node_modules/cssom/lib/CSSImportRule.js"],"names":["CSSOM","CSSRule","require","CSSStyleSheet","MediaList","CSSImportRule","call","href","media","styleSheet","prototype","constructor","type","Object","defineProperty","get","mediaText","set","cssText","i","state","buffer","index","character","charAt","indexOf","length","url","slice","trim","exports"],"mappings":"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","sourcesContent":["//.CommonJS\nvar CSSOM = {\n\tCSSRule: require(\"./CSSRule\").CSSRule,\n\tCSSStyleSheet: require(\"./CSSStyleSheet\").CSSStyleSheet,\n\tMediaList: require(\"./MediaList\").MediaList\n};\n///CommonJS\n\n\n/**\n * @constructor\n * @see http://dev.w3.org/csswg/cssom/#cssimportrule\n * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSImportRule\n */\nCSSOM.CSSImportRule = function CSSImportRule() {\n\tCSSOM.CSSRule.call(this);\n\tthis.href = \"\";\n\tthis.media = new CSSOM.MediaList();\n\tthis.styleSheet = new CSSOM.CSSStyleSheet();\n};\n\nCSSOM.CSSImportRule.prototype = new CSSOM.CSSRule();\nCSSOM.CSSImportRule.prototype.constructor = CSSOM.CSSImportRule;\nCSSOM.CSSImportRule.prototype.type = 3;\n\nObject.defineProperty(CSSOM.CSSImportRule.prototype, \"cssText\", {\n  get: function() {\n    var mediaText = this.media.mediaText;\n    return \"@import url(\" + this.href + \")\" + (mediaText ? \" \" + mediaText : \"\") + \";\";\n  },\n  set: function(cssText) {\n    var i = 0;\n\n    /**\n     * @import url(partial.css) screen, handheld;\n     *        ||               |\n     *        after-import     media\n     *         |\n     *         url\n     */\n    var state = '';\n\n    var buffer = '';\n    var index;\n    for (var character; (character = cssText.charAt(i)); i++) {\n\n      switch (character) {\n        case ' ':\n        case '\\t':\n        case '\\r':\n        case '\\n':\n        case '\\f':\n          if (state === 'after-import') {\n            state = 'url';\n          } else {\n            buffer += character;\n          }\n          break;\n\n        case '@':\n          if (!state && cssText.indexOf('@import', i) === i) {\n            state = 'after-import';\n            i += 'import'.length;\n            buffer = '';\n          }\n          break;\n\n        case 'u':\n          if (state === 'url' && cssText.indexOf('url(', i) === i) {\n            index = cssText.indexOf(')', i + 1);\n            if (index === -1) {\n              throw i + ': \")\" not found';\n            }\n            i += 'url('.length;\n            var url = cssText.slice(i, index);\n            if (url[0] === url[url.length - 1]) {\n              if (url[0] === '\"' || url[0] === \"'\") {\n                url = url.slice(1, -1);\n              }\n            }\n            this.href = url;\n            i = index;\n            state = 'media';\n          }\n          break;\n\n        case '\"':\n          if (state === 'url') {\n            index = cssText.indexOf('\"', i + 1);\n            if (!index) {\n              throw i + \": '\\\"' not found\";\n            }\n            this.href = cssText.slice(i + 1, index);\n            i = index;\n            state = 'media';\n          }\n          break;\n\n        case \"'\":\n          if (state === 'url') {\n            index = cssText.indexOf(\"'\", i + 1);\n            if (!index) {\n              throw i + ': \"\\'\" not found';\n            }\n            this.href = cssText.slice(i + 1, index);\n            i = index;\n            state = 'media';\n          }\n          break;\n\n        case ';':\n          if (state === 'media') {\n            if (buffer) {\n              this.media.mediaText = buffer.trim();\n            }\n          }\n          break;\n\n        default:\n          if (state === 'media') {\n            buffer += character;\n          }\n          break;\n      }\n    }\n  }\n});\n\n\n//.CommonJS\nexports.CSSImportRule = CSSOM.CSSImportRule;\n///CommonJS\n"]},"metadata":{},"sourceType":"script"}