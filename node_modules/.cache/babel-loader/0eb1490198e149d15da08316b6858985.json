{"ast":null,"code":"\"use strict\";\n\nconst DOMException = require(\"domexception/webidl2js-wrapper\");\n\nconst OrderedSet = require(\"../helpers/ordered-set.js\");\n\nconst {\n  asciiLowercase\n} = require(\"../helpers/strings.js\");\n\nconst idlUtils = require(\"../generated/utils.js\");\n\nconst {\n  getAttributeValue,\n  setAttributeValue,\n  hasAttributeByName\n} = require(\"../attributes.js\");\n\nfunction validateTokens(globalObject, ...tokens) {\n  for (const token of tokens) {\n    if (token === \"\") {\n      throw DOMException.create(globalObject, [\"The token provided must not be empty.\", \"SyntaxError\"]);\n    }\n  }\n\n  for (const token of tokens) {\n    if (/[\\t\\n\\f\\r ]/.test(token)) {\n      throw DOMException.create(globalObject, [\"The token provided contains HTML space characters, which are not valid in tokens.\", \"InvalidCharacterError\"]);\n    }\n  }\n} // https://dom.spec.whatwg.org/#domtokenlist\n\n\nclass DOMTokenListImpl {\n  constructor(globalObject, args, privateData) {\n    this._globalObject = globalObject; // _syncWithElement() must always be called before any _tokenSet access.\n\n    this._tokenSet = new OrderedSet();\n    this._element = privateData.element;\n    this._attributeLocalName = privateData.attributeLocalName;\n    this._supportedTokens = privateData.supportedTokens; // Needs synchronization with element if token set is to be accessed.\n\n    this._dirty = true;\n  }\n\n  attrModified() {\n    this._dirty = true;\n  }\n\n  _syncWithElement() {\n    if (!this._dirty) {\n      return;\n    }\n\n    const val = getAttributeValue(this._element, this._attributeLocalName);\n\n    if (val === null) {\n      this._tokenSet.empty();\n    } else {\n      this._tokenSet = OrderedSet.parse(val);\n    }\n\n    this._dirty = false;\n  }\n\n  _validationSteps(token) {\n    if (!this._supportedTokens) {\n      throw new TypeError(`${this._attributeLocalName} attribute has no supported tokens`);\n    }\n\n    const lowerToken = asciiLowercase(token);\n    return this._supportedTokens.has(lowerToken);\n  }\n\n  _updateSteps() {\n    if (!hasAttributeByName(this._element, this._attributeLocalName) && this._tokenSet.isEmpty()) {\n      return;\n    }\n\n    setAttributeValue(this._element, this._attributeLocalName, this._tokenSet.serialize());\n  }\n\n  _serializeSteps() {\n    return getAttributeValue(this._element, this._attributeLocalName);\n  } // Used by other parts of jsdom\n\n\n  get tokenSet() {\n    this._syncWithElement();\n\n    return this._tokenSet;\n  }\n\n  get length() {\n    this._syncWithElement();\n\n    return this._tokenSet.size;\n  }\n\n  get [idlUtils.supportedPropertyIndices]() {\n    this._syncWithElement();\n\n    return this._tokenSet.keys();\n  }\n\n  item(index) {\n    this._syncWithElement();\n\n    if (index >= this._tokenSet.size) {\n      return null;\n    }\n\n    return this._tokenSet.get(index);\n  }\n\n  contains(token) {\n    this._syncWithElement();\n\n    return this._tokenSet.contains(token);\n  }\n\n  add(...tokens) {\n    for (const token of tokens) {\n      validateTokens(this._globalObject, token);\n    }\n\n    this._syncWithElement();\n\n    for (const token of tokens) {\n      this._tokenSet.append(token);\n    }\n\n    this._updateSteps();\n  }\n\n  remove(...tokens) {\n    for (const token of tokens) {\n      validateTokens(this._globalObject, token);\n    }\n\n    this._syncWithElement();\n\n    this._tokenSet.remove(...tokens);\n\n    this._updateSteps();\n  }\n\n  toggle(token, force = undefined) {\n    validateTokens(this._globalObject, token);\n\n    this._syncWithElement();\n\n    if (this._tokenSet.contains(token)) {\n      if (force === undefined || force === false) {\n        this._tokenSet.remove(token);\n\n        this._updateSteps();\n\n        return false;\n      }\n\n      return true;\n    }\n\n    if (force === undefined || force === true) {\n      this._tokenSet.append(token);\n\n      this._updateSteps();\n\n      return true;\n    }\n\n    return false;\n  }\n\n  replace(token, newToken) {\n    validateTokens(this._globalObject, token, newToken);\n\n    this._syncWithElement();\n\n    if (!this._tokenSet.contains(token)) {\n      return false;\n    }\n\n    this._tokenSet.replace(token, newToken);\n\n    this._updateSteps();\n\n    return true;\n  }\n\n  supports(token) {\n    return this._validationSteps(token);\n  }\n\n  get value() {\n    return this._serializeSteps();\n  }\n\n  set value(V) {\n    setAttributeValue(this._element, this._attributeLocalName, V);\n  }\n\n}\n\nexports.implementation = DOMTokenListImpl;","map":{"version":3,"sources":["/Library/WebServer/Documents/capstone/capstone-project-re-coder/node_modules/jsdom/lib/jsdom/living/nodes/DOMTokenList-impl.js"],"names":["DOMException","require","OrderedSet","asciiLowercase","idlUtils","getAttributeValue","setAttributeValue","hasAttributeByName","validateTokens","globalObject","tokens","token","create","test","DOMTokenListImpl","constructor","args","privateData","_globalObject","_tokenSet","_element","element","_attributeLocalName","attributeLocalName","_supportedTokens","supportedTokens","_dirty","attrModified","_syncWithElement","val","empty","parse","_validationSteps","TypeError","lowerToken","has","_updateSteps","isEmpty","serialize","_serializeSteps","tokenSet","length","size","supportedPropertyIndices","keys","item","index","get","contains","add","append","remove","toggle","force","undefined","replace","newToken","supports","value","V","exports","implementation"],"mappings":"AAAA;;AAEA,MAAMA,YAAY,GAAGC,OAAO,CAAC,gCAAD,CAA5B;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,2BAAD,CAA1B;;AACA,MAAM;AAAEE,EAAAA;AAAF,IAAqBF,OAAO,CAAC,uBAAD,CAAlC;;AACA,MAAMG,QAAQ,GAAGH,OAAO,CAAC,uBAAD,CAAxB;;AAEA,MAAM;AAAEI,EAAAA,iBAAF;AAAqBC,EAAAA,iBAArB;AAAwCC,EAAAA;AAAxC,IAA+DN,OAAO,CAAC,kBAAD,CAA5E;;AAEA,SAASO,cAAT,CAAwBC,YAAxB,EAAsC,GAAGC,MAAzC,EAAiD;AAC/C,OAAK,MAAMC,KAAX,IAAoBD,MAApB,EAA4B;AAC1B,QAAIC,KAAK,KAAK,EAAd,EAAkB;AAChB,YAAMX,YAAY,CAACY,MAAb,CAAoBH,YAApB,EAAkC,CAAC,uCAAD,EAA0C,aAA1C,CAAlC,CAAN;AACD;AACF;;AACD,OAAK,MAAME,KAAX,IAAoBD,MAApB,EAA4B;AAC1B,QAAI,cAAcG,IAAd,CAAmBF,KAAnB,CAAJ,EAA+B;AAC7B,YAAMX,YAAY,CAACY,MAAb,CAAoBH,YAApB,EAAkC,CACtC,mFADsC,EAEtC,uBAFsC,CAAlC,CAAN;AAID;AACF;AACF,C,CAED;;;AACA,MAAMK,gBAAN,CAAuB;AACrBC,EAAAA,WAAW,CAACN,YAAD,EAAeO,IAAf,EAAqBC,WAArB,EAAkC;AAC3C,SAAKC,aAAL,GAAqBT,YAArB,CAD2C,CAG3C;;AACA,SAAKU,SAAL,GAAiB,IAAIjB,UAAJ,EAAjB;AACA,SAAKkB,QAAL,GAAgBH,WAAW,CAACI,OAA5B;AACA,SAAKC,mBAAL,GAA2BL,WAAW,CAACM,kBAAvC;AACA,SAAKC,gBAAL,GAAwBP,WAAW,CAACQ,eAApC,CAP2C,CAS3C;;AACA,SAAKC,MAAL,GAAc,IAAd;AACD;;AAEDC,EAAAA,YAAY,GAAG;AACb,SAAKD,MAAL,GAAc,IAAd;AACD;;AAEDE,EAAAA,gBAAgB,GAAG;AACjB,QAAI,CAAC,KAAKF,MAAV,EAAkB;AAChB;AACD;;AAED,UAAMG,GAAG,GAAGxB,iBAAiB,CAAC,KAAKe,QAAN,EAAgB,KAAKE,mBAArB,CAA7B;;AACA,QAAIO,GAAG,KAAK,IAAZ,EAAkB;AAChB,WAAKV,SAAL,CAAeW,KAAf;AACD,KAFD,MAEO;AACL,WAAKX,SAAL,GAAiBjB,UAAU,CAAC6B,KAAX,CAAiBF,GAAjB,CAAjB;AACD;;AAED,SAAKH,MAAL,GAAc,KAAd;AACD;;AAEDM,EAAAA,gBAAgB,CAACrB,KAAD,EAAQ;AACtB,QAAI,CAAC,KAAKa,gBAAV,EAA4B;AAC1B,YAAM,IAAIS,SAAJ,CAAe,GAAE,KAAKX,mBAAoB,oCAA1C,CAAN;AACD;;AACD,UAAMY,UAAU,GAAG/B,cAAc,CAACQ,KAAD,CAAjC;AACA,WAAO,KAAKa,gBAAL,CAAsBW,GAAtB,CAA0BD,UAA1B,CAAP;AACD;;AAEDE,EAAAA,YAAY,GAAG;AACb,QAAI,CAAC7B,kBAAkB,CAAC,KAAKa,QAAN,EAAgB,KAAKE,mBAArB,CAAnB,IAAgE,KAAKH,SAAL,CAAekB,OAAf,EAApE,EAA8F;AAC5F;AACD;;AACD/B,IAAAA,iBAAiB,CAAC,KAAKc,QAAN,EAAgB,KAAKE,mBAArB,EAA0C,KAAKH,SAAL,CAAemB,SAAf,EAA1C,CAAjB;AACD;;AAEDC,EAAAA,eAAe,GAAG;AAChB,WAAOlC,iBAAiB,CAAC,KAAKe,QAAN,EAAgB,KAAKE,mBAArB,CAAxB;AACD,GAlDoB,CAoDrB;;;AACY,MAARkB,QAAQ,GAAG;AACb,SAAKZ,gBAAL;;AACA,WAAO,KAAKT,SAAZ;AACD;;AAES,MAANsB,MAAM,GAAG;AACX,SAAKb,gBAAL;;AACA,WAAO,KAAKT,SAAL,CAAeuB,IAAtB;AACD;;AAEqC,OAAjCtC,QAAQ,CAACuC,wBAAwB,IAAI;AACxC,SAAKf,gBAAL;;AACA,WAAO,KAAKT,SAAL,CAAeyB,IAAf,EAAP;AACD;;AAEDC,EAAAA,IAAI,CAACC,KAAD,EAAQ;AACV,SAAKlB,gBAAL;;AACA,QAAIkB,KAAK,IAAI,KAAK3B,SAAL,CAAeuB,IAA5B,EAAkC;AAChC,aAAO,IAAP;AACD;;AACD,WAAO,KAAKvB,SAAL,CAAe4B,GAAf,CAAmBD,KAAnB,CAAP;AACD;;AAEDE,EAAAA,QAAQ,CAACrC,KAAD,EAAQ;AACd,SAAKiB,gBAAL;;AACA,WAAO,KAAKT,SAAL,CAAe6B,QAAf,CAAwBrC,KAAxB,CAAP;AACD;;AAEDsC,EAAAA,GAAG,CAAC,GAAGvC,MAAJ,EAAY;AACb,SAAK,MAAMC,KAAX,IAAoBD,MAApB,EAA4B;AAC1BF,MAAAA,cAAc,CAAC,KAAKU,aAAN,EAAqBP,KAArB,CAAd;AACD;;AACD,SAAKiB,gBAAL;;AACA,SAAK,MAAMjB,KAAX,IAAoBD,MAApB,EAA4B;AAC1B,WAAKS,SAAL,CAAe+B,MAAf,CAAsBvC,KAAtB;AACD;;AACD,SAAKyB,YAAL;AACD;;AAEDe,EAAAA,MAAM,CAAC,GAAGzC,MAAJ,EAAY;AAChB,SAAK,MAAMC,KAAX,IAAoBD,MAApB,EAA4B;AAC1BF,MAAAA,cAAc,CAAC,KAAKU,aAAN,EAAqBP,KAArB,CAAd;AACD;;AACD,SAAKiB,gBAAL;;AACA,SAAKT,SAAL,CAAegC,MAAf,CAAsB,GAAGzC,MAAzB;;AACA,SAAK0B,YAAL;AACD;;AAEDgB,EAAAA,MAAM,CAACzC,KAAD,EAAQ0C,KAAK,GAAGC,SAAhB,EAA2B;AAC/B9C,IAAAA,cAAc,CAAC,KAAKU,aAAN,EAAqBP,KAArB,CAAd;;AACA,SAAKiB,gBAAL;;AACA,QAAI,KAAKT,SAAL,CAAe6B,QAAf,CAAwBrC,KAAxB,CAAJ,EAAoC;AAClC,UAAI0C,KAAK,KAAKC,SAAV,IAAuBD,KAAK,KAAK,KAArC,EAA4C;AAC1C,aAAKlC,SAAL,CAAegC,MAAf,CAAsBxC,KAAtB;;AACA,aAAKyB,YAAL;;AACA,eAAO,KAAP;AACD;;AACD,aAAO,IAAP;AACD;;AACD,QAAIiB,KAAK,KAAKC,SAAV,IAAuBD,KAAK,KAAK,IAArC,EAA2C;AACzC,WAAKlC,SAAL,CAAe+B,MAAf,CAAsBvC,KAAtB;;AACA,WAAKyB,YAAL;;AACA,aAAO,IAAP;AACD;;AACD,WAAO,KAAP;AACD;;AAEDmB,EAAAA,OAAO,CAAC5C,KAAD,EAAQ6C,QAAR,EAAkB;AACvBhD,IAAAA,cAAc,CAAC,KAAKU,aAAN,EAAqBP,KAArB,EAA4B6C,QAA5B,CAAd;;AACA,SAAK5B,gBAAL;;AACA,QAAI,CAAC,KAAKT,SAAL,CAAe6B,QAAf,CAAwBrC,KAAxB,CAAL,EAAqC;AACnC,aAAO,KAAP;AACD;;AACD,SAAKQ,SAAL,CAAeoC,OAAf,CAAuB5C,KAAvB,EAA8B6C,QAA9B;;AACA,SAAKpB,YAAL;;AACA,WAAO,IAAP;AACD;;AAEDqB,EAAAA,QAAQ,CAAC9C,KAAD,EAAQ;AACd,WAAO,KAAKqB,gBAAL,CAAsBrB,KAAtB,CAAP;AACD;;AAEQ,MAAL+C,KAAK,GAAG;AACV,WAAO,KAAKnB,eAAL,EAAP;AACD;;AAEQ,MAALmB,KAAK,CAACC,CAAD,EAAI;AACXrD,IAAAA,iBAAiB,CAAC,KAAKc,QAAN,EAAgB,KAAKE,mBAArB,EAA0CqC,CAA1C,CAAjB;AACD;;AA7IoB;;AAgJvBC,OAAO,CAACC,cAAR,GAAyB/C,gBAAzB","sourcesContent":["\"use strict\";\n\nconst DOMException = require(\"domexception/webidl2js-wrapper\");\nconst OrderedSet = require(\"../helpers/ordered-set.js\");\nconst { asciiLowercase } = require(\"../helpers/strings.js\");\nconst idlUtils = require(\"../generated/utils.js\");\n\nconst { getAttributeValue, setAttributeValue, hasAttributeByName } = require(\"../attributes.js\");\n\nfunction validateTokens(globalObject, ...tokens) {\n  for (const token of tokens) {\n    if (token === \"\") {\n      throw DOMException.create(globalObject, [\"The token provided must not be empty.\", \"SyntaxError\"]);\n    }\n  }\n  for (const token of tokens) {\n    if (/[\\t\\n\\f\\r ]/.test(token)) {\n      throw DOMException.create(globalObject, [\n        \"The token provided contains HTML space characters, which are not valid in tokens.\",\n        \"InvalidCharacterError\"\n      ]);\n    }\n  }\n}\n\n// https://dom.spec.whatwg.org/#domtokenlist\nclass DOMTokenListImpl {\n  constructor(globalObject, args, privateData) {\n    this._globalObject = globalObject;\n\n    // _syncWithElement() must always be called before any _tokenSet access.\n    this._tokenSet = new OrderedSet();\n    this._element = privateData.element;\n    this._attributeLocalName = privateData.attributeLocalName;\n    this._supportedTokens = privateData.supportedTokens;\n\n    // Needs synchronization with element if token set is to be accessed.\n    this._dirty = true;\n  }\n\n  attrModified() {\n    this._dirty = true;\n  }\n\n  _syncWithElement() {\n    if (!this._dirty) {\n      return;\n    }\n\n    const val = getAttributeValue(this._element, this._attributeLocalName);\n    if (val === null) {\n      this._tokenSet.empty();\n    } else {\n      this._tokenSet = OrderedSet.parse(val);\n    }\n\n    this._dirty = false;\n  }\n\n  _validationSteps(token) {\n    if (!this._supportedTokens) {\n      throw new TypeError(`${this._attributeLocalName} attribute has no supported tokens`);\n    }\n    const lowerToken = asciiLowercase(token);\n    return this._supportedTokens.has(lowerToken);\n  }\n\n  _updateSteps() {\n    if (!hasAttributeByName(this._element, this._attributeLocalName) && this._tokenSet.isEmpty()) {\n      return;\n    }\n    setAttributeValue(this._element, this._attributeLocalName, this._tokenSet.serialize());\n  }\n\n  _serializeSteps() {\n    return getAttributeValue(this._element, this._attributeLocalName);\n  }\n\n  // Used by other parts of jsdom\n  get tokenSet() {\n    this._syncWithElement();\n    return this._tokenSet;\n  }\n\n  get length() {\n    this._syncWithElement();\n    return this._tokenSet.size;\n  }\n\n  get [idlUtils.supportedPropertyIndices]() {\n    this._syncWithElement();\n    return this._tokenSet.keys();\n  }\n\n  item(index) {\n    this._syncWithElement();\n    if (index >= this._tokenSet.size) {\n      return null;\n    }\n    return this._tokenSet.get(index);\n  }\n\n  contains(token) {\n    this._syncWithElement();\n    return this._tokenSet.contains(token);\n  }\n\n  add(...tokens) {\n    for (const token of tokens) {\n      validateTokens(this._globalObject, token);\n    }\n    this._syncWithElement();\n    for (const token of tokens) {\n      this._tokenSet.append(token);\n    }\n    this._updateSteps();\n  }\n\n  remove(...tokens) {\n    for (const token of tokens) {\n      validateTokens(this._globalObject, token);\n    }\n    this._syncWithElement();\n    this._tokenSet.remove(...tokens);\n    this._updateSteps();\n  }\n\n  toggle(token, force = undefined) {\n    validateTokens(this._globalObject, token);\n    this._syncWithElement();\n    if (this._tokenSet.contains(token)) {\n      if (force === undefined || force === false) {\n        this._tokenSet.remove(token);\n        this._updateSteps();\n        return false;\n      }\n      return true;\n    }\n    if (force === undefined || force === true) {\n      this._tokenSet.append(token);\n      this._updateSteps();\n      return true;\n    }\n    return false;\n  }\n\n  replace(token, newToken) {\n    validateTokens(this._globalObject, token, newToken);\n    this._syncWithElement();\n    if (!this._tokenSet.contains(token)) {\n      return false;\n    }\n    this._tokenSet.replace(token, newToken);\n    this._updateSteps();\n    return true;\n  }\n\n  supports(token) {\n    return this._validationSteps(token);\n  }\n\n  get value() {\n    return this._serializeSteps();\n  }\n\n  set value(V) {\n    setAttributeValue(this._element, this._attributeLocalName, V);\n  }\n}\n\nexports.implementation = DOMTokenListImpl;\n"]},"metadata":{},"sourceType":"script"}