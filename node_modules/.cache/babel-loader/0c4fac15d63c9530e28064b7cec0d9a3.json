{"ast":null,"code":"\"use strict\";\n\nconst DOMException = require(\"domexception/webidl2js-wrapper\");\n\nconst {\n  HTML_NS\n} = require(\"./helpers/namespaces\");\n\nconst {\n  asciiLowercase\n} = require(\"./helpers/strings\");\n\nconst {\n  queueAttributeMutationRecord\n} = require(\"./helpers/mutation-observers\");\n\nconst {\n  enqueueCECallbackReaction\n} = require(\"./helpers/custom-elements\"); // The following three are for https://dom.spec.whatwg.org/#concept-element-attribute-has. We don't just have a\n// predicate tester since removing that kind of flexibility gives us the potential for better future optimizations.\n\n/* eslint-disable no-restricted-properties */\n\n\nexports.hasAttribute = function (element, A) {\n  return element._attributeList.includes(A);\n};\n\nexports.hasAttributeByName = function (element, name) {\n  return element._attributesByNameMap.has(name);\n};\n\nexports.hasAttributeByNameNS = function (element, namespace, localName) {\n  return element._attributeList.some(attribute => {\n    return attribute._localName === localName && attribute._namespace === namespace;\n  });\n}; // https://dom.spec.whatwg.org/#concept-element-attributes-change\n\n\nexports.changeAttribute = (element, attribute, value) => {\n  const {\n    _localName,\n    _namespace,\n    _value\n  } = attribute;\n  queueAttributeMutationRecord(element, _localName, _namespace, _value);\n\n  if (element._ceState === \"custom\") {\n    enqueueCECallbackReaction(element, \"attributeChangedCallback\", [_localName, _value, value, _namespace]);\n  }\n\n  attribute._value = value; // Run jsdom hooks; roughly correspond to spec's \"An attribute is set and an attribute is changed.\"\n\n  element._attrModified(attribute._qualifiedName, value, _value);\n}; // https://dom.spec.whatwg.org/#concept-element-attributes-append\n\n\nexports.appendAttribute = function (element, attribute) {\n  const {\n    _localName,\n    _namespace,\n    _value\n  } = attribute;\n  queueAttributeMutationRecord(element, _localName, _namespace, null);\n\n  if (element._ceState === \"custom\") {\n    enqueueCECallbackReaction(element, \"attributeChangedCallback\", [_localName, null, _value, _namespace]);\n  }\n\n  const attributeList = element._attributeList;\n  attributeList.push(attribute);\n  attribute._element = element; // Sync name cache\n\n  const name = attribute._qualifiedName;\n  const cache = element._attributesByNameMap;\n  let entry = cache.get(name);\n\n  if (!entry) {\n    entry = [];\n    cache.set(name, entry);\n  }\n\n  entry.push(attribute); // Run jsdom hooks; roughly correspond to spec's \"An attribute is set and an attribute is added.\"\n\n  element._attrModified(name, _value, null);\n};\n\nexports.removeAttribute = function (element, attribute) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-remove\n  const {\n    _localName,\n    _namespace,\n    _value\n  } = attribute;\n  queueAttributeMutationRecord(element, _localName, _namespace, _value);\n\n  if (element._ceState === \"custom\") {\n    enqueueCECallbackReaction(element, \"attributeChangedCallback\", [_localName, _value, null, _namespace]);\n  }\n\n  const attributeList = element._attributeList;\n\n  for (let i = 0; i < attributeList.length; ++i) {\n    if (attributeList[i] === attribute) {\n      attributeList.splice(i, 1);\n      attribute._element = null; // Sync name cache\n\n      const name = attribute._qualifiedName;\n      const cache = element._attributesByNameMap;\n      const entry = cache.get(name);\n      entry.splice(entry.indexOf(attribute), 1);\n\n      if (entry.length === 0) {\n        cache.delete(name);\n      } // Run jsdom hooks; roughly correspond to spec's \"An attribute is removed.\"\n\n\n      element._attrModified(name, null, attribute._value);\n\n      return;\n    }\n  }\n};\n\nexports.replaceAttribute = function (element, oldAttr, newAttr) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-replace\n  const {\n    _localName,\n    _namespace,\n    _value\n  } = oldAttr;\n  queueAttributeMutationRecord(element, _localName, _namespace, _value);\n\n  if (element._ceState === \"custom\") {\n    enqueueCECallbackReaction(element, \"attributeChangedCallback\", [_localName, _value, newAttr._value, _namespace]);\n  }\n\n  const attributeList = element._attributeList;\n\n  for (let i = 0; i < attributeList.length; ++i) {\n    if (attributeList[i] === oldAttr) {\n      attributeList.splice(i, 1, newAttr);\n      oldAttr._element = null;\n      newAttr._element = element; // Sync name cache\n\n      const name = newAttr._qualifiedName;\n      const cache = element._attributesByNameMap;\n      let entry = cache.get(name);\n\n      if (!entry) {\n        entry = [];\n        cache.set(name, entry);\n      }\n\n      entry.splice(entry.indexOf(oldAttr), 1, newAttr); // Run jsdom hooks; roughly correspond to spec's \"An attribute is set and an attribute is changed.\"\n\n      element._attrModified(name, newAttr._value, oldAttr._value);\n\n      return;\n    }\n  }\n};\n\nexports.getAttributeByName = function (element, name) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-get-by-name\n  if (element._namespaceURI === HTML_NS && element._ownerDocument._parsingMode === \"html\") {\n    name = asciiLowercase(name);\n  }\n\n  const cache = element._attributesByNameMap;\n  const entry = cache.get(name);\n\n  if (!entry) {\n    return null;\n  }\n\n  return entry[0];\n};\n\nexports.getAttributeByNameNS = function (element, namespace, localName) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-get-by-namespace\n  if (namespace === \"\") {\n    namespace = null;\n  }\n\n  const attributeList = element._attributeList;\n\n  for (let i = 0; i < attributeList.length; ++i) {\n    const attr = attributeList[i];\n\n    if (attr._namespace === namespace && attr._localName === localName) {\n      return attr;\n    }\n  }\n\n  return null;\n}; // Both of the following functions implement https://dom.spec.whatwg.org/#concept-element-attributes-get-value.\n// Separated them into two to keep symmetry with other functions.\n\n\nexports.getAttributeValue = function (element, localName) {\n  const attr = exports.getAttributeByNameNS(element, null, localName);\n\n  if (!attr) {\n    return \"\";\n  }\n\n  return attr._value;\n};\n\nexports.getAttributeValueNS = function (element, namespace, localName) {\n  const attr = exports.getAttributeByNameNS(element, namespace, localName);\n\n  if (!attr) {\n    return \"\";\n  }\n\n  return attr._value;\n};\n\nexports.setAttribute = function (element, attr) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-set\n  if (attr._element !== null && attr._element !== element) {\n    throw DOMException.create(element._globalObject, [\"The attribute is in use.\", \"InUseAttributeError\"]);\n  }\n\n  const oldAttr = exports.getAttributeByNameNS(element, attr._namespace, attr._localName);\n\n  if (oldAttr === attr) {\n    return attr;\n  }\n\n  if (oldAttr !== null) {\n    exports.replaceAttribute(element, oldAttr, attr);\n  } else {\n    exports.appendAttribute(element, attr);\n  }\n\n  return oldAttr;\n};\n\nexports.setAttributeValue = function (element, localName, value, prefix, namespace) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-set-value\n  if (prefix === undefined) {\n    prefix = null;\n  }\n\n  if (namespace === undefined) {\n    namespace = null;\n  }\n\n  const attribute = exports.getAttributeByNameNS(element, namespace, localName);\n\n  if (attribute === null) {\n    const newAttribute = element._ownerDocument._createAttribute({\n      namespace,\n      namespacePrefix: prefix,\n      localName,\n      value\n    });\n\n    exports.appendAttribute(element, newAttribute);\n    return;\n  }\n\n  exports.changeAttribute(element, attribute, value);\n}; // https://dom.spec.whatwg.org/#set-an-existing-attribute-value\n\n\nexports.setAnExistingAttributeValue = (attribute, value) => {\n  const element = attribute._element;\n\n  if (element === null) {\n    attribute._value = value;\n  } else {\n    exports.changeAttribute(element, attribute, value);\n  }\n};\n\nexports.removeAttributeByName = function (element, name) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-remove-by-name\n  const attr = exports.getAttributeByName(element, name);\n\n  if (attr !== null) {\n    exports.removeAttribute(element, attr);\n  }\n\n  return attr;\n};\n\nexports.removeAttributeByNameNS = function (element, namespace, localName) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-remove-by-namespace\n  const attr = exports.getAttributeByNameNS(element, namespace, localName);\n\n  if (attr !== null) {\n    exports.removeAttribute(element, attr);\n  }\n\n  return attr;\n};\n\nexports.attributeNames = function (element) {\n  // Needed by https://dom.spec.whatwg.org/#dom-element-getattributenames\n  return element._attributeList.map(a => a._qualifiedName);\n};\n\nexports.hasAttributes = function (element) {\n  // Needed by https://dom.spec.whatwg.org/#dom-element-hasattributes\n  return element._attributeList.length > 0;\n};","map":{"version":3,"sources":["/Library/WebServer/Documents/capstone/capstone-project-re-coder/node_modules/jsdom/lib/jsdom/living/attributes.js"],"names":["DOMException","require","HTML_NS","asciiLowercase","queueAttributeMutationRecord","enqueueCECallbackReaction","exports","hasAttribute","element","A","_attributeList","includes","hasAttributeByName","name","_attributesByNameMap","has","hasAttributeByNameNS","namespace","localName","some","attribute","_localName","_namespace","changeAttribute","value","_value","_ceState","_attrModified","_qualifiedName","appendAttribute","attributeList","push","_element","cache","entry","get","set","removeAttribute","i","length","splice","indexOf","delete","replaceAttribute","oldAttr","newAttr","getAttributeByName","_namespaceURI","_ownerDocument","_parsingMode","getAttributeByNameNS","attr","getAttributeValue","getAttributeValueNS","setAttribute","create","_globalObject","setAttributeValue","prefix","undefined","newAttribute","_createAttribute","namespacePrefix","setAnExistingAttributeValue","removeAttributeByName","removeAttributeByNameNS","attributeNames","map","a","hasAttributes"],"mappings":"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","sourcesContent":["\"use strict\";\nconst DOMException = require(\"domexception/webidl2js-wrapper\");\n\nconst { HTML_NS } = require(\"./helpers/namespaces\");\nconst { asciiLowercase } = require(\"./helpers/strings\");\nconst { queueAttributeMutationRecord } = require(\"./helpers/mutation-observers\");\nconst { enqueueCECallbackReaction } = require(\"./helpers/custom-elements\");\n\n// The following three are for https://dom.spec.whatwg.org/#concept-element-attribute-has. We don't just have a\n// predicate tester since removing that kind of flexibility gives us the potential for better future optimizations.\n\n/* eslint-disable no-restricted-properties */\n\nexports.hasAttribute = function (element, A) {\n  return element._attributeList.includes(A);\n};\n\nexports.hasAttributeByName = function (element, name) {\n  return element._attributesByNameMap.has(name);\n};\n\nexports.hasAttributeByNameNS = function (element, namespace, localName) {\n  return element._attributeList.some(attribute => {\n    return attribute._localName === localName && attribute._namespace === namespace;\n  });\n};\n\n// https://dom.spec.whatwg.org/#concept-element-attributes-change\nexports.changeAttribute = (element, attribute, value) => {\n  const { _localName, _namespace, _value } = attribute;\n\n  queueAttributeMutationRecord(element, _localName, _namespace, _value);\n\n  if (element._ceState === \"custom\") {\n    enqueueCECallbackReaction(element, \"attributeChangedCallback\", [\n      _localName,\n      _value,\n      value,\n      _namespace\n    ]);\n  }\n\n  attribute._value = value;\n\n  // Run jsdom hooks; roughly correspond to spec's \"An attribute is set and an attribute is changed.\"\n  element._attrModified(attribute._qualifiedName, value, _value);\n};\n\n// https://dom.spec.whatwg.org/#concept-element-attributes-append\nexports.appendAttribute = function (element, attribute) {\n  const { _localName, _namespace, _value } = attribute;\n  queueAttributeMutationRecord(element, _localName, _namespace, null);\n\n  if (element._ceState === \"custom\") {\n    enqueueCECallbackReaction(element, \"attributeChangedCallback\", [\n      _localName,\n      null,\n      _value,\n      _namespace\n    ]);\n  }\n\n  const attributeList = element._attributeList;\n\n  attributeList.push(attribute);\n  attribute._element = element;\n\n  // Sync name cache\n  const name = attribute._qualifiedName;\n  const cache = element._attributesByNameMap;\n  let entry = cache.get(name);\n  if (!entry) {\n    entry = [];\n    cache.set(name, entry);\n  }\n  entry.push(attribute);\n\n  // Run jsdom hooks; roughly correspond to spec's \"An attribute is set and an attribute is added.\"\n  element._attrModified(name, _value, null);\n};\n\nexports.removeAttribute = function (element, attribute) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-remove\n\n  const { _localName, _namespace, _value } = attribute;\n\n  queueAttributeMutationRecord(element, _localName, _namespace, _value);\n\n  if (element._ceState === \"custom\") {\n    enqueueCECallbackReaction(element, \"attributeChangedCallback\", [\n      _localName,\n      _value,\n      null,\n      _namespace\n    ]);\n  }\n\n  const attributeList = element._attributeList;\n\n  for (let i = 0; i < attributeList.length; ++i) {\n    if (attributeList[i] === attribute) {\n      attributeList.splice(i, 1);\n      attribute._element = null;\n\n      // Sync name cache\n      const name = attribute._qualifiedName;\n      const cache = element._attributesByNameMap;\n      const entry = cache.get(name);\n      entry.splice(entry.indexOf(attribute), 1);\n      if (entry.length === 0) {\n        cache.delete(name);\n      }\n\n      // Run jsdom hooks; roughly correspond to spec's \"An attribute is removed.\"\n      element._attrModified(name, null, attribute._value);\n\n      return;\n    }\n  }\n};\n\nexports.replaceAttribute = function (element, oldAttr, newAttr) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-replace\n\n  const { _localName, _namespace, _value } = oldAttr;\n\n  queueAttributeMutationRecord(element, _localName, _namespace, _value);\n\n  if (element._ceState === \"custom\") {\n    enqueueCECallbackReaction(element, \"attributeChangedCallback\", [\n      _localName,\n      _value,\n      newAttr._value,\n      _namespace\n    ]);\n  }\n\n  const attributeList = element._attributeList;\n\n  for (let i = 0; i < attributeList.length; ++i) {\n    if (attributeList[i] === oldAttr) {\n      attributeList.splice(i, 1, newAttr);\n      oldAttr._element = null;\n      newAttr._element = element;\n\n      // Sync name cache\n      const name = newAttr._qualifiedName;\n      const cache = element._attributesByNameMap;\n      let entry = cache.get(name);\n      if (!entry) {\n        entry = [];\n        cache.set(name, entry);\n      }\n      entry.splice(entry.indexOf(oldAttr), 1, newAttr);\n\n      // Run jsdom hooks; roughly correspond to spec's \"An attribute is set and an attribute is changed.\"\n      element._attrModified(name, newAttr._value, oldAttr._value);\n\n      return;\n    }\n  }\n};\n\nexports.getAttributeByName = function (element, name) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-get-by-name\n\n  if (element._namespaceURI === HTML_NS &&\n      element._ownerDocument._parsingMode === \"html\") {\n    name = asciiLowercase(name);\n  }\n\n  const cache = element._attributesByNameMap;\n  const entry = cache.get(name);\n  if (!entry) {\n    return null;\n  }\n\n  return entry[0];\n};\n\nexports.getAttributeByNameNS = function (element, namespace, localName) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-get-by-namespace\n\n  if (namespace === \"\") {\n    namespace = null;\n  }\n\n  const attributeList = element._attributeList;\n  for (let i = 0; i < attributeList.length; ++i) {\n    const attr = attributeList[i];\n    if (attr._namespace === namespace && attr._localName === localName) {\n      return attr;\n    }\n  }\n\n  return null;\n};\n\n// Both of the following functions implement https://dom.spec.whatwg.org/#concept-element-attributes-get-value.\n// Separated them into two to keep symmetry with other functions.\nexports.getAttributeValue = function (element, localName) {\n  const attr = exports.getAttributeByNameNS(element, null, localName);\n\n  if (!attr) {\n    return \"\";\n  }\n\n  return attr._value;\n};\n\nexports.getAttributeValueNS = function (element, namespace, localName) {\n  const attr = exports.getAttributeByNameNS(element, namespace, localName);\n\n  if (!attr) {\n    return \"\";\n  }\n\n  return attr._value;\n};\n\nexports.setAttribute = function (element, attr) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-set\n\n  if (attr._element !== null && attr._element !== element) {\n    throw DOMException.create(element._globalObject, [\"The attribute is in use.\", \"InUseAttributeError\"]);\n  }\n\n  const oldAttr = exports.getAttributeByNameNS(element, attr._namespace, attr._localName);\n  if (oldAttr === attr) {\n    return attr;\n  }\n\n  if (oldAttr !== null) {\n    exports.replaceAttribute(element, oldAttr, attr);\n  } else {\n    exports.appendAttribute(element, attr);\n  }\n\n  return oldAttr;\n};\n\nexports.setAttributeValue = function (element, localName, value, prefix, namespace) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-set-value\n\n  if (prefix === undefined) {\n    prefix = null;\n  }\n  if (namespace === undefined) {\n    namespace = null;\n  }\n\n  const attribute = exports.getAttributeByNameNS(element, namespace, localName);\n  if (attribute === null) {\n    const newAttribute = element._ownerDocument._createAttribute({\n      namespace,\n      namespacePrefix: prefix,\n      localName,\n      value\n    });\n    exports.appendAttribute(element, newAttribute);\n\n    return;\n  }\n\n  exports.changeAttribute(element, attribute, value);\n};\n\n// https://dom.spec.whatwg.org/#set-an-existing-attribute-value\nexports.setAnExistingAttributeValue = (attribute, value) => {\n  const element = attribute._element;\n  if (element === null) {\n    attribute._value = value;\n  } else {\n    exports.changeAttribute(element, attribute, value);\n  }\n};\n\nexports.removeAttributeByName = function (element, name) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-remove-by-name\n\n  const attr = exports.getAttributeByName(element, name);\n\n  if (attr !== null) {\n    exports.removeAttribute(element, attr);\n  }\n\n  return attr;\n};\n\nexports.removeAttributeByNameNS = function (element, namespace, localName) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-remove-by-namespace\n\n  const attr = exports.getAttributeByNameNS(element, namespace, localName);\n\n  if (attr !== null) {\n    exports.removeAttribute(element, attr);\n  }\n\n  return attr;\n};\n\nexports.attributeNames = function (element) {\n  // Needed by https://dom.spec.whatwg.org/#dom-element-getattributenames\n\n  return element._attributeList.map(a => a._qualifiedName);\n};\n\nexports.hasAttributes = function (element) {\n  // Needed by https://dom.spec.whatwg.org/#dom-element-hasattributes\n\n  return element._attributeList.length > 0;\n};\n"]},"metadata":{},"sourceType":"script"}