{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst ceReactionsPreSteps_helpers_custom_elements = require(\"../helpers/custom-elements.js\").ceReactionsPreSteps;\n\nconst ceReactionsPostSteps_helpers_custom_elements = require(\"../helpers/custom-elements.js\").ceReactionsPostSteps;\n\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\nconst interfaceName = \"DOMStringMap\";\n\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\n\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\n\nexports.convert = (value, {\n  context = \"The provided value\"\n} = {}) => {\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n\n  throw new TypeError(`${context} is not of type 'DOMStringMap'.`);\n};\n\nfunction makeWrapper(globalObject) {\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    throw new Error(\"Internal error: invalid global object\");\n  }\n\n  const ctor = globalObject[ctorRegistrySymbol][\"DOMStringMap\"];\n\n  if (ctor === undefined) {\n    throw new Error(\"Internal error: constructor DOMStringMap is not installed on the passed global object\");\n  }\n\n  return Object.create(ctor.prototype);\n}\n\nfunction makeProxy(wrapper, globalObject) {\n  let proxyHandler = proxyHandlerCache.get(globalObject);\n\n  if (proxyHandler === undefined) {\n    proxyHandler = new ProxyHandler(globalObject);\n    proxyHandlerCache.set(globalObject, proxyHandler);\n  }\n\n  return new Proxy(wrapper, proxyHandler);\n}\n\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = (wrapper, globalObject) => {};\n\nexports.setup = (wrapper, globalObject, constructorArgs = [], privateData = {}) => {\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n  wrapper = makeProxy(wrapper, globalObject);\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n\n  return wrapper;\n};\n\nexports.new = globalObject => {\n  let wrapper = makeWrapper(globalObject);\n\n  exports._internalSetup(wrapper, globalObject);\n\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n  wrapper = makeProxy(wrapper, globalObject);\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n\n  return wrapper[implSymbol];\n};\n\nconst exposed = new Set([\"Window\"]);\n\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n\n  class DOMStringMap {\n    constructor() {\n      throw new TypeError(\"Illegal constructor\");\n    }\n\n  }\n\n  Object.defineProperties(DOMStringMap.prototype, {\n    [Symbol.toStringTag]: {\n      value: \"DOMStringMap\",\n      configurable: true\n    }\n  });\n\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    globalObject[ctorRegistrySymbol] = Object.create(null);\n  }\n\n  globalObject[ctorRegistrySymbol][interfaceName] = DOMStringMap;\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: DOMStringMap\n  });\n};\n\nconst proxyHandlerCache = new WeakMap();\n\nclass ProxyHandler {\n  constructor(globalObject) {\n    this._globalObject = globalObject;\n  }\n\n  get(target, P, receiver) {\n    if (typeof P === \"symbol\") {\n      return Reflect.get(target, P, receiver);\n    }\n\n    const desc = this.getOwnPropertyDescriptor(target, P);\n\n    if (desc === undefined) {\n      const parent = Object.getPrototypeOf(target);\n\n      if (parent === null) {\n        return undefined;\n      }\n\n      return Reflect.get(target, P, receiver);\n    }\n\n    if (!desc.get && !desc.set) {\n      return desc.value;\n    }\n\n    const getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return Reflect.apply(getter, receiver, []);\n  }\n\n  has(target, P) {\n    if (typeof P === \"symbol\") {\n      return Reflect.has(target, P);\n    }\n\n    const desc = this.getOwnPropertyDescriptor(target, P);\n\n    if (desc !== undefined) {\n      return true;\n    }\n\n    const parent = Object.getPrototypeOf(target);\n\n    if (parent !== null) {\n      return Reflect.has(parent, P);\n    }\n\n    return false;\n  }\n\n  ownKeys(target) {\n    const keys = new Set();\n\n    for (const key of target[implSymbol][utils.supportedPropertyNames]) {\n      if (!utils.hasOwn(target, key)) {\n        keys.add(`${key}`);\n      }\n    }\n\n    for (const key of Reflect.ownKeys(target)) {\n      keys.add(key);\n    }\n\n    return [...keys];\n  }\n\n  getOwnPropertyDescriptor(target, P) {\n    if (typeof P === \"symbol\") {\n      return Reflect.getOwnPropertyDescriptor(target, P);\n    }\n\n    let ignoreNamedProps = false;\n    const namedValue = target[implSymbol][utils.namedGet](P);\n\n    if (namedValue !== undefined && !utils.hasOwn(target, P) && !ignoreNamedProps) {\n      return {\n        writable: true,\n        enumerable: true,\n        configurable: true,\n        value: utils.tryWrapperForImpl(namedValue)\n      };\n    }\n\n    return Reflect.getOwnPropertyDescriptor(target, P);\n  }\n\n  set(target, P, V, receiver) {\n    if (typeof P === \"symbol\") {\n      return Reflect.set(target, P, V, receiver);\n    }\n\n    if (target === receiver) {\n      const globalObject = this._globalObject;\n\n      if (typeof P === \"string\" && !utils.isArrayIndexPropName(P)) {\n        let namedValue = V;\n        namedValue = conversions[\"DOMString\"](namedValue, {\n          context: \"Failed to set the '\" + P + \"' property on 'DOMStringMap': The provided value\"\n        });\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          const creating = !(target[implSymbol][utils.namedGet](P) !== undefined);\n\n          if (creating) {\n            target[implSymbol][utils.namedSetNew](P, namedValue);\n          } else {\n            target[implSymbol][utils.namedSetExisting](P, namedValue);\n          }\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n\n        return true;\n      }\n    }\n\n    let ownDesc;\n\n    if (ownDesc === undefined) {\n      ownDesc = Reflect.getOwnPropertyDescriptor(target, P);\n    }\n\n    if (ownDesc === undefined) {\n      const parent = Reflect.getPrototypeOf(target);\n\n      if (parent !== null) {\n        return Reflect.set(parent, P, V, receiver);\n      }\n\n      ownDesc = {\n        writable: true,\n        enumerable: true,\n        configurable: true,\n        value: undefined\n      };\n    }\n\n    if (!ownDesc.writable) {\n      return false;\n    }\n\n    if (!utils.isObject(receiver)) {\n      return false;\n    }\n\n    const existingDesc = Reflect.getOwnPropertyDescriptor(receiver, P);\n    let valueDesc;\n\n    if (existingDesc !== undefined) {\n      if (existingDesc.get || existingDesc.set) {\n        return false;\n      }\n\n      if (!existingDesc.writable) {\n        return false;\n      }\n\n      valueDesc = {\n        value: V\n      };\n    } else {\n      valueDesc = {\n        writable: true,\n        enumerable: true,\n        configurable: true,\n        value: V\n      };\n    }\n\n    return Reflect.defineProperty(receiver, P, valueDesc);\n  }\n\n  defineProperty(target, P, desc) {\n    if (typeof P === \"symbol\") {\n      return Reflect.defineProperty(target, P, desc);\n    }\n\n    const globalObject = this._globalObject;\n\n    if (desc.get || desc.set) {\n      return false;\n    }\n\n    let namedValue = desc.value;\n    namedValue = conversions[\"DOMString\"](namedValue, {\n      context: \"Failed to set the '\" + P + \"' property on 'DOMStringMap': The provided value\"\n    });\n    ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n    try {\n      const creating = !(target[implSymbol][utils.namedGet](P) !== undefined);\n\n      if (creating) {\n        target[implSymbol][utils.namedSetNew](P, namedValue);\n      } else {\n        target[implSymbol][utils.namedSetExisting](P, namedValue);\n      }\n    } finally {\n      ceReactionsPostSteps_helpers_custom_elements(globalObject);\n    }\n\n    return true;\n  }\n\n  deleteProperty(target, P) {\n    if (typeof P === \"symbol\") {\n      return Reflect.deleteProperty(target, P);\n    }\n\n    const globalObject = this._globalObject;\n\n    if (target[implSymbol][utils.namedGet](P) !== undefined && !utils.hasOwn(target, P)) {\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n      try {\n        target[implSymbol][utils.namedDelete](P);\n        return true;\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n\n    return Reflect.deleteProperty(target, P);\n  }\n\n  preventExtensions() {\n    return false;\n  }\n\n}\n\nconst Impl = require(\"../nodes/DOMStringMap-impl.js\");","map":{"version":3,"sources":["/Library/WebServer/Documents/capstone/capstone-project-re-coder/node_modules/jsdom/lib/jsdom/living/generated/DOMStringMap.js"],"names":["conversions","require","utils","ceReactionsPreSteps_helpers_custom_elements","ceReactionsPreSteps","ceReactionsPostSteps_helpers_custom_elements","ceReactionsPostSteps","implSymbol","ctorRegistrySymbol","interfaceName","exports","is","value","isObject","hasOwn","Impl","implementation","isImpl","convert","context","implForWrapper","TypeError","makeWrapper","globalObject","undefined","Error","ctor","Object","create","prototype","makeProxy","wrapper","proxyHandler","proxyHandlerCache","get","ProxyHandler","set","Proxy","constructorArgs","privateData","setup","createImpl","_internalSetup","defineProperty","configurable","wrapperSymbol","init","new","exposed","Set","install","globalNames","some","globalName","has","DOMStringMap","constructor","defineProperties","Symbol","toStringTag","writable","WeakMap","_globalObject","target","P","receiver","Reflect","desc","getOwnPropertyDescriptor","parent","getPrototypeOf","getter","apply","ownKeys","keys","key","supportedPropertyNames","add","ignoreNamedProps","namedValue","namedGet","enumerable","tryWrapperForImpl","V","isArrayIndexPropName","creating","namedSetNew","namedSetExisting","ownDesc","existingDesc","valueDesc","deleteProperty","namedDelete","preventExtensions"],"mappings":"AAAA;;AAEA,MAAMA,WAAW,GAAGC,OAAO,CAAC,oBAAD,CAA3B;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,YAAD,CAArB;;AAEA,MAAME,2CAA2C,GAAGF,OAAO,CAAC,+BAAD,CAAP,CAAyCG,mBAA7F;;AACA,MAAMC,4CAA4C,GAAGJ,OAAO,CAAC,+BAAD,CAAP,CAAyCK,oBAA9F;;AACA,MAAMC,UAAU,GAAGL,KAAK,CAACK,UAAzB;AACA,MAAMC,kBAAkB,GAAGN,KAAK,CAACM,kBAAjC;AAEA,MAAMC,aAAa,GAAG,cAAtB;;AAEAC,OAAO,CAACC,EAAR,GAAaC,KAAK,IAAI;AACpB,SAAOV,KAAK,CAACW,QAAN,CAAeD,KAAf,KAAyBV,KAAK,CAACY,MAAN,CAAaF,KAAb,EAAoBL,UAApB,CAAzB,IAA4DK,KAAK,CAACL,UAAD,CAAL,YAA6BQ,IAAI,CAACC,cAArG;AACD,CAFD;;AAGAN,OAAO,CAACO,MAAR,GAAiBL,KAAK,IAAI;AACxB,SAAOV,KAAK,CAACW,QAAN,CAAeD,KAAf,KAAyBA,KAAK,YAAYG,IAAI,CAACC,cAAtD;AACD,CAFD;;AAGAN,OAAO,CAACQ,OAAR,GAAkB,CAACN,KAAD,EAAQ;AAAEO,EAAAA,OAAO,GAAG;AAAZ,IAAqC,EAA7C,KAAoD;AACpE,MAAIT,OAAO,CAACC,EAAR,CAAWC,KAAX,CAAJ,EAAuB;AACrB,WAAOV,KAAK,CAACkB,cAAN,CAAqBR,KAArB,CAAP;AACD;;AACD,QAAM,IAAIS,SAAJ,CAAe,GAAEF,OAAQ,iCAAzB,CAAN;AACD,CALD;;AAOA,SAASG,WAAT,CAAqBC,YAArB,EAAmC;AACjC,MAAIA,YAAY,CAACf,kBAAD,CAAZ,KAAqCgB,SAAzC,EAAoD;AAClD,UAAM,IAAIC,KAAJ,CAAU,uCAAV,CAAN;AACD;;AAED,QAAMC,IAAI,GAAGH,YAAY,CAACf,kBAAD,CAAZ,CAAiC,cAAjC,CAAb;;AACA,MAAIkB,IAAI,KAAKF,SAAb,EAAwB;AACtB,UAAM,IAAIC,KAAJ,CAAU,uFAAV,CAAN;AACD;;AAED,SAAOE,MAAM,CAACC,MAAP,CAAcF,IAAI,CAACG,SAAnB,CAAP;AACD;;AAED,SAASC,SAAT,CAAmBC,OAAnB,EAA4BR,YAA5B,EAA0C;AACxC,MAAIS,YAAY,GAAGC,iBAAiB,CAACC,GAAlB,CAAsBX,YAAtB,CAAnB;;AACA,MAAIS,YAAY,KAAKR,SAArB,EAAgC;AAC9BQ,IAAAA,YAAY,GAAG,IAAIG,YAAJ,CAAiBZ,YAAjB,CAAf;AACAU,IAAAA,iBAAiB,CAACG,GAAlB,CAAsBb,YAAtB,EAAoCS,YAApC;AACD;;AACD,SAAO,IAAIK,KAAJ,CAAUN,OAAV,EAAmBC,YAAnB,CAAP;AACD;;AAEDtB,OAAO,CAACkB,MAAR,GAAiB,CAACL,YAAD,EAAee,eAAf,EAAgCC,WAAhC,KAAgD;AAC/D,QAAMR,OAAO,GAAGT,WAAW,CAACC,YAAD,CAA3B;AACA,SAAOb,OAAO,CAAC8B,KAAR,CAAcT,OAAd,EAAuBR,YAAvB,EAAqCe,eAArC,EAAsDC,WAAtD,CAAP;AACD,CAHD;;AAKA7B,OAAO,CAAC+B,UAAR,GAAqB,CAAClB,YAAD,EAAee,eAAf,EAAgCC,WAAhC,KAAgD;AACnE,QAAMR,OAAO,GAAGrB,OAAO,CAACkB,MAAR,CAAeL,YAAf,EAA6Be,eAA7B,EAA8CC,WAA9C,CAAhB;AACA,SAAOrC,KAAK,CAACkB,cAAN,CAAqBW,OAArB,CAAP;AACD,CAHD;;AAKArB,OAAO,CAACgC,cAAR,GAAyB,CAACX,OAAD,EAAUR,YAAV,KAA2B,CAAE,CAAtD;;AAEAb,OAAO,CAAC8B,KAAR,GAAgB,CAACT,OAAD,EAAUR,YAAV,EAAwBe,eAAe,GAAG,EAA1C,EAA8CC,WAAW,GAAG,EAA5D,KAAmE;AACjFA,EAAAA,WAAW,CAACR,OAAZ,GAAsBA,OAAtB;;AAEArB,EAAAA,OAAO,CAACgC,cAAR,CAAuBX,OAAvB,EAAgCR,YAAhC;;AACAI,EAAAA,MAAM,CAACgB,cAAP,CAAsBZ,OAAtB,EAA+BxB,UAA/B,EAA2C;AACzCK,IAAAA,KAAK,EAAE,IAAIG,IAAI,CAACC,cAAT,CAAwBO,YAAxB,EAAsCe,eAAtC,EAAuDC,WAAvD,CADkC;AAEzCK,IAAAA,YAAY,EAAE;AAF2B,GAA3C;AAKAb,EAAAA,OAAO,GAAGD,SAAS,CAACC,OAAD,EAAUR,YAAV,CAAnB;AAEAQ,EAAAA,OAAO,CAACxB,UAAD,CAAP,CAAoBL,KAAK,CAAC2C,aAA1B,IAA2Cd,OAA3C;;AACA,MAAIhB,IAAI,CAAC+B,IAAT,EAAe;AACb/B,IAAAA,IAAI,CAAC+B,IAAL,CAAUf,OAAO,CAACxB,UAAD,CAAjB;AACD;;AACD,SAAOwB,OAAP;AACD,CAhBD;;AAkBArB,OAAO,CAACqC,GAAR,GAAcxB,YAAY,IAAI;AAC5B,MAAIQ,OAAO,GAAGT,WAAW,CAACC,YAAD,CAAzB;;AAEAb,EAAAA,OAAO,CAACgC,cAAR,CAAuBX,OAAvB,EAAgCR,YAAhC;;AACAI,EAAAA,MAAM,CAACgB,cAAP,CAAsBZ,OAAtB,EAA+BxB,UAA/B,EAA2C;AACzCK,IAAAA,KAAK,EAAEe,MAAM,CAACC,MAAP,CAAcb,IAAI,CAACC,cAAL,CAAoBa,SAAlC,CADkC;AAEzCe,IAAAA,YAAY,EAAE;AAF2B,GAA3C;AAKAb,EAAAA,OAAO,GAAGD,SAAS,CAACC,OAAD,EAAUR,YAAV,CAAnB;AAEAQ,EAAAA,OAAO,CAACxB,UAAD,CAAP,CAAoBL,KAAK,CAAC2C,aAA1B,IAA2Cd,OAA3C;;AACA,MAAIhB,IAAI,CAAC+B,IAAT,EAAe;AACb/B,IAAAA,IAAI,CAAC+B,IAAL,CAAUf,OAAO,CAACxB,UAAD,CAAjB;AACD;;AACD,SAAOwB,OAAO,CAACxB,UAAD,CAAd;AACD,CAhBD;;AAkBA,MAAMyC,OAAO,GAAG,IAAIC,GAAJ,CAAQ,CAAC,QAAD,CAAR,CAAhB;;AAEAvC,OAAO,CAACwC,OAAR,GAAkB,CAAC3B,YAAD,EAAe4B,WAAf,KAA+B;AAC/C,MAAI,CAACA,WAAW,CAACC,IAAZ,CAAiBC,UAAU,IAAIL,OAAO,CAACM,GAAR,CAAYD,UAAZ,CAA/B,CAAL,EAA8D;AAC5D;AACD;;AACD,QAAME,YAAN,CAAmB;AACjBC,IAAAA,WAAW,GAAG;AACZ,YAAM,IAAInC,SAAJ,CAAc,qBAAd,CAAN;AACD;;AAHgB;;AAKnBM,EAAAA,MAAM,CAAC8B,gBAAP,CAAwBF,YAAY,CAAC1B,SAArC,EAAgD;AAC9C,KAAC6B,MAAM,CAACC,WAAR,GAAsB;AAAE/C,MAAAA,KAAK,EAAE,cAAT;AAAyBgC,MAAAA,YAAY,EAAE;AAAvC;AADwB,GAAhD;;AAGA,MAAIrB,YAAY,CAACf,kBAAD,CAAZ,KAAqCgB,SAAzC,EAAoD;AAClDD,IAAAA,YAAY,CAACf,kBAAD,CAAZ,GAAmCmB,MAAM,CAACC,MAAP,CAAc,IAAd,CAAnC;AACD;;AACDL,EAAAA,YAAY,CAACf,kBAAD,CAAZ,CAAiCC,aAAjC,IAAkD8C,YAAlD;AAEA5B,EAAAA,MAAM,CAACgB,cAAP,CAAsBpB,YAAtB,EAAoCd,aAApC,EAAmD;AACjDmC,IAAAA,YAAY,EAAE,IADmC;AAEjDgB,IAAAA,QAAQ,EAAE,IAFuC;AAGjDhD,IAAAA,KAAK,EAAE2C;AAH0C,GAAnD;AAKD,CAtBD;;AAwBA,MAAMtB,iBAAiB,GAAG,IAAI4B,OAAJ,EAA1B;;AACA,MAAM1B,YAAN,CAAmB;AACjBqB,EAAAA,WAAW,CAACjC,YAAD,EAAe;AACxB,SAAKuC,aAAL,GAAqBvC,YAArB;AACD;;AAEDW,EAAAA,GAAG,CAAC6B,MAAD,EAASC,CAAT,EAAYC,QAAZ,EAAsB;AACvB,QAAI,OAAOD,CAAP,KAAa,QAAjB,EAA2B;AACzB,aAAOE,OAAO,CAAChC,GAAR,CAAY6B,MAAZ,EAAoBC,CAApB,EAAuBC,QAAvB,CAAP;AACD;;AACD,UAAME,IAAI,GAAG,KAAKC,wBAAL,CAA8BL,MAA9B,EAAsCC,CAAtC,CAAb;;AACA,QAAIG,IAAI,KAAK3C,SAAb,EAAwB;AACtB,YAAM6C,MAAM,GAAG1C,MAAM,CAAC2C,cAAP,CAAsBP,MAAtB,CAAf;;AACA,UAAIM,MAAM,KAAK,IAAf,EAAqB;AACnB,eAAO7C,SAAP;AACD;;AACD,aAAO0C,OAAO,CAAChC,GAAR,CAAY6B,MAAZ,EAAoBC,CAApB,EAAuBC,QAAvB,CAAP;AACD;;AACD,QAAI,CAACE,IAAI,CAACjC,GAAN,IAAa,CAACiC,IAAI,CAAC/B,GAAvB,EAA4B;AAC1B,aAAO+B,IAAI,CAACvD,KAAZ;AACD;;AACD,UAAM2D,MAAM,GAAGJ,IAAI,CAACjC,GAApB;;AACA,QAAIqC,MAAM,KAAK/C,SAAf,EAA0B;AACxB,aAAOA,SAAP;AACD;;AACD,WAAO0C,OAAO,CAACM,KAAR,CAAcD,MAAd,EAAsBN,QAAtB,EAAgC,EAAhC,CAAP;AACD;;AAEDX,EAAAA,GAAG,CAACS,MAAD,EAASC,CAAT,EAAY;AACb,QAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B;AACzB,aAAOE,OAAO,CAACZ,GAAR,CAAYS,MAAZ,EAAoBC,CAApB,CAAP;AACD;;AACD,UAAMG,IAAI,GAAG,KAAKC,wBAAL,CAA8BL,MAA9B,EAAsCC,CAAtC,CAAb;;AACA,QAAIG,IAAI,KAAK3C,SAAb,EAAwB;AACtB,aAAO,IAAP;AACD;;AACD,UAAM6C,MAAM,GAAG1C,MAAM,CAAC2C,cAAP,CAAsBP,MAAtB,CAAf;;AACA,QAAIM,MAAM,KAAK,IAAf,EAAqB;AACnB,aAAOH,OAAO,CAACZ,GAAR,CAAYe,MAAZ,EAAoBL,CAApB,CAAP;AACD;;AACD,WAAO,KAAP;AACD;;AAEDS,EAAAA,OAAO,CAACV,MAAD,EAAS;AACd,UAAMW,IAAI,GAAG,IAAIzB,GAAJ,EAAb;;AAEA,SAAK,MAAM0B,GAAX,IAAkBZ,MAAM,CAACxD,UAAD,CAAN,CAAmBL,KAAK,CAAC0E,sBAAzB,CAAlB,EAAoE;AAClE,UAAI,CAAC1E,KAAK,CAACY,MAAN,CAAaiD,MAAb,EAAqBY,GAArB,CAAL,EAAgC;AAC9BD,QAAAA,IAAI,CAACG,GAAL,CAAU,GAAEF,GAAI,EAAhB;AACD;AACF;;AAED,SAAK,MAAMA,GAAX,IAAkBT,OAAO,CAACO,OAAR,CAAgBV,MAAhB,CAAlB,EAA2C;AACzCW,MAAAA,IAAI,CAACG,GAAL,CAASF,GAAT;AACD;;AACD,WAAO,CAAC,GAAGD,IAAJ,CAAP;AACD;;AAEDN,EAAAA,wBAAwB,CAACL,MAAD,EAASC,CAAT,EAAY;AAClC,QAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B;AACzB,aAAOE,OAAO,CAACE,wBAAR,CAAiCL,MAAjC,EAAyCC,CAAzC,CAAP;AACD;;AACD,QAAIc,gBAAgB,GAAG,KAAvB;AAEA,UAAMC,UAAU,GAAGhB,MAAM,CAACxD,UAAD,CAAN,CAAmBL,KAAK,CAAC8E,QAAzB,EAAmChB,CAAnC,CAAnB;;AAEA,QAAIe,UAAU,KAAKvD,SAAf,IAA4B,CAACtB,KAAK,CAACY,MAAN,CAAaiD,MAAb,EAAqBC,CAArB,CAA7B,IAAwD,CAACc,gBAA7D,EAA+E;AAC7E,aAAO;AACLlB,QAAAA,QAAQ,EAAE,IADL;AAELqB,QAAAA,UAAU,EAAE,IAFP;AAGLrC,QAAAA,YAAY,EAAE,IAHT;AAILhC,QAAAA,KAAK,EAAEV,KAAK,CAACgF,iBAAN,CAAwBH,UAAxB;AAJF,OAAP;AAMD;;AAED,WAAOb,OAAO,CAACE,wBAAR,CAAiCL,MAAjC,EAAyCC,CAAzC,CAAP;AACD;;AAED5B,EAAAA,GAAG,CAAC2B,MAAD,EAASC,CAAT,EAAYmB,CAAZ,EAAelB,QAAf,EAAyB;AAC1B,QAAI,OAAOD,CAAP,KAAa,QAAjB,EAA2B;AACzB,aAAOE,OAAO,CAAC9B,GAAR,CAAY2B,MAAZ,EAAoBC,CAApB,EAAuBmB,CAAvB,EAA0BlB,QAA1B,CAAP;AACD;;AACD,QAAIF,MAAM,KAAKE,QAAf,EAAyB;AACvB,YAAM1C,YAAY,GAAG,KAAKuC,aAA1B;;AAEA,UAAI,OAAOE,CAAP,KAAa,QAAb,IAAyB,CAAC9D,KAAK,CAACkF,oBAAN,CAA2BpB,CAA3B,CAA9B,EAA6D;AAC3D,YAAIe,UAAU,GAAGI,CAAjB;AAEAJ,QAAAA,UAAU,GAAG/E,WAAW,CAAC,WAAD,CAAX,CAAyB+E,UAAzB,EAAqC;AAChD5D,UAAAA,OAAO,EAAE,wBAAwB6C,CAAxB,GAA4B;AADW,SAArC,CAAb;AAIA7D,QAAAA,2CAA2C,CAACoB,YAAD,CAA3C;;AACA,YAAI;AACF,gBAAM8D,QAAQ,GAAG,EAAEtB,MAAM,CAACxD,UAAD,CAAN,CAAmBL,KAAK,CAAC8E,QAAzB,EAAmChB,CAAnC,MAA0CxC,SAA5C,CAAjB;;AACA,cAAI6D,QAAJ,EAAc;AACZtB,YAAAA,MAAM,CAACxD,UAAD,CAAN,CAAmBL,KAAK,CAACoF,WAAzB,EAAsCtB,CAAtC,EAAyCe,UAAzC;AACD,WAFD,MAEO;AACLhB,YAAAA,MAAM,CAACxD,UAAD,CAAN,CAAmBL,KAAK,CAACqF,gBAAzB,EAA2CvB,CAA3C,EAA8Ce,UAA9C;AACD;AACF,SAPD,SAOU;AACR1E,UAAAA,4CAA4C,CAACkB,YAAD,CAA5C;AACD;;AAED,eAAO,IAAP;AACD;AACF;;AACD,QAAIiE,OAAJ;;AAEA,QAAIA,OAAO,KAAKhE,SAAhB,EAA2B;AACzBgE,MAAAA,OAAO,GAAGtB,OAAO,CAACE,wBAAR,CAAiCL,MAAjC,EAAyCC,CAAzC,CAAV;AACD;;AACD,QAAIwB,OAAO,KAAKhE,SAAhB,EAA2B;AACzB,YAAM6C,MAAM,GAAGH,OAAO,CAACI,cAAR,CAAuBP,MAAvB,CAAf;;AACA,UAAIM,MAAM,KAAK,IAAf,EAAqB;AACnB,eAAOH,OAAO,CAAC9B,GAAR,CAAYiC,MAAZ,EAAoBL,CAApB,EAAuBmB,CAAvB,EAA0BlB,QAA1B,CAAP;AACD;;AACDuB,MAAAA,OAAO,GAAG;AAAE5B,QAAAA,QAAQ,EAAE,IAAZ;AAAkBqB,QAAAA,UAAU,EAAE,IAA9B;AAAoCrC,QAAAA,YAAY,EAAE,IAAlD;AAAwDhC,QAAAA,KAAK,EAAEY;AAA/D,OAAV;AACD;;AACD,QAAI,CAACgE,OAAO,CAAC5B,QAAb,EAAuB;AACrB,aAAO,KAAP;AACD;;AACD,QAAI,CAAC1D,KAAK,CAACW,QAAN,CAAeoD,QAAf,CAAL,EAA+B;AAC7B,aAAO,KAAP;AACD;;AACD,UAAMwB,YAAY,GAAGvB,OAAO,CAACE,wBAAR,CAAiCH,QAAjC,EAA2CD,CAA3C,CAArB;AACA,QAAI0B,SAAJ;;AACA,QAAID,YAAY,KAAKjE,SAArB,EAAgC;AAC9B,UAAIiE,YAAY,CAACvD,GAAb,IAAoBuD,YAAY,CAACrD,GAArC,EAA0C;AACxC,eAAO,KAAP;AACD;;AACD,UAAI,CAACqD,YAAY,CAAC7B,QAAlB,EAA4B;AAC1B,eAAO,KAAP;AACD;;AACD8B,MAAAA,SAAS,GAAG;AAAE9E,QAAAA,KAAK,EAAEuE;AAAT,OAAZ;AACD,KARD,MAQO;AACLO,MAAAA,SAAS,GAAG;AAAE9B,QAAAA,QAAQ,EAAE,IAAZ;AAAkBqB,QAAAA,UAAU,EAAE,IAA9B;AAAoCrC,QAAAA,YAAY,EAAE,IAAlD;AAAwDhC,QAAAA,KAAK,EAAEuE;AAA/D,OAAZ;AACD;;AACD,WAAOjB,OAAO,CAACvB,cAAR,CAAuBsB,QAAvB,EAAiCD,CAAjC,EAAoC0B,SAApC,CAAP;AACD;;AAED/C,EAAAA,cAAc,CAACoB,MAAD,EAASC,CAAT,EAAYG,IAAZ,EAAkB;AAC9B,QAAI,OAAOH,CAAP,KAAa,QAAjB,EAA2B;AACzB,aAAOE,OAAO,CAACvB,cAAR,CAAuBoB,MAAvB,EAA+BC,CAA/B,EAAkCG,IAAlC,CAAP;AACD;;AAED,UAAM5C,YAAY,GAAG,KAAKuC,aAA1B;;AAEA,QAAIK,IAAI,CAACjC,GAAL,IAAYiC,IAAI,CAAC/B,GAArB,EAA0B;AACxB,aAAO,KAAP;AACD;;AAED,QAAI2C,UAAU,GAAGZ,IAAI,CAACvD,KAAtB;AAEAmE,IAAAA,UAAU,GAAG/E,WAAW,CAAC,WAAD,CAAX,CAAyB+E,UAAzB,EAAqC;AAChD5D,MAAAA,OAAO,EAAE,wBAAwB6C,CAAxB,GAA4B;AADW,KAArC,CAAb;AAIA7D,IAAAA,2CAA2C,CAACoB,YAAD,CAA3C;;AACA,QAAI;AACF,YAAM8D,QAAQ,GAAG,EAAEtB,MAAM,CAACxD,UAAD,CAAN,CAAmBL,KAAK,CAAC8E,QAAzB,EAAmChB,CAAnC,MAA0CxC,SAA5C,CAAjB;;AACA,UAAI6D,QAAJ,EAAc;AACZtB,QAAAA,MAAM,CAACxD,UAAD,CAAN,CAAmBL,KAAK,CAACoF,WAAzB,EAAsCtB,CAAtC,EAAyCe,UAAzC;AACD,OAFD,MAEO;AACLhB,QAAAA,MAAM,CAACxD,UAAD,CAAN,CAAmBL,KAAK,CAACqF,gBAAzB,EAA2CvB,CAA3C,EAA8Ce,UAA9C;AACD;AACF,KAPD,SAOU;AACR1E,MAAAA,4CAA4C,CAACkB,YAAD,CAA5C;AACD;;AAED,WAAO,IAAP;AACD;;AAEDoE,EAAAA,cAAc,CAAC5B,MAAD,EAASC,CAAT,EAAY;AACxB,QAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B;AACzB,aAAOE,OAAO,CAACyB,cAAR,CAAuB5B,MAAvB,EAA+BC,CAA/B,CAAP;AACD;;AAED,UAAMzC,YAAY,GAAG,KAAKuC,aAA1B;;AAEA,QAAIC,MAAM,CAACxD,UAAD,CAAN,CAAmBL,KAAK,CAAC8E,QAAzB,EAAmChB,CAAnC,MAA0CxC,SAA1C,IAAuD,CAACtB,KAAK,CAACY,MAAN,CAAaiD,MAAb,EAAqBC,CAArB,CAA5D,EAAqF;AACnF7D,MAAAA,2CAA2C,CAACoB,YAAD,CAA3C;;AACA,UAAI;AACFwC,QAAAA,MAAM,CAACxD,UAAD,CAAN,CAAmBL,KAAK,CAAC0F,WAAzB,EAAsC5B,CAAtC;AACA,eAAO,IAAP;AACD,OAHD,SAGU;AACR3D,QAAAA,4CAA4C,CAACkB,YAAD,CAA5C;AACD;AACF;;AAED,WAAO2C,OAAO,CAACyB,cAAR,CAAuB5B,MAAvB,EAA+BC,CAA/B,CAAP;AACD;;AAED6B,EAAAA,iBAAiB,GAAG;AAClB,WAAO,KAAP;AACD;;AAlMgB;;AAqMnB,MAAM9E,IAAI,GAAGd,OAAO,CAAC,+BAAD,CAApB","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst ceReactionsPreSteps_helpers_custom_elements = require(\"../helpers/custom-elements.js\").ceReactionsPreSteps;\nconst ceReactionsPostSteps_helpers_custom_elements = require(\"../helpers/custom-elements.js\").ceReactionsPostSteps;\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\n\nconst interfaceName = \"DOMStringMap\";\n\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\nexports.convert = (value, { context = \"The provided value\" } = {}) => {\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n  throw new TypeError(`${context} is not of type 'DOMStringMap'.`);\n};\n\nfunction makeWrapper(globalObject) {\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    throw new Error(\"Internal error: invalid global object\");\n  }\n\n  const ctor = globalObject[ctorRegistrySymbol][\"DOMStringMap\"];\n  if (ctor === undefined) {\n    throw new Error(\"Internal error: constructor DOMStringMap is not installed on the passed global object\");\n  }\n\n  return Object.create(ctor.prototype);\n}\n\nfunction makeProxy(wrapper, globalObject) {\n  let proxyHandler = proxyHandlerCache.get(globalObject);\n  if (proxyHandler === undefined) {\n    proxyHandler = new ProxyHandler(globalObject);\n    proxyHandlerCache.set(globalObject, proxyHandler);\n  }\n  return new Proxy(wrapper, proxyHandler);\n}\n\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = (wrapper, globalObject) => {};\n\nexports.setup = (wrapper, globalObject, constructorArgs = [], privateData = {}) => {\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n\n  wrapper = makeProxy(wrapper, globalObject);\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper;\n};\n\nexports.new = globalObject => {\n  let wrapper = makeWrapper(globalObject);\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n\n  wrapper = makeProxy(wrapper, globalObject);\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper[implSymbol];\n};\n\nconst exposed = new Set([\"Window\"]);\n\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n  class DOMStringMap {\n    constructor() {\n      throw new TypeError(\"Illegal constructor\");\n    }\n  }\n  Object.defineProperties(DOMStringMap.prototype, {\n    [Symbol.toStringTag]: { value: \"DOMStringMap\", configurable: true }\n  });\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    globalObject[ctorRegistrySymbol] = Object.create(null);\n  }\n  globalObject[ctorRegistrySymbol][interfaceName] = DOMStringMap;\n\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: DOMStringMap\n  });\n};\n\nconst proxyHandlerCache = new WeakMap();\nclass ProxyHandler {\n  constructor(globalObject) {\n    this._globalObject = globalObject;\n  }\n\n  get(target, P, receiver) {\n    if (typeof P === \"symbol\") {\n      return Reflect.get(target, P, receiver);\n    }\n    const desc = this.getOwnPropertyDescriptor(target, P);\n    if (desc === undefined) {\n      const parent = Object.getPrototypeOf(target);\n      if (parent === null) {\n        return undefined;\n      }\n      return Reflect.get(target, P, receiver);\n    }\n    if (!desc.get && !desc.set) {\n      return desc.value;\n    }\n    const getter = desc.get;\n    if (getter === undefined) {\n      return undefined;\n    }\n    return Reflect.apply(getter, receiver, []);\n  }\n\n  has(target, P) {\n    if (typeof P === \"symbol\") {\n      return Reflect.has(target, P);\n    }\n    const desc = this.getOwnPropertyDescriptor(target, P);\n    if (desc !== undefined) {\n      return true;\n    }\n    const parent = Object.getPrototypeOf(target);\n    if (parent !== null) {\n      return Reflect.has(parent, P);\n    }\n    return false;\n  }\n\n  ownKeys(target) {\n    const keys = new Set();\n\n    for (const key of target[implSymbol][utils.supportedPropertyNames]) {\n      if (!utils.hasOwn(target, key)) {\n        keys.add(`${key}`);\n      }\n    }\n\n    for (const key of Reflect.ownKeys(target)) {\n      keys.add(key);\n    }\n    return [...keys];\n  }\n\n  getOwnPropertyDescriptor(target, P) {\n    if (typeof P === \"symbol\") {\n      return Reflect.getOwnPropertyDescriptor(target, P);\n    }\n    let ignoreNamedProps = false;\n\n    const namedValue = target[implSymbol][utils.namedGet](P);\n\n    if (namedValue !== undefined && !utils.hasOwn(target, P) && !ignoreNamedProps) {\n      return {\n        writable: true,\n        enumerable: true,\n        configurable: true,\n        value: utils.tryWrapperForImpl(namedValue)\n      };\n    }\n\n    return Reflect.getOwnPropertyDescriptor(target, P);\n  }\n\n  set(target, P, V, receiver) {\n    if (typeof P === \"symbol\") {\n      return Reflect.set(target, P, V, receiver);\n    }\n    if (target === receiver) {\n      const globalObject = this._globalObject;\n\n      if (typeof P === \"string\" && !utils.isArrayIndexPropName(P)) {\n        let namedValue = V;\n\n        namedValue = conversions[\"DOMString\"](namedValue, {\n          context: \"Failed to set the '\" + P + \"' property on 'DOMStringMap': The provided value\"\n        });\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n        try {\n          const creating = !(target[implSymbol][utils.namedGet](P) !== undefined);\n          if (creating) {\n            target[implSymbol][utils.namedSetNew](P, namedValue);\n          } else {\n            target[implSymbol][utils.namedSetExisting](P, namedValue);\n          }\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n\n        return true;\n      }\n    }\n    let ownDesc;\n\n    if (ownDesc === undefined) {\n      ownDesc = Reflect.getOwnPropertyDescriptor(target, P);\n    }\n    if (ownDesc === undefined) {\n      const parent = Reflect.getPrototypeOf(target);\n      if (parent !== null) {\n        return Reflect.set(parent, P, V, receiver);\n      }\n      ownDesc = { writable: true, enumerable: true, configurable: true, value: undefined };\n    }\n    if (!ownDesc.writable) {\n      return false;\n    }\n    if (!utils.isObject(receiver)) {\n      return false;\n    }\n    const existingDesc = Reflect.getOwnPropertyDescriptor(receiver, P);\n    let valueDesc;\n    if (existingDesc !== undefined) {\n      if (existingDesc.get || existingDesc.set) {\n        return false;\n      }\n      if (!existingDesc.writable) {\n        return false;\n      }\n      valueDesc = { value: V };\n    } else {\n      valueDesc = { writable: true, enumerable: true, configurable: true, value: V };\n    }\n    return Reflect.defineProperty(receiver, P, valueDesc);\n  }\n\n  defineProperty(target, P, desc) {\n    if (typeof P === \"symbol\") {\n      return Reflect.defineProperty(target, P, desc);\n    }\n\n    const globalObject = this._globalObject;\n\n    if (desc.get || desc.set) {\n      return false;\n    }\n\n    let namedValue = desc.value;\n\n    namedValue = conversions[\"DOMString\"](namedValue, {\n      context: \"Failed to set the '\" + P + \"' property on 'DOMStringMap': The provided value\"\n    });\n\n    ceReactionsPreSteps_helpers_custom_elements(globalObject);\n    try {\n      const creating = !(target[implSymbol][utils.namedGet](P) !== undefined);\n      if (creating) {\n        target[implSymbol][utils.namedSetNew](P, namedValue);\n      } else {\n        target[implSymbol][utils.namedSetExisting](P, namedValue);\n      }\n    } finally {\n      ceReactionsPostSteps_helpers_custom_elements(globalObject);\n    }\n\n    return true;\n  }\n\n  deleteProperty(target, P) {\n    if (typeof P === \"symbol\") {\n      return Reflect.deleteProperty(target, P);\n    }\n\n    const globalObject = this._globalObject;\n\n    if (target[implSymbol][utils.namedGet](P) !== undefined && !utils.hasOwn(target, P)) {\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        target[implSymbol][utils.namedDelete](P);\n        return true;\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n\n    return Reflect.deleteProperty(target, P);\n  }\n\n  preventExtensions() {\n    return false;\n  }\n}\n\nconst Impl = require(\"../nodes/DOMStringMap-impl.js\");\n"]},"metadata":{},"sourceType":"script"}