{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst ElementDefinitionOptions = require(\"./ElementDefinitionOptions.js\");\n\nconst ceReactionsPreSteps_helpers_custom_elements = require(\"../helpers/custom-elements.js\").ceReactionsPreSteps;\n\nconst ceReactionsPostSteps_helpers_custom_elements = require(\"../helpers/custom-elements.js\").ceReactionsPostSteps;\n\nconst Node = require(\"./Node.js\");\n\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\nconst interfaceName = \"CustomElementRegistry\";\n\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\n\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\n\nexports.convert = (value, {\n  context = \"The provided value\"\n} = {}) => {\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n\n  throw new TypeError(`${context} is not of type 'CustomElementRegistry'.`);\n};\n\nfunction makeWrapper(globalObject) {\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    throw new Error(\"Internal error: invalid global object\");\n  }\n\n  const ctor = globalObject[ctorRegistrySymbol][\"CustomElementRegistry\"];\n\n  if (ctor === undefined) {\n    throw new Error(\"Internal error: constructor CustomElementRegistry is not installed on the passed global object\");\n  }\n\n  return Object.create(ctor.prototype);\n}\n\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = (wrapper, globalObject) => {};\n\nexports.setup = (wrapper, globalObject, constructorArgs = [], privateData = {}) => {\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n\n  return wrapper;\n};\n\nexports.new = globalObject => {\n  const wrapper = makeWrapper(globalObject);\n\n  exports._internalSetup(wrapper, globalObject);\n\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n\n  return wrapper[implSymbol];\n};\n\nconst exposed = new Set([\"Window\"]);\n\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n\n  class CustomElementRegistry {\n    constructor() {\n      throw new TypeError(\"Illegal constructor\");\n    }\n\n    define(name, constructor) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      if (arguments.length < 2) {\n        throw new TypeError(\"Failed to execute 'define' on 'CustomElementRegistry': 2 arguments required, but only \" + arguments.length + \" present.\");\n      }\n\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"DOMString\"](curArg, {\n          context: \"Failed to execute 'define' on 'CustomElementRegistry': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = utils.tryImplForWrapper(curArg);\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[2];\n        curArg = ElementDefinitionOptions.convert(curArg, {\n          context: \"Failed to execute 'define' on 'CustomElementRegistry': parameter 3\"\n        });\n        args.push(curArg);\n      }\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n      try {\n        return esValue[implSymbol].define(...args);\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n\n    get(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      if (arguments.length < 1) {\n        throw new TypeError(\"Failed to execute 'get' on 'CustomElementRegistry': 1 argument required, but only \" + arguments.length + \" present.\");\n      }\n\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"DOMString\"](curArg, {\n          context: \"Failed to execute 'get' on 'CustomElementRegistry': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].get(...args);\n    }\n\n    whenDefined(name) {\n      try {\n        const esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'whenDefined' on 'CustomElementRegistry': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        const args = [];\n        {\n          let curArg = arguments[0];\n          curArg = conversions[\"DOMString\"](curArg, {\n            context: \"Failed to execute 'whenDefined' on 'CustomElementRegistry': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        return utils.tryWrapperForImpl(esValue[implSymbol].whenDefined(...args));\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    }\n\n    upgrade(root) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      if (arguments.length < 1) {\n        throw new TypeError(\"Failed to execute 'upgrade' on 'CustomElementRegistry': 1 argument required, but only \" + arguments.length + \" present.\");\n      }\n\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = Node.convert(curArg, {\n          context: \"Failed to execute 'upgrade' on 'CustomElementRegistry': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n      try {\n        return esValue[implSymbol].upgrade(...args);\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n\n  }\n\n  Object.defineProperties(CustomElementRegistry.prototype, {\n    define: {\n      enumerable: true\n    },\n    get: {\n      enumerable: true\n    },\n    whenDefined: {\n      enumerable: true\n    },\n    upgrade: {\n      enumerable: true\n    },\n    [Symbol.toStringTag]: {\n      value: \"CustomElementRegistry\",\n      configurable: true\n    }\n  });\n\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    globalObject[ctorRegistrySymbol] = Object.create(null);\n  }\n\n  globalObject[ctorRegistrySymbol][interfaceName] = CustomElementRegistry;\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: CustomElementRegistry\n  });\n};\n\nconst Impl = require(\"../custom-elements/CustomElementRegistry-impl.js\");","map":{"version":3,"sources":["/Library/WebServer/Documents/capstone/capstone-project-re-coder/node_modules/jsdom/lib/jsdom/living/generated/CustomElementRegistry.js"],"names":["conversions","require","utils","ElementDefinitionOptions","ceReactionsPreSteps_helpers_custom_elements","ceReactionsPreSteps","ceReactionsPostSteps_helpers_custom_elements","ceReactionsPostSteps","Node","implSymbol","ctorRegistrySymbol","interfaceName","exports","is","value","isObject","hasOwn","Impl","implementation","isImpl","convert","context","implForWrapper","TypeError","makeWrapper","globalObject","undefined","Error","ctor","Object","create","prototype","constructorArgs","privateData","wrapper","setup","createImpl","_internalSetup","defineProperty","configurable","wrapperSymbol","init","new","exposed","Set","install","globalNames","some","globalName","has","CustomElementRegistry","constructor","define","name","esValue","arguments","length","args","curArg","push","tryImplForWrapper","get","whenDefined","tryWrapperForImpl","e","Promise","reject","upgrade","root","defineProperties","enumerable","Symbol","toStringTag","writable"],"mappings":"AAAA;;AAEA,MAAMA,WAAW,GAAGC,OAAO,CAAC,oBAAD,CAA3B;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,YAAD,CAArB;;AAEA,MAAME,wBAAwB,GAAGF,OAAO,CAAC,+BAAD,CAAxC;;AACA,MAAMG,2CAA2C,GAAGH,OAAO,CAAC,+BAAD,CAAP,CAAyCI,mBAA7F;;AACA,MAAMC,4CAA4C,GAAGL,OAAO,CAAC,+BAAD,CAAP,CAAyCM,oBAA9F;;AACA,MAAMC,IAAI,GAAGP,OAAO,CAAC,WAAD,CAApB;;AACA,MAAMQ,UAAU,GAAGP,KAAK,CAACO,UAAzB;AACA,MAAMC,kBAAkB,GAAGR,KAAK,CAACQ,kBAAjC;AAEA,MAAMC,aAAa,GAAG,uBAAtB;;AAEAC,OAAO,CAACC,EAAR,GAAaC,KAAK,IAAI;AACpB,SAAOZ,KAAK,CAACa,QAAN,CAAeD,KAAf,KAAyBZ,KAAK,CAACc,MAAN,CAAaF,KAAb,EAAoBL,UAApB,CAAzB,IAA4DK,KAAK,CAACL,UAAD,CAAL,YAA6BQ,IAAI,CAACC,cAArG;AACD,CAFD;;AAGAN,OAAO,CAACO,MAAR,GAAiBL,KAAK,IAAI;AACxB,SAAOZ,KAAK,CAACa,QAAN,CAAeD,KAAf,KAAyBA,KAAK,YAAYG,IAAI,CAACC,cAAtD;AACD,CAFD;;AAGAN,OAAO,CAACQ,OAAR,GAAkB,CAACN,KAAD,EAAQ;AAAEO,EAAAA,OAAO,GAAG;AAAZ,IAAqC,EAA7C,KAAoD;AACpE,MAAIT,OAAO,CAACC,EAAR,CAAWC,KAAX,CAAJ,EAAuB;AACrB,WAAOZ,KAAK,CAACoB,cAAN,CAAqBR,KAArB,CAAP;AACD;;AACD,QAAM,IAAIS,SAAJ,CAAe,GAAEF,OAAQ,0CAAzB,CAAN;AACD,CALD;;AAOA,SAASG,WAAT,CAAqBC,YAArB,EAAmC;AACjC,MAAIA,YAAY,CAACf,kBAAD,CAAZ,KAAqCgB,SAAzC,EAAoD;AAClD,UAAM,IAAIC,KAAJ,CAAU,uCAAV,CAAN;AACD;;AAED,QAAMC,IAAI,GAAGH,YAAY,CAACf,kBAAD,CAAZ,CAAiC,uBAAjC,CAAb;;AACA,MAAIkB,IAAI,KAAKF,SAAb,EAAwB;AACtB,UAAM,IAAIC,KAAJ,CAAU,gGAAV,CAAN;AACD;;AAED,SAAOE,MAAM,CAACC,MAAP,CAAcF,IAAI,CAACG,SAAnB,CAAP;AACD;;AAEDnB,OAAO,CAACkB,MAAR,GAAiB,CAACL,YAAD,EAAeO,eAAf,EAAgCC,WAAhC,KAAgD;AAC/D,QAAMC,OAAO,GAAGV,WAAW,CAACC,YAAD,CAA3B;AACA,SAAOb,OAAO,CAACuB,KAAR,CAAcD,OAAd,EAAuBT,YAAvB,EAAqCO,eAArC,EAAsDC,WAAtD,CAAP;AACD,CAHD;;AAKArB,OAAO,CAACwB,UAAR,GAAqB,CAACX,YAAD,EAAeO,eAAf,EAAgCC,WAAhC,KAAgD;AACnE,QAAMC,OAAO,GAAGtB,OAAO,CAACkB,MAAR,CAAeL,YAAf,EAA6BO,eAA7B,EAA8CC,WAA9C,CAAhB;AACA,SAAO/B,KAAK,CAACoB,cAAN,CAAqBY,OAArB,CAAP;AACD,CAHD;;AAKAtB,OAAO,CAACyB,cAAR,GAAyB,CAACH,OAAD,EAAUT,YAAV,KAA2B,CAAE,CAAtD;;AAEAb,OAAO,CAACuB,KAAR,GAAgB,CAACD,OAAD,EAAUT,YAAV,EAAwBO,eAAe,GAAG,EAA1C,EAA8CC,WAAW,GAAG,EAA5D,KAAmE;AACjFA,EAAAA,WAAW,CAACC,OAAZ,GAAsBA,OAAtB;;AAEAtB,EAAAA,OAAO,CAACyB,cAAR,CAAuBH,OAAvB,EAAgCT,YAAhC;;AACAI,EAAAA,MAAM,CAACS,cAAP,CAAsBJ,OAAtB,EAA+BzB,UAA/B,EAA2C;AACzCK,IAAAA,KAAK,EAAE,IAAIG,IAAI,CAACC,cAAT,CAAwBO,YAAxB,EAAsCO,eAAtC,EAAuDC,WAAvD,CADkC;AAEzCM,IAAAA,YAAY,EAAE;AAF2B,GAA3C;AAKAL,EAAAA,OAAO,CAACzB,UAAD,CAAP,CAAoBP,KAAK,CAACsC,aAA1B,IAA2CN,OAA3C;;AACA,MAAIjB,IAAI,CAACwB,IAAT,EAAe;AACbxB,IAAAA,IAAI,CAACwB,IAAL,CAAUP,OAAO,CAACzB,UAAD,CAAjB;AACD;;AACD,SAAOyB,OAAP;AACD,CAdD;;AAgBAtB,OAAO,CAAC8B,GAAR,GAAcjB,YAAY,IAAI;AAC5B,QAAMS,OAAO,GAAGV,WAAW,CAACC,YAAD,CAA3B;;AAEAb,EAAAA,OAAO,CAACyB,cAAR,CAAuBH,OAAvB,EAAgCT,YAAhC;;AACAI,EAAAA,MAAM,CAACS,cAAP,CAAsBJ,OAAtB,EAA+BzB,UAA/B,EAA2C;AACzCK,IAAAA,KAAK,EAAEe,MAAM,CAACC,MAAP,CAAcb,IAAI,CAACC,cAAL,CAAoBa,SAAlC,CADkC;AAEzCQ,IAAAA,YAAY,EAAE;AAF2B,GAA3C;AAKAL,EAAAA,OAAO,CAACzB,UAAD,CAAP,CAAoBP,KAAK,CAACsC,aAA1B,IAA2CN,OAA3C;;AACA,MAAIjB,IAAI,CAACwB,IAAT,EAAe;AACbxB,IAAAA,IAAI,CAACwB,IAAL,CAAUP,OAAO,CAACzB,UAAD,CAAjB;AACD;;AACD,SAAOyB,OAAO,CAACzB,UAAD,CAAd;AACD,CAdD;;AAgBA,MAAMkC,OAAO,GAAG,IAAIC,GAAJ,CAAQ,CAAC,QAAD,CAAR,CAAhB;;AAEAhC,OAAO,CAACiC,OAAR,GAAkB,CAACpB,YAAD,EAAeqB,WAAf,KAA+B;AAC/C,MAAI,CAACA,WAAW,CAACC,IAAZ,CAAiBC,UAAU,IAAIL,OAAO,CAACM,GAAR,CAAYD,UAAZ,CAA/B,CAAL,EAA8D;AAC5D;AACD;;AACD,QAAME,qBAAN,CAA4B;AAC1BC,IAAAA,WAAW,GAAG;AACZ,YAAM,IAAI5B,SAAJ,CAAc,qBAAd,CAAN;AACD;;AAED6B,IAAAA,MAAM,CAACC,IAAD,EAAOF,WAAP,EAAoB;AACxB,YAAMG,OAAO,GAAG,SAAS,IAAT,IAAiB,SAAS5B,SAA1B,GAAsC,IAAtC,GAA6CD,YAA7D;;AACA,UAAI,CAACb,OAAO,CAACC,EAAR,CAAWyC,OAAX,CAAL,EAA0B;AACxB,cAAM,IAAI/B,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAED,UAAIgC,SAAS,CAACC,MAAV,GAAmB,CAAvB,EAA0B;AACxB,cAAM,IAAIjC,SAAJ,CACJ,2FACEgC,SAAS,CAACC,MADZ,GAEE,WAHE,CAAN;AAKD;;AACD,YAAMC,IAAI,GAAG,EAAb;AACA;AACE,YAAIC,MAAM,GAAGH,SAAS,CAAC,CAAD,CAAtB;AACAG,QAAAA,MAAM,GAAG1D,WAAW,CAAC,WAAD,CAAX,CAAyB0D,MAAzB,EAAiC;AACxCrC,UAAAA,OAAO,EAAE;AAD+B,SAAjC,CAAT;AAGAoC,QAAAA,IAAI,CAACE,IAAL,CAAUD,MAAV;AACD;AACD;AACE,YAAIA,MAAM,GAAGH,SAAS,CAAC,CAAD,CAAtB;AACAG,QAAAA,MAAM,GAAGxD,KAAK,CAAC0D,iBAAN,CAAwBF,MAAxB,CAAT;AACAD,QAAAA,IAAI,CAACE,IAAL,CAAUD,MAAV;AACD;AACD;AACE,YAAIA,MAAM,GAAGH,SAAS,CAAC,CAAD,CAAtB;AACAG,QAAAA,MAAM,GAAGvD,wBAAwB,CAACiB,OAAzB,CAAiCsC,MAAjC,EAAyC;AAChDrC,UAAAA,OAAO,EAAE;AADuC,SAAzC,CAAT;AAGAoC,QAAAA,IAAI,CAACE,IAAL,CAAUD,MAAV;AACD;AACDtD,MAAAA,2CAA2C,CAACqB,YAAD,CAA3C;;AACA,UAAI;AACF,eAAO6B,OAAO,CAAC7C,UAAD,CAAP,CAAoB2C,MAApB,CAA2B,GAAGK,IAA9B,CAAP;AACD,OAFD,SAEU;AACRnD,QAAAA,4CAA4C,CAACmB,YAAD,CAA5C;AACD;AACF;;AAEDoC,IAAAA,GAAG,CAACR,IAAD,EAAO;AACR,YAAMC,OAAO,GAAG,SAAS,IAAT,IAAiB,SAAS5B,SAA1B,GAAsC,IAAtC,GAA6CD,YAA7D;;AACA,UAAI,CAACb,OAAO,CAACC,EAAR,CAAWyC,OAAX,CAAL,EAA0B;AACxB,cAAM,IAAI/B,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAED,UAAIgC,SAAS,CAACC,MAAV,GAAmB,CAAvB,EAA0B;AACxB,cAAM,IAAIjC,SAAJ,CACJ,uFACEgC,SAAS,CAACC,MADZ,GAEE,WAHE,CAAN;AAKD;;AACD,YAAMC,IAAI,GAAG,EAAb;AACA;AACE,YAAIC,MAAM,GAAGH,SAAS,CAAC,CAAD,CAAtB;AACAG,QAAAA,MAAM,GAAG1D,WAAW,CAAC,WAAD,CAAX,CAAyB0D,MAAzB,EAAiC;AACxCrC,UAAAA,OAAO,EAAE;AAD+B,SAAjC,CAAT;AAGAoC,QAAAA,IAAI,CAACE,IAAL,CAAUD,MAAV;AACD;AACD,aAAOJ,OAAO,CAAC7C,UAAD,CAAP,CAAoBoD,GAApB,CAAwB,GAAGJ,IAA3B,CAAP;AACD;;AAEDK,IAAAA,WAAW,CAACT,IAAD,EAAO;AAChB,UAAI;AACF,cAAMC,OAAO,GAAG,SAAS,IAAT,IAAiB,SAAS5B,SAA1B,GAAsC,IAAtC,GAA6CD,YAA7D;;AACA,YAAI,CAACb,OAAO,CAACC,EAAR,CAAWyC,OAAX,CAAL,EAA0B;AACxB,gBAAM,IAAI/B,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAED,YAAIgC,SAAS,CAACC,MAAV,GAAmB,CAAvB,EAA0B;AACxB,gBAAM,IAAIjC,SAAJ,CACJ,+FACEgC,SAAS,CAACC,MADZ,GAEE,WAHE,CAAN;AAKD;;AACD,cAAMC,IAAI,GAAG,EAAb;AACA;AACE,cAAIC,MAAM,GAAGH,SAAS,CAAC,CAAD,CAAtB;AACAG,UAAAA,MAAM,GAAG1D,WAAW,CAAC,WAAD,CAAX,CAAyB0D,MAAzB,EAAiC;AACxCrC,YAAAA,OAAO,EAAE;AAD+B,WAAjC,CAAT;AAGAoC,UAAAA,IAAI,CAACE,IAAL,CAAUD,MAAV;AACD;AACD,eAAOxD,KAAK,CAAC6D,iBAAN,CAAwBT,OAAO,CAAC7C,UAAD,CAAP,CAAoBqD,WAApB,CAAgC,GAAGL,IAAnC,CAAxB,CAAP;AACD,OAtBD,CAsBE,OAAOO,CAAP,EAAU;AACV,eAAOC,OAAO,CAACC,MAAR,CAAeF,CAAf,CAAP;AACD;AACF;;AAEDG,IAAAA,OAAO,CAACC,IAAD,EAAO;AACZ,YAAMd,OAAO,GAAG,SAAS,IAAT,IAAiB,SAAS5B,SAA1B,GAAsC,IAAtC,GAA6CD,YAA7D;;AACA,UAAI,CAACb,OAAO,CAACC,EAAR,CAAWyC,OAAX,CAAL,EAA0B;AACxB,cAAM,IAAI/B,SAAJ,CAAc,oBAAd,CAAN;AACD;;AAED,UAAIgC,SAAS,CAACC,MAAV,GAAmB,CAAvB,EAA0B;AACxB,cAAM,IAAIjC,SAAJ,CACJ,2FACEgC,SAAS,CAACC,MADZ,GAEE,WAHE,CAAN;AAKD;;AACD,YAAMC,IAAI,GAAG,EAAb;AACA;AACE,YAAIC,MAAM,GAAGH,SAAS,CAAC,CAAD,CAAtB;AACAG,QAAAA,MAAM,GAAGlD,IAAI,CAACY,OAAL,CAAasC,MAAb,EAAqB;AAC5BrC,UAAAA,OAAO,EAAE;AADmB,SAArB,CAAT;AAGAoC,QAAAA,IAAI,CAACE,IAAL,CAAUD,MAAV;AACD;AACDtD,MAAAA,2CAA2C,CAACqB,YAAD,CAA3C;;AACA,UAAI;AACF,eAAO6B,OAAO,CAAC7C,UAAD,CAAP,CAAoB0D,OAApB,CAA4B,GAAGV,IAA/B,CAAP;AACD,OAFD,SAEU;AACRnD,QAAAA,4CAA4C,CAACmB,YAAD,CAA5C;AACD;AACF;;AA7HyB;;AA+H5BI,EAAAA,MAAM,CAACwC,gBAAP,CAAwBnB,qBAAqB,CAACnB,SAA9C,EAAyD;AACvDqB,IAAAA,MAAM,EAAE;AAAEkB,MAAAA,UAAU,EAAE;AAAd,KAD+C;AAEvDT,IAAAA,GAAG,EAAE;AAAES,MAAAA,UAAU,EAAE;AAAd,KAFkD;AAGvDR,IAAAA,WAAW,EAAE;AAAEQ,MAAAA,UAAU,EAAE;AAAd,KAH0C;AAIvDH,IAAAA,OAAO,EAAE;AAAEG,MAAAA,UAAU,EAAE;AAAd,KAJ8C;AAKvD,KAACC,MAAM,CAACC,WAAR,GAAsB;AAAE1D,MAAAA,KAAK,EAAE,uBAAT;AAAkCyB,MAAAA,YAAY,EAAE;AAAhD;AALiC,GAAzD;;AAOA,MAAId,YAAY,CAACf,kBAAD,CAAZ,KAAqCgB,SAAzC,EAAoD;AAClDD,IAAAA,YAAY,CAACf,kBAAD,CAAZ,GAAmCmB,MAAM,CAACC,MAAP,CAAc,IAAd,CAAnC;AACD;;AACDL,EAAAA,YAAY,CAACf,kBAAD,CAAZ,CAAiCC,aAAjC,IAAkDuC,qBAAlD;AAEArB,EAAAA,MAAM,CAACS,cAAP,CAAsBb,YAAtB,EAAoCd,aAApC,EAAmD;AACjD4B,IAAAA,YAAY,EAAE,IADmC;AAEjDkC,IAAAA,QAAQ,EAAE,IAFuC;AAGjD3D,IAAAA,KAAK,EAAEoC;AAH0C,GAAnD;AAKD,CApJD;;AAsJA,MAAMjC,IAAI,GAAGhB,OAAO,CAAC,kDAAD,CAApB","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst ElementDefinitionOptions = require(\"./ElementDefinitionOptions.js\");\nconst ceReactionsPreSteps_helpers_custom_elements = require(\"../helpers/custom-elements.js\").ceReactionsPreSteps;\nconst ceReactionsPostSteps_helpers_custom_elements = require(\"../helpers/custom-elements.js\").ceReactionsPostSteps;\nconst Node = require(\"./Node.js\");\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\n\nconst interfaceName = \"CustomElementRegistry\";\n\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\nexports.convert = (value, { context = \"The provided value\" } = {}) => {\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n  throw new TypeError(`${context} is not of type 'CustomElementRegistry'.`);\n};\n\nfunction makeWrapper(globalObject) {\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    throw new Error(\"Internal error: invalid global object\");\n  }\n\n  const ctor = globalObject[ctorRegistrySymbol][\"CustomElementRegistry\"];\n  if (ctor === undefined) {\n    throw new Error(\"Internal error: constructor CustomElementRegistry is not installed on the passed global object\");\n  }\n\n  return Object.create(ctor.prototype);\n}\n\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = (wrapper, globalObject) => {};\n\nexports.setup = (wrapper, globalObject, constructorArgs = [], privateData = {}) => {\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper;\n};\n\nexports.new = globalObject => {\n  const wrapper = makeWrapper(globalObject);\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper[implSymbol];\n};\n\nconst exposed = new Set([\"Window\"]);\n\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n  class CustomElementRegistry {\n    constructor() {\n      throw new TypeError(\"Illegal constructor\");\n    }\n\n    define(name, constructor) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      if (arguments.length < 2) {\n        throw new TypeError(\n          \"Failed to execute 'define' on 'CustomElementRegistry': 2 arguments required, but only \" +\n            arguments.length +\n            \" present.\"\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"DOMString\"](curArg, {\n          context: \"Failed to execute 'define' on 'CustomElementRegistry': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = utils.tryImplForWrapper(curArg);\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[2];\n        curArg = ElementDefinitionOptions.convert(curArg, {\n          context: \"Failed to execute 'define' on 'CustomElementRegistry': parameter 3\"\n        });\n        args.push(curArg);\n      }\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        return esValue[implSymbol].define(...args);\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n\n    get(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      if (arguments.length < 1) {\n        throw new TypeError(\n          \"Failed to execute 'get' on 'CustomElementRegistry': 1 argument required, but only \" +\n            arguments.length +\n            \" present.\"\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"DOMString\"](curArg, {\n          context: \"Failed to execute 'get' on 'CustomElementRegistry': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].get(...args);\n    }\n\n    whenDefined(name) {\n      try {\n        const esValue = this !== null && this !== undefined ? this : globalObject;\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\n            \"Failed to execute 'whenDefined' on 'CustomElementRegistry': 1 argument required, but only \" +\n              arguments.length +\n              \" present.\"\n          );\n        }\n        const args = [];\n        {\n          let curArg = arguments[0];\n          curArg = conversions[\"DOMString\"](curArg, {\n            context: \"Failed to execute 'whenDefined' on 'CustomElementRegistry': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        return utils.tryWrapperForImpl(esValue[implSymbol].whenDefined(...args));\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    }\n\n    upgrade(root) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      if (arguments.length < 1) {\n        throw new TypeError(\n          \"Failed to execute 'upgrade' on 'CustomElementRegistry': 1 argument required, but only \" +\n            arguments.length +\n            \" present.\"\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = Node.convert(curArg, {\n          context: \"Failed to execute 'upgrade' on 'CustomElementRegistry': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        return esValue[implSymbol].upgrade(...args);\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n  }\n  Object.defineProperties(CustomElementRegistry.prototype, {\n    define: { enumerable: true },\n    get: { enumerable: true },\n    whenDefined: { enumerable: true },\n    upgrade: { enumerable: true },\n    [Symbol.toStringTag]: { value: \"CustomElementRegistry\", configurable: true }\n  });\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    globalObject[ctorRegistrySymbol] = Object.create(null);\n  }\n  globalObject[ctorRegistrySymbol][interfaceName] = CustomElementRegistry;\n\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: CustomElementRegistry\n  });\n};\n\nconst Impl = require(\"../custom-elements/CustomElementRegistry-impl.js\");\n"]},"metadata":{},"sourceType":"script"}