{"ast":null,"code":"\"use strict\";\n\nconst idlUtils = require(\"../generated/utils\");\n\nconst {\n  closest\n} = require(\"../helpers/traversal\");\n\nconst {\n  isDisabled,\n  isSubmittable,\n  isButton,\n  normalizeToCRLF\n} = require(\"../helpers/form-controls\");\n\nconst Blob = require(\"../generated/Blob.js\");\n\nconst File = require(\"../generated/File.js\");\n\nconst conversions = require(\"webidl-conversions\");\n\nexports.implementation = class FormDataImpl {\n  constructor(globalObject, args) {\n    this._globalObject = globalObject;\n    this._entries = [];\n\n    if (args[0] !== undefined) {\n      this._entries = constructTheEntryList(args[0]);\n    }\n  }\n\n  append(name, value, filename) {\n    const entry = createAnEntry(name, value, filename);\n\n    this._entries.push(entry);\n  }\n\n  delete(name) {\n    this._entries = this._entries.filter(entry => entry.name !== name);\n  }\n\n  get(name) {\n    const foundEntry = this._entries.find(entry => entry.name === name);\n\n    return foundEntry !== undefined ? idlUtils.tryWrapperForImpl(foundEntry.value) : null;\n  }\n\n  getAll(name) {\n    return this._entries.filter(entry => entry.name === name).map(entry => idlUtils.tryWrapperForImpl(entry.value));\n  }\n\n  has(name) {\n    return this._entries.findIndex(entry => entry.name === name) !== -1;\n  }\n\n  set(name, value, filename) {\n    const entry = createAnEntry(name, value, filename);\n\n    const foundIndex = this._entries.findIndex(e => e.name === name);\n\n    if (foundIndex !== -1) {\n      this._entries[foundIndex] = entry;\n      this._entries = this._entries.filter((e, i) => e.name !== name || i === foundIndex);\n    } else {\n      this._entries.push(entry);\n    }\n  }\n\n  *[Symbol.iterator]() {\n    for (const entry of this._entries) {\n      yield [entry.name, idlUtils.tryWrapperForImpl(entry.value)];\n    }\n  }\n\n};\n\nfunction createAnEntry(name, value, filename) {\n  const entry = {\n    name\n  }; // https://github.com/whatwg/xhr/issues/75\n\n  if (Blob.isImpl(value) && !File.isImpl(value)) {\n    const oldValue = value;\n    value = File.createImpl(value._globalObject, [[], \"blob\", {\n      type: oldValue.type\n    }]); // \"representing the same bytes\"\n\n    value._buffer = oldValue._buffer;\n  }\n\n  if (File.isImpl(value) && filename !== undefined) {\n    const oldValue = value;\n    value = File.createImpl(value._globalObject, [[], filename, // spec makes no mention of `lastModified`; assume it is inherited\n    // (Chrome's behavior)\n    {\n      type: oldValue.type,\n      lastModified: oldValue.lastModified\n    }]); // \"representing the same bytes\"\n\n    value._buffer = oldValue._buffer;\n  }\n\n  entry.value = value;\n  return entry;\n}\n\nfunction constructTheEntryList(form, submitter) {\n  // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#constructing-the-form-data-set\n  // TODO: handle encoding\n  // TODO: handling \"constructing entry list\"\n  const controls = form.elements.filter(isSubmittable); // submittable is a subset of listed\n\n  const entryList = [];\n\n  for (const field of controls) {\n    if (closest(field, \"datalist\") !== null) {\n      continue;\n    }\n\n    if (isDisabled(field)) {\n      continue;\n    }\n\n    if (isButton(field) && field !== submitter) {\n      continue;\n    }\n\n    if (field.type === \"checkbox\" && field._checkedness === false) {\n      continue;\n    }\n\n    if (field.type === \"radio\" && field._checkedness === false) {\n      continue;\n    }\n\n    if (field.localName === \"object\") {\n      // in jsdom, no objects are \"using a plugin\"\n      continue;\n    } // TODO: Handle <input type=\"image\">\n    // TODO: handle form-associated custom elements.\n\n\n    const name = field.getAttributeNS(null, \"name\");\n\n    if (name === null || name === \"\") {\n      continue;\n    }\n\n    if (field.localName === \"select\") {\n      for (const option of field.options) {\n        if (option._selectedness === true && !isDisabled(field)) {\n          appendAnEntry(entryList, name, option._getValue());\n        }\n      }\n    } else if (field.localName === \"input\" && (field.type === \"checkbox\" || field.type === \"radio\")) {\n      const value = field.hasAttributeNS(null, \"value\") ? field.getAttributeNS(null, \"value\") : \"on\";\n      appendAnEntry(entryList, name, value);\n    } else if (field.type === \"file\") {\n      if (field.files.length === 0) {\n        const value = File.createImpl(form._globalObject, [[], \"\", {\n          type: \"application/octet-stream\"\n        }]);\n        appendAnEntry(entryList, name, value);\n      } else {\n        for (let i = 0; i < field.files.length; ++i) {\n          appendAnEntry(entryList, name, field.files.item(i));\n        }\n      }\n    }\n    /* skip plugins. TODO: _charset_ */\n    else if (field.localName === \"textarea\") {\n        appendAnEntry(entryList, name, field._getValue(), true);\n      } else {\n        appendAnEntry(entryList, name, field._getValue());\n      }\n\n    const dirname = field.getAttributeNS(null, \"dirname\");\n\n    if (dirname !== null && dirname !== \"\") {\n      const dir = \"ltr\"; // jsdom does not (yet?) implement actual directionality\n\n      appendAnEntry(entryList, dirname, dir);\n    }\n  } // TODO: formdata event\n\n\n  return entryList;\n}\n\nfunction appendAnEntry(entryList, name, value, preventLineBreakNormalization = false) {\n  name = conversions.USVString(normalizeToCRLF(name));\n\n  if (!File.isImpl(value)) {\n    if (!preventLineBreakNormalization) {\n      value = normalizeToCRLF(value);\n    }\n\n    value = conversions.USVString(value);\n  }\n\n  const entry = createAnEntry(name, value);\n  entryList.push(entry);\n}","map":{"version":3,"sources":["/Library/WebServer/Documents/capstone/capstone-project-re-coder/node_modules/jsdom/lib/jsdom/living/xhr/FormData-impl.js"],"names":["idlUtils","require","closest","isDisabled","isSubmittable","isButton","normalizeToCRLF","Blob","File","conversions","exports","implementation","FormDataImpl","constructor","globalObject","args","_globalObject","_entries","undefined","constructTheEntryList","append","name","value","filename","entry","createAnEntry","push","delete","filter","get","foundEntry","find","tryWrapperForImpl","getAll","map","has","findIndex","set","foundIndex","e","i","Symbol","iterator","isImpl","oldValue","createImpl","type","_buffer","lastModified","form","submitter","controls","elements","entryList","field","_checkedness","localName","getAttributeNS","option","options","_selectedness","appendAnEntry","_getValue","hasAttributeNS","files","length","item","dirname","dir","preventLineBreakNormalization","USVString"],"mappings":"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","sourcesContent":["\"use strict\";\nconst idlUtils = require(\"../generated/utils\");\nconst { closest } = require(\"../helpers/traversal\");\nconst { isDisabled, isSubmittable, isButton, normalizeToCRLF } = require(\"../helpers/form-controls\");\nconst Blob = require(\"../generated/Blob.js\");\nconst File = require(\"../generated/File.js\");\nconst conversions = require(\"webidl-conversions\");\n\nexports.implementation = class FormDataImpl {\n  constructor(globalObject, args) {\n    this._globalObject = globalObject;\n    this._entries = [];\n\n    if (args[0] !== undefined) {\n      this._entries = constructTheEntryList(args[0]);\n    }\n  }\n\n  append(name, value, filename) {\n    const entry = createAnEntry(name, value, filename);\n    this._entries.push(entry);\n  }\n\n  delete(name) {\n    this._entries = this._entries.filter(entry => entry.name !== name);\n  }\n\n  get(name) {\n    const foundEntry = this._entries.find(entry => entry.name === name);\n    return foundEntry !== undefined ? idlUtils.tryWrapperForImpl(foundEntry.value) : null;\n  }\n\n  getAll(name) {\n    return this._entries.filter(entry => entry.name === name).map(entry => idlUtils.tryWrapperForImpl(entry.value));\n  }\n\n  has(name) {\n    return this._entries.findIndex(entry => entry.name === name) !== -1;\n  }\n\n  set(name, value, filename) {\n    const entry = createAnEntry(name, value, filename);\n\n    const foundIndex = this._entries.findIndex(e => e.name === name);\n    if (foundIndex !== -1) {\n      this._entries[foundIndex] = entry;\n      this._entries = this._entries.filter((e, i) => e.name !== name || i === foundIndex);\n    } else {\n      this._entries.push(entry);\n    }\n  }\n\n  * [Symbol.iterator]() {\n    for (const entry of this._entries) {\n      yield [entry.name, idlUtils.tryWrapperForImpl(entry.value)];\n    }\n  }\n};\n\nfunction createAnEntry(name, value, filename) {\n  const entry = { name };\n\n  // https://github.com/whatwg/xhr/issues/75\n\n  if (Blob.isImpl(value) && !File.isImpl(value)) {\n    const oldValue = value;\n    value = File.createImpl(value._globalObject, [\n      [],\n      \"blob\",\n      { type: oldValue.type }\n    ]);\n    // \"representing the same bytes\"\n    value._buffer = oldValue._buffer;\n  }\n\n  if (File.isImpl(value) && filename !== undefined) {\n    const oldValue = value;\n    value = File.createImpl(value._globalObject, [\n      [],\n      filename,\n      // spec makes no mention of `lastModified`; assume it is inherited\n      // (Chrome's behavior)\n      { type: oldValue.type, lastModified: oldValue.lastModified }\n    ]);\n    // \"representing the same bytes\"\n    value._buffer = oldValue._buffer;\n  }\n\n  entry.value = value;\n\n  return entry;\n}\n\nfunction constructTheEntryList(form, submitter) {\n  // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#constructing-the-form-data-set\n  // TODO: handle encoding\n  // TODO: handling \"constructing entry list\"\n\n  const controls = form.elements.filter(isSubmittable); // submittable is a subset of listed\n  const entryList = [];\n\n  for (const field of controls) {\n    if (closest(field, \"datalist\") !== null) {\n      continue;\n    }\n    if (isDisabled(field)) {\n      continue;\n    }\n    if (isButton(field) && field !== submitter) {\n      continue;\n    }\n    if (field.type === \"checkbox\" && field._checkedness === false) {\n      continue;\n    }\n    if (field.type === \"radio\" && field._checkedness === false) {\n      continue;\n    }\n    if (field.localName === \"object\") { // in jsdom, no objects are \"using a plugin\"\n      continue;\n    }\n\n    // TODO: Handle <input type=\"image\">\n    // TODO: handle form-associated custom elements.\n\n    const name = field.getAttributeNS(null, \"name\");\n    if (name === null || name === \"\") {\n      continue;\n    }\n\n    if (field.localName === \"select\") {\n      for (const option of field.options) {\n        if (option._selectedness === true && !isDisabled(field)) {\n          appendAnEntry(entryList, name, option._getValue());\n        }\n      }\n    } else if (field.localName === \"input\" && (field.type === \"checkbox\" || field.type === \"radio\")) {\n      const value = field.hasAttributeNS(null, \"value\") ? field.getAttributeNS(null, \"value\") : \"on\";\n      appendAnEntry(entryList, name, value);\n    } else if (field.type === \"file\") {\n      if (field.files.length === 0) {\n        const value = File.createImpl(form._globalObject, [[], \"\", { type: \"application/octet-stream\" }]);\n        appendAnEntry(entryList, name, value);\n      } else {\n        for (let i = 0; i < field.files.length; ++i) {\n          appendAnEntry(entryList, name, field.files.item(i));\n        }\n      }\n    } /* skip plugins. TODO: _charset_ */ else if (field.localName === \"textarea\") {\n      appendAnEntry(entryList, name, field._getValue(), true);\n    } else {\n      appendAnEntry(entryList, name, field._getValue());\n    }\n\n    const dirname = field.getAttributeNS(null, \"dirname\");\n    if (dirname !== null && dirname !== \"\") {\n      const dir = \"ltr\"; // jsdom does not (yet?) implement actual directionality\n      appendAnEntry(entryList, dirname, dir);\n    }\n  }\n\n  // TODO: formdata event\n\n  return entryList;\n}\n\nfunction appendAnEntry(entryList, name, value, preventLineBreakNormalization = false) {\n  name = conversions.USVString(normalizeToCRLF(name));\n  if (!File.isImpl(value)) {\n    if (!preventLineBreakNormalization) {\n      value = normalizeToCRLF(value);\n    }\n    value = conversions.USVString(value);\n  }\n  const entry = createAnEntry(name, value);\n  entryList.push(entry);\n}\n"]},"metadata":{},"sourceType":"script"}