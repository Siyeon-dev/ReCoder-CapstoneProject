{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\nconst interfaceName = \"Headers\";\nconst IteratorPrototype = Object.create(utils.IteratorPrototype, {\n  next: {\n    value: function next() {\n      const internal = this[utils.iterInternalSymbol];\n      const {\n        target,\n        kind,\n        index\n      } = internal;\n      const values = Array.from(target[implSymbol]);\n      const len = values.length;\n\n      if (index >= len) {\n        return {\n          value: undefined,\n          done: true\n        };\n      }\n\n      const pair = values[index];\n      internal.index = index + 1;\n      const [key, value] = pair.map(utils.tryWrapperForImpl);\n      let result;\n\n      switch (kind) {\n        case \"key\":\n          result = key;\n          break;\n\n        case \"value\":\n          result = value;\n          break;\n\n        case \"key+value\":\n          result = [key, value];\n          break;\n      }\n\n      return {\n        value: result,\n        done: false\n      };\n    },\n    writable: true,\n    enumerable: true,\n    configurable: true\n  },\n  [Symbol.toStringTag]: {\n    value: \"Headers Iterator\",\n    configurable: true\n  }\n});\n\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\n\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\n\nexports.convert = (value, {\n  context = \"The provided value\"\n} = {}) => {\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n\n  throw new TypeError(`${context} is not of type 'Headers'.`);\n};\n\nexports.createDefaultIterator = (target, kind) => {\n  const iterator = Object.create(IteratorPrototype);\n  Object.defineProperty(iterator, utils.iterInternalSymbol, {\n    value: {\n      target,\n      kind,\n      index: 0\n    },\n    configurable: true\n  });\n  return iterator;\n};\n\nfunction makeWrapper(globalObject) {\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    throw new Error(\"Internal error: invalid global object\");\n  }\n\n  const ctor = globalObject[ctorRegistrySymbol][\"Headers\"];\n\n  if (ctor === undefined) {\n    throw new Error(\"Internal error: constructor Headers is not installed on the passed global object\");\n  }\n\n  return Object.create(ctor.prototype);\n}\n\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = (wrapper, globalObject) => {};\n\nexports.setup = (wrapper, globalObject, constructorArgs = [], privateData = {}) => {\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n\n  return wrapper;\n};\n\nexports.new = globalObject => {\n  const wrapper = makeWrapper(globalObject);\n\n  exports._internalSetup(wrapper, globalObject);\n\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n\n  return wrapper[implSymbol];\n};\n\nconst exposed = new Set([\"Window\", \"Worker\"]);\n\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n\n  class Headers {\n    constructor() {\n      const args = [];\n      {\n        let curArg = arguments[0];\n\n        if (curArg !== undefined) {\n          if (utils.isObject(curArg)) {\n            if (curArg[Symbol.iterator] !== undefined) {\n              if (!utils.isObject(curArg)) {\n                throw new TypeError(\"Failed to construct 'Headers': parameter 1\" + \" sequence\" + \" is not an iterable object.\");\n              } else {\n                const V = [];\n                const tmp = curArg;\n\n                for (let nextItem of tmp) {\n                  if (!utils.isObject(nextItem)) {\n                    throw new TypeError(\"Failed to construct 'Headers': parameter 1\" + \" sequence\" + \"'s element\" + \" is not an iterable object.\");\n                  } else {\n                    const V = [];\n                    const tmp = nextItem;\n\n                    for (let nextItem of tmp) {\n                      nextItem = conversions[\"ByteString\"](nextItem, {\n                        context: \"Failed to construct 'Headers': parameter 1\" + \" sequence\" + \"'s element\" + \"'s element\"\n                      });\n                      V.push(nextItem);\n                    }\n\n                    nextItem = V;\n                  }\n\n                  V.push(nextItem);\n                }\n\n                curArg = V;\n              }\n            } else {\n              if (!utils.isObject(curArg)) {\n                throw new TypeError(\"Failed to construct 'Headers': parameter 1\" + \" record\" + \" is not an object.\");\n              } else {\n                const result = Object.create(null);\n\n                for (const key of Reflect.ownKeys(curArg)) {\n                  const desc = Object.getOwnPropertyDescriptor(curArg, key);\n\n                  if (desc && desc.enumerable) {\n                    let typedKey = key;\n                    typedKey = conversions[\"ByteString\"](typedKey, {\n                      context: \"Failed to construct 'Headers': parameter 1\" + \" record\" + \"'s key\"\n                    });\n                    let typedValue = curArg[key];\n                    typedValue = conversions[\"ByteString\"](typedValue, {\n                      context: \"Failed to construct 'Headers': parameter 1\" + \" record\" + \"'s value\"\n                    });\n                    result[typedKey] = typedValue;\n                  }\n                }\n\n                curArg = result;\n              }\n            }\n          } else {\n            throw new TypeError(\"Failed to construct 'Headers': parameter 1\" + \" is not of any supported type.\");\n          }\n        }\n\n        args.push(curArg);\n      }\n      return exports.setup(Object.create(new.target.prototype), globalObject, args);\n    }\n\n    append(name, value) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      if (arguments.length < 2) {\n        throw new TypeError(\"Failed to execute 'append' on 'Headers': 2 arguments required, but only \" + arguments.length + \" present.\");\n      }\n\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"ByteString\"](curArg, {\n          context: \"Failed to execute 'append' on 'Headers': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = conversions[\"ByteString\"](curArg, {\n          context: \"Failed to execute 'append' on 'Headers': parameter 2\"\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].append(...args);\n    }\n\n    delete(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      if (arguments.length < 1) {\n        throw new TypeError(\"Failed to execute 'delete' on 'Headers': 1 argument required, but only \" + arguments.length + \" present.\");\n      }\n\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"ByteString\"](curArg, {\n          context: \"Failed to execute 'delete' on 'Headers': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].delete(...args);\n    }\n\n    get(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      if (arguments.length < 1) {\n        throw new TypeError(\"Failed to execute 'get' on 'Headers': 1 argument required, but only \" + arguments.length + \" present.\");\n      }\n\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"ByteString\"](curArg, {\n          context: \"Failed to execute 'get' on 'Headers': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].get(...args);\n    }\n\n    has(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      if (arguments.length < 1) {\n        throw new TypeError(\"Failed to execute 'has' on 'Headers': 1 argument required, but only \" + arguments.length + \" present.\");\n      }\n\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"ByteString\"](curArg, {\n          context: \"Failed to execute 'has' on 'Headers': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].has(...args);\n    }\n\n    set(name, value) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      if (arguments.length < 2) {\n        throw new TypeError(\"Failed to execute 'set' on 'Headers': 2 arguments required, but only \" + arguments.length + \" present.\");\n      }\n\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"ByteString\"](curArg, {\n          context: \"Failed to execute 'set' on 'Headers': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = conversions[\"ByteString\"](curArg, {\n          context: \"Failed to execute 'set' on 'Headers': parameter 2\"\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].set(...args);\n    }\n\n    keys() {\n      if (!this || !exports.is(this)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return exports.createDefaultIterator(this, \"key\");\n    }\n\n    values() {\n      if (!this || !exports.is(this)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return exports.createDefaultIterator(this, \"value\");\n    }\n\n    entries() {\n      if (!this || !exports.is(this)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return exports.createDefaultIterator(this, \"key+value\");\n    }\n\n    forEach(callback) {\n      if (!this || !exports.is(this)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      if (arguments.length < 1) {\n        throw new TypeError(\"Failed to execute 'forEach' on 'iterable': 1 argument required, \" + \"but only 0 present.\");\n      }\n\n      if (typeof callback !== \"function\") {\n        throw new TypeError(\"Failed to execute 'forEach' on 'iterable': The callback provided \" + \"as parameter 1 is not a function.\");\n      }\n\n      const thisArg = arguments[1];\n      let pairs = Array.from(this[implSymbol]);\n      let i = 0;\n\n      while (i < pairs.length) {\n        const [key, value] = pairs[i].map(utils.tryWrapperForImpl);\n        callback.call(thisArg, value, key, this);\n        pairs = Array.from(this[implSymbol]);\n        i++;\n      }\n    }\n\n  }\n\n  Object.defineProperties(Headers.prototype, {\n    append: {\n      enumerable: true\n    },\n    delete: {\n      enumerable: true\n    },\n    get: {\n      enumerable: true\n    },\n    has: {\n      enumerable: true\n    },\n    set: {\n      enumerable: true\n    },\n    keys: {\n      enumerable: true\n    },\n    values: {\n      enumerable: true\n    },\n    entries: {\n      enumerable: true\n    },\n    forEach: {\n      enumerable: true\n    },\n    [Symbol.toStringTag]: {\n      value: \"Headers\",\n      configurable: true\n    },\n    [Symbol.iterator]: {\n      value: Headers.prototype.entries,\n      configurable: true,\n      writable: true\n    }\n  });\n\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    globalObject[ctorRegistrySymbol] = Object.create(null);\n  }\n\n  globalObject[ctorRegistrySymbol][interfaceName] = Headers;\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: Headers\n  });\n};\n\nconst Impl = require(\"../fetch/Headers-impl.js\");","map":{"version":3,"sources":["/Library/WebServer/Documents/capstone/capstone-project-re-coder/node_modules/jsdom/lib/jsdom/living/generated/Headers.js"],"names":["conversions","require","utils","implSymbol","ctorRegistrySymbol","interfaceName","IteratorPrototype","Object","create","next","value","internal","iterInternalSymbol","target","kind","index","values","Array","from","len","length","undefined","done","pair","key","map","tryWrapperForImpl","result","writable","enumerable","configurable","Symbol","toStringTag","exports","is","isObject","hasOwn","Impl","implementation","isImpl","convert","context","implForWrapper","TypeError","createDefaultIterator","iterator","defineProperty","makeWrapper","globalObject","Error","ctor","prototype","constructorArgs","privateData","wrapper","setup","createImpl","_internalSetup","wrapperSymbol","init","new","exposed","Set","install","globalNames","some","globalName","has","Headers","constructor","args","curArg","arguments","V","tmp","nextItem","push","Reflect","ownKeys","desc","getOwnPropertyDescriptor","typedKey","typedValue","append","name","esValue","delete","get","set","keys","entries","forEach","callback","thisArg","pairs","i","call","defineProperties"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\n\nconst interfaceName = \"Headers\";\n\nconst IteratorPrototype = Object.create(utils.IteratorPrototype, {\n  next: {\n    value: function next() {\n      const internal = this[utils.iterInternalSymbol];\n      const { target, kind, index } = internal;\n      const values = Array.from(target[implSymbol]);\n      const len = values.length;\n      if (index >= len) {\n        return { value: undefined, done: true };\n      }\n\n      const pair = values[index];\n      internal.index = index + 1;\n      const [key, value] = pair.map(utils.tryWrapperForImpl);\n\n      let result;\n      switch (kind) {\n        case \"key\":\n          result = key;\n          break;\n        case \"value\":\n          result = value;\n          break;\n        case \"key+value\":\n          result = [key, value];\n          break;\n      }\n      return { value: result, done: false };\n    },\n    writable: true,\n    enumerable: true,\n    configurable: true\n  },\n  [Symbol.toStringTag]: {\n    value: \"Headers Iterator\",\n    configurable: true\n  }\n});\n\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\nexports.convert = (value, { context = \"The provided value\" } = {}) => {\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n  throw new TypeError(`${context} is not of type 'Headers'.`);\n};\n\nexports.createDefaultIterator = (target, kind) => {\n  const iterator = Object.create(IteratorPrototype);\n  Object.defineProperty(iterator, utils.iterInternalSymbol, {\n    value: { target, kind, index: 0 },\n    configurable: true\n  });\n  return iterator;\n};\n\nfunction makeWrapper(globalObject) {\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    throw new Error(\"Internal error: invalid global object\");\n  }\n\n  const ctor = globalObject[ctorRegistrySymbol][\"Headers\"];\n  if (ctor === undefined) {\n    throw new Error(\"Internal error: constructor Headers is not installed on the passed global object\");\n  }\n\n  return Object.create(ctor.prototype);\n}\n\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = (wrapper, globalObject) => {};\n\nexports.setup = (wrapper, globalObject, constructorArgs = [], privateData = {}) => {\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper;\n};\n\nexports.new = globalObject => {\n  const wrapper = makeWrapper(globalObject);\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper[implSymbol];\n};\n\nconst exposed = new Set([\"Window\", \"Worker\"]);\n\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n  class Headers {\n    constructor() {\n      const args = [];\n      {\n        let curArg = arguments[0];\n        if (curArg !== undefined) {\n          if (utils.isObject(curArg)) {\n            if (curArg[Symbol.iterator] !== undefined) {\n              if (!utils.isObject(curArg)) {\n                throw new TypeError(\n                  \"Failed to construct 'Headers': parameter 1\" + \" sequence\" + \" is not an iterable object.\"\n                );\n              } else {\n                const V = [];\n                const tmp = curArg;\n                for (let nextItem of tmp) {\n                  if (!utils.isObject(nextItem)) {\n                    throw new TypeError(\n                      \"Failed to construct 'Headers': parameter 1\" +\n                        \" sequence\" +\n                        \"'s element\" +\n                        \" is not an iterable object.\"\n                    );\n                  } else {\n                    const V = [];\n                    const tmp = nextItem;\n                    for (let nextItem of tmp) {\n                      nextItem = conversions[\"ByteString\"](nextItem, {\n                        context:\n                          \"Failed to construct 'Headers': parameter 1\" + \" sequence\" + \"'s element\" + \"'s element\"\n                      });\n\n                      V.push(nextItem);\n                    }\n                    nextItem = V;\n                  }\n\n                  V.push(nextItem);\n                }\n                curArg = V;\n              }\n            } else {\n              if (!utils.isObject(curArg)) {\n                throw new TypeError(\"Failed to construct 'Headers': parameter 1\" + \" record\" + \" is not an object.\");\n              } else {\n                const result = Object.create(null);\n                for (const key of Reflect.ownKeys(curArg)) {\n                  const desc = Object.getOwnPropertyDescriptor(curArg, key);\n                  if (desc && desc.enumerable) {\n                    let typedKey = key;\n\n                    typedKey = conversions[\"ByteString\"](typedKey, {\n                      context: \"Failed to construct 'Headers': parameter 1\" + \" record\" + \"'s key\"\n                    });\n\n                    let typedValue = curArg[key];\n\n                    typedValue = conversions[\"ByteString\"](typedValue, {\n                      context: \"Failed to construct 'Headers': parameter 1\" + \" record\" + \"'s value\"\n                    });\n\n                    result[typedKey] = typedValue;\n                  }\n                }\n                curArg = result;\n              }\n            }\n          } else {\n            throw new TypeError(\"Failed to construct 'Headers': parameter 1\" + \" is not of any supported type.\");\n          }\n        }\n        args.push(curArg);\n      }\n      return exports.setup(Object.create(new.target.prototype), globalObject, args);\n    }\n\n    append(name, value) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      if (arguments.length < 2) {\n        throw new TypeError(\n          \"Failed to execute 'append' on 'Headers': 2 arguments required, but only \" + arguments.length + \" present.\"\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"ByteString\"](curArg, { context: \"Failed to execute 'append' on 'Headers': parameter 1\" });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = conversions[\"ByteString\"](curArg, { context: \"Failed to execute 'append' on 'Headers': parameter 2\" });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].append(...args);\n    }\n\n    delete(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      if (arguments.length < 1) {\n        throw new TypeError(\n          \"Failed to execute 'delete' on 'Headers': 1 argument required, but only \" + arguments.length + \" present.\"\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"ByteString\"](curArg, { context: \"Failed to execute 'delete' on 'Headers': parameter 1\" });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].delete(...args);\n    }\n\n    get(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      if (arguments.length < 1) {\n        throw new TypeError(\n          \"Failed to execute 'get' on 'Headers': 1 argument required, but only \" + arguments.length + \" present.\"\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"ByteString\"](curArg, { context: \"Failed to execute 'get' on 'Headers': parameter 1\" });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].get(...args);\n    }\n\n    has(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      if (arguments.length < 1) {\n        throw new TypeError(\n          \"Failed to execute 'has' on 'Headers': 1 argument required, but only \" + arguments.length + \" present.\"\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"ByteString\"](curArg, { context: \"Failed to execute 'has' on 'Headers': parameter 1\" });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].has(...args);\n    }\n\n    set(name, value) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      if (arguments.length < 2) {\n        throw new TypeError(\n          \"Failed to execute 'set' on 'Headers': 2 arguments required, but only \" + arguments.length + \" present.\"\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"ByteString\"](curArg, { context: \"Failed to execute 'set' on 'Headers': parameter 1\" });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = conversions[\"ByteString\"](curArg, { context: \"Failed to execute 'set' on 'Headers': parameter 2\" });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].set(...args);\n    }\n\n    keys() {\n      if (!this || !exports.is(this)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n      return exports.createDefaultIterator(this, \"key\");\n    }\n\n    values() {\n      if (!this || !exports.is(this)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n      return exports.createDefaultIterator(this, \"value\");\n    }\n\n    entries() {\n      if (!this || !exports.is(this)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n      return exports.createDefaultIterator(this, \"key+value\");\n    }\n\n    forEach(callback) {\n      if (!this || !exports.is(this)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n      if (arguments.length < 1) {\n        throw new TypeError(\"Failed to execute 'forEach' on 'iterable': 1 argument required, \" + \"but only 0 present.\");\n      }\n      if (typeof callback !== \"function\") {\n        throw new TypeError(\n          \"Failed to execute 'forEach' on 'iterable': The callback provided \" + \"as parameter 1 is not a function.\"\n        );\n      }\n      const thisArg = arguments[1];\n      let pairs = Array.from(this[implSymbol]);\n      let i = 0;\n      while (i < pairs.length) {\n        const [key, value] = pairs[i].map(utils.tryWrapperForImpl);\n        callback.call(thisArg, value, key, this);\n        pairs = Array.from(this[implSymbol]);\n        i++;\n      }\n    }\n  }\n  Object.defineProperties(Headers.prototype, {\n    append: { enumerable: true },\n    delete: { enumerable: true },\n    get: { enumerable: true },\n    has: { enumerable: true },\n    set: { enumerable: true },\n    keys: { enumerable: true },\n    values: { enumerable: true },\n    entries: { enumerable: true },\n    forEach: { enumerable: true },\n    [Symbol.toStringTag]: { value: \"Headers\", configurable: true },\n    [Symbol.iterator]: { value: Headers.prototype.entries, configurable: true, writable: true }\n  });\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    globalObject[ctorRegistrySymbol] = Object.create(null);\n  }\n  globalObject[ctorRegistrySymbol][interfaceName] = Headers;\n\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: Headers\n  });\n};\n\nconst Impl = require(\"../fetch/Headers-impl.js\");\n"]},"metadata":{},"sourceType":"script"}