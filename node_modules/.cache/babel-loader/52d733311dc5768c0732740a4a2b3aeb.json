{"ast":null,"code":"\"use strict\";\n\nconst EventImpl = require(\"./Event-impl\").implementation;\n\nconst MessageEventInit = require(\"../generated/MessageEventInit\");\n\nclass MessageEventImpl extends EventImpl {\n  initMessageEvent(type, bubbles, cancelable, data, origin, lastEventId, source, ports) {\n    if (this._dispatchFlag) {\n      return;\n    }\n\n    this.initEvent(type, bubbles, cancelable);\n    this.data = data;\n    this.origin = origin;\n    this.lastEventId = lastEventId;\n    this.source = source;\n    this.ports = ports;\n  }\n\n}\n\nMessageEventImpl.defaultInit = MessageEventInit.convert(undefined);\nmodule.exports = {\n  implementation: MessageEventImpl\n};","map":{"version":3,"sources":["/Library/WebServer/Documents/capstone/capstone-project-re-coder/node_modules/jsdom/lib/jsdom/living/events/MessageEvent-impl.js"],"names":["EventImpl","require","implementation","MessageEventInit","MessageEventImpl","initMessageEvent","type","bubbles","cancelable","data","origin","lastEventId","source","ports","_dispatchFlag","initEvent","defaultInit","convert","undefined","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,cAAD,CAAP,CAAwBC,cAA1C;;AAEA,MAAMC,gBAAgB,GAAGF,OAAO,CAAC,+BAAD,CAAhC;;AAEA,MAAMG,gBAAN,SAA+BJ,SAA/B,CAAyC;AACvCK,EAAAA,gBAAgB,CAACC,IAAD,EAAOC,OAAP,EAAgBC,UAAhB,EAA4BC,IAA5B,EAAkCC,MAAlC,EAA0CC,WAA1C,EAAuDC,MAAvD,EAA+DC,KAA/D,EAAsE;AACpF,QAAI,KAAKC,aAAT,EAAwB;AACtB;AACD;;AAED,SAAKC,SAAL,CAAeT,IAAf,EAAqBC,OAArB,EAA8BC,UAA9B;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,KAAL,GAAaA,KAAb;AACD;;AAZsC;;AAczCT,gBAAgB,CAACY,WAAjB,GAA+Bb,gBAAgB,CAACc,OAAjB,CAAyBC,SAAzB,CAA/B;AAEAC,MAAM,CAACC,OAAP,GAAiB;AACflB,EAAAA,cAAc,EAAEE;AADD,CAAjB","sourcesContent":["\"use strict\";\n\nconst EventImpl = require(\"./Event-impl\").implementation;\n\nconst MessageEventInit = require(\"../generated/MessageEventInit\");\n\nclass MessageEventImpl extends EventImpl {\n  initMessageEvent(type, bubbles, cancelable, data, origin, lastEventId, source, ports) {\n    if (this._dispatchFlag) {\n      return;\n    }\n\n    this.initEvent(type, bubbles, cancelable);\n    this.data = data;\n    this.origin = origin;\n    this.lastEventId = lastEventId;\n    this.source = source;\n    this.ports = ports;\n  }\n}\nMessageEventImpl.defaultInit = MessageEventInit.convert(undefined);\n\nmodule.exports = {\n  implementation: MessageEventImpl\n};\n"]},"metadata":{},"sourceType":"script"}