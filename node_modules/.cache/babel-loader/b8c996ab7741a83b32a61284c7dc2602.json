{"ast":null,"code":"/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n\n/* eslint-env node */\n'use strict';\n\nimport _defineProperty from \"/Users/kanbaer/Re-Coder_Mobile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport * as utils from '../utils';\nexport { shimGetUserMedia } from './getusermedia';\nexport { shimGetDisplayMedia } from './getdisplaymedia';\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCTrackEvent && 'receiver' in window.RTCTrackEvent.prototype && !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get: function get() {\n        return {\n          receiver: this.receiver\n        };\n      }\n    });\n  }\n}\nexport function shimPeerConnection(window) {\n  var browserDetails = utils.detectBrowser(window);\n\n  if (typeof window !== 'object' || !(window.RTCPeerConnection || window.mozRTCPeerConnection)) {\n    return; // probably media.peerconnection.enabled=false in about:config\n  }\n\n  if (!window.RTCPeerConnection && window.mozRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.mozRTCPeerConnection;\n  }\n\n  if (browserDetails.version < 53) {\n    // shim away need for obsolete RTCIceCandidate/RTCSessionDescription.\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate'].forEach(function (method) {\n      var nativeMethod = window.RTCPeerConnection.prototype[method];\n\n      var methodObj = _defineProperty({}, method, function () {\n        arguments[0] = new (method === 'addIceCandidate' ? window.RTCIceCandidate : window.RTCSessionDescription)(arguments[0]);\n        return nativeMethod.apply(this, arguments);\n      });\n\n      window.RTCPeerConnection.prototype[method] = methodObj[method];\n    });\n  } // support for addIceCandidate(null or undefined)\n  // as well as ignoring {sdpMid, candidate: \"\"}\n\n\n  if (browserDetails.version < 68) {\n    var nativeAddIceCandidate = window.RTCPeerConnection.prototype.addIceCandidate;\n\n    window.RTCPeerConnection.prototype.addIceCandidate = function addIceCandidate() {\n      if (!arguments[0]) {\n        if (arguments[1]) {\n          arguments[1].apply(null);\n        }\n\n        return Promise.resolve();\n      } // Firefox 68+ emits and processes {candidate: \"\", ...}, ignore\n      // in older versions.\n\n\n      if (arguments[0] && arguments[0].candidate === '') {\n        return Promise.resolve();\n      }\n\n      return nativeAddIceCandidate.apply(this, arguments);\n    };\n  }\n\n  var modernStatsTypes = {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  };\n  var nativeGetStats = window.RTCPeerConnection.prototype.getStats;\n\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    var _arguments = Array.prototype.slice.call(arguments),\n        selector = _arguments[0],\n        onSucc = _arguments[1],\n        onErr = _arguments[2];\n\n    return nativeGetStats.apply(this, [selector || null]).then(function (stats) {\n      if (browserDetails.version < 53 && !onSucc) {\n        // Shim only promise getStats with spec-hyphens in type names\n        // Leave callback version alone; misc old uses of forEach before Map\n        try {\n          stats.forEach(function (stat) {\n            stat.type = modernStatsTypes[stat.type] || stat.type;\n          });\n        } catch (e) {\n          if (e.name !== 'TypeError') {\n            throw e;\n          } // Avoid TypeError: \"type\" is read-only, in old versions. 34-43ish\n\n\n          stats.forEach(function (stat, i) {\n            stats.set(i, Object.assign({}, stat, {\n              type: modernStatsTypes[stat.type] || stat.type\n            }));\n          });\n        }\n      }\n\n      return stats;\n    }).then(onSucc, onErr);\n  };\n}\nexport function shimSenderGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection && window.RTCRtpSender)) {\n    return;\n  }\n\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpSender.prototype) {\n    return;\n  }\n\n  var origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n\n  if (origGetSenders) {\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      var _this = this;\n\n      var senders = origGetSenders.apply(this, []);\n      senders.forEach(function (sender) {\n        return sender._pc = _this;\n      });\n      return senders;\n    };\n  }\n\n  var origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n\n  if (origAddTrack) {\n    window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n      var sender = origAddTrack.apply(this, arguments);\n      sender._pc = this;\n      return sender;\n    };\n  }\n\n  window.RTCRtpSender.prototype.getStats = function getStats() {\n    return this.track ? this._pc.getStats(this.track) : Promise.resolve(new Map());\n  };\n}\nexport function shimReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection && window.RTCRtpSender)) {\n    return;\n  }\n\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpReceiver.prototype) {\n    return;\n  }\n\n  var origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n\n  if (origGetReceivers) {\n    window.RTCPeerConnection.prototype.getReceivers = function getReceivers() {\n      var _this2 = this;\n\n      var receivers = origGetReceivers.apply(this, []);\n      receivers.forEach(function (receiver) {\n        return receiver._pc = _this2;\n      });\n      return receivers;\n    };\n  }\n\n  utils.wrapPeerConnectionEvent(window, 'track', function (e) {\n    e.receiver._pc = e.srcElement;\n    return e;\n  });\n\n  window.RTCRtpReceiver.prototype.getStats = function getStats() {\n    return this._pc.getStats(this.track);\n  };\n}\nexport function shimRemoveStream(window) {\n  if (!window.RTCPeerConnection || 'removeStream' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n\n  window.RTCPeerConnection.prototype.removeStream = function removeStream(stream) {\n    var _this3 = this;\n\n    utils.deprecated('removeStream', 'removeTrack');\n    this.getSenders().forEach(function (sender) {\n      if (sender.track && stream.getTracks().includes(sender.track)) {\n        _this3.removeTrack(sender);\n      }\n    });\n  };\n}\nexport function shimRTCDataChannel(window) {\n  // rename DataChannel to RTCDataChannel (native fix in FF60):\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1173851\n  if (window.DataChannel && !window.RTCDataChannel) {\n    window.RTCDataChannel = window.DataChannel;\n  }\n}\nexport function shimAddTransceiver(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n\n  var origAddTransceiver = window.RTCPeerConnection.prototype.addTransceiver;\n\n  if (origAddTransceiver) {\n    window.RTCPeerConnection.prototype.addTransceiver = function addTransceiver() {\n      this.setParametersPromises = [];\n      var initParameters = arguments[1];\n      var shouldPerformCheck = initParameters && 'sendEncodings' in initParameters;\n\n      if (shouldPerformCheck) {\n        // If sendEncodings params are provided, validate grammar\n        initParameters.sendEncodings.forEach(function (encodingParam) {\n          if ('rid' in encodingParam) {\n            var ridRegex = /^[a-z0-9]{0,16}$/i;\n\n            if (!ridRegex.test(encodingParam.rid)) {\n              throw new TypeError('Invalid RID value provided.');\n            }\n          }\n\n          if ('scaleResolutionDownBy' in encodingParam) {\n            if (!(parseFloat(encodingParam.scaleResolutionDownBy) >= 1.0)) {\n              throw new RangeError('scale_resolution_down_by must be >= 1.0');\n            }\n          }\n\n          if ('maxFramerate' in encodingParam) {\n            if (!(parseFloat(encodingParam.maxFramerate) >= 0)) {\n              throw new RangeError('max_framerate must be >= 0.0');\n            }\n          }\n        });\n      }\n\n      var transceiver = origAddTransceiver.apply(this, arguments);\n\n      if (shouldPerformCheck) {\n        // Check if the init options were applied. If not we do this in an\n        // asynchronous way and save the promise reference in a global object.\n        // This is an ugly hack, but at the same time is way more robust than\n        // checking the sender parameters before and after the createOffer\n        // Also note that after the createoffer we are not 100% sure that\n        // the params were asynchronously applied so we might miss the\n        // opportunity to recreate offer.\n        var sender = transceiver.sender;\n        var params = sender.getParameters();\n\n        if (!('encodings' in params) || // Avoid being fooled by patched getParameters() below.\n        params.encodings.length === 1 && Object.keys(params.encodings[0]).length === 0) {\n          params.encodings = initParameters.sendEncodings;\n          sender.sendEncodings = initParameters.sendEncodings;\n          this.setParametersPromises.push(sender.setParameters(params).then(function () {\n            delete sender.sendEncodings;\n          }).catch(function () {\n            delete sender.sendEncodings;\n          }));\n        }\n      }\n\n      return transceiver;\n    };\n  }\n}\nexport function shimGetParameters(window) {\n  if (!(typeof window === 'object' && window.RTCRtpSender)) {\n    return;\n  }\n\n  var origGetParameters = window.RTCRtpSender.prototype.getParameters;\n\n  if (origGetParameters) {\n    window.RTCRtpSender.prototype.getParameters = function getParameters() {\n      var params = origGetParameters.apply(this, arguments);\n\n      if (!('encodings' in params)) {\n        params.encodings = [].concat(this.sendEncodings || [{}]);\n      }\n\n      return params;\n    };\n  }\n}\nexport function shimCreateOffer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n\n  var origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n\n  window.RTCPeerConnection.prototype.createOffer = function createOffer() {\n    var _arguments2 = arguments,\n        _this4 = this;\n\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises).then(function () {\n        return origCreateOffer.apply(_this4, _arguments2);\n      }).finally(function () {\n        _this4.setParametersPromises = [];\n      });\n    }\n\n    return origCreateOffer.apply(this, arguments);\n  };\n}\nexport function shimCreateAnswer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n\n  var origCreateAnswer = window.RTCPeerConnection.prototype.createAnswer;\n\n  window.RTCPeerConnection.prototype.createAnswer = function createAnswer() {\n    var _arguments3 = arguments,\n        _this5 = this;\n\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises).then(function () {\n        return origCreateAnswer.apply(_this5, _arguments3);\n      }).finally(function () {\n        _this5.setParametersPromises = [];\n      });\n    }\n\n    return origCreateAnswer.apply(this, arguments);\n  };\n}","map":{"version":3,"sources":["/Users/kanbaer/Re-Coder_Mobile/node_modules/webrtc-adapter/src/js/firefox/firefox_shim.js"],"names":["utils","shimGetUserMedia","shimGetDisplayMedia","shimOnTrack","window","RTCTrackEvent","prototype","Object","defineProperty","get","receiver","shimPeerConnection","browserDetails","detectBrowser","RTCPeerConnection","mozRTCPeerConnection","version","forEach","method","nativeMethod","methodObj","arguments","RTCIceCandidate","RTCSessionDescription","apply","nativeAddIceCandidate","addIceCandidate","Promise","resolve","candidate","modernStatsTypes","inboundrtp","outboundrtp","candidatepair","localcandidate","remotecandidate","nativeGetStats","getStats","selector","onSucc","onErr","then","stats","stat","type","e","name","i","set","assign","shimSenderGetStats","RTCRtpSender","origGetSenders","getSenders","senders","sender","_pc","origAddTrack","addTrack","track","Map","shimReceiverGetStats","RTCRtpReceiver","origGetReceivers","getReceivers","receivers","wrapPeerConnectionEvent","srcElement","shimRemoveStream","removeStream","stream","deprecated","getTracks","includes","removeTrack","shimRTCDataChannel","DataChannel","RTCDataChannel","shimAddTransceiver","origAddTransceiver","addTransceiver","setParametersPromises","initParameters","shouldPerformCheck","sendEncodings","encodingParam","ridRegex","test","rid","TypeError","parseFloat","scaleResolutionDownBy","RangeError","maxFramerate","transceiver","params","getParameters","encodings","length","keys","push","setParameters","catch","shimGetParameters","origGetParameters","concat","shimCreateOffer","origCreateOffer","createOffer","all","finally","shimCreateAnswer","origCreateAnswer","createAnswer"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCTrackEvent &&\n      ('receiver' in window.RTCTrackEvent.prototype) &&\n      !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get() {\n        return {receiver: this.receiver};\n      }\n    });\n  }\n}\n\nexport function shimPeerConnection(window) {\n  const browserDetails = utils.detectBrowser(window);\n\n  if (typeof window !== 'object' ||\n      !(window.RTCPeerConnection || window.mozRTCPeerConnection)) {\n    return; // probably media.peerconnection.enabled=false in about:config\n  }\n  if (!window.RTCPeerConnection && window.mozRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.mozRTCPeerConnection;\n  }\n\n  if (browserDetails.version < 53) {\n    // shim away need for obsolete RTCIceCandidate/RTCSessionDescription.\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n        .forEach(function(method) {\n          const nativeMethod = window.RTCPeerConnection.prototype[method];\n          const methodObj = {[method]() {\n            arguments[0] = new ((method === 'addIceCandidate') ?\n                window.RTCIceCandidate :\n                window.RTCSessionDescription)(arguments[0]);\n            return nativeMethod.apply(this, arguments);\n          }};\n          window.RTCPeerConnection.prototype[method] = methodObj[method];\n        });\n  }\n\n  // support for addIceCandidate(null or undefined)\n  // as well as ignoring {sdpMid, candidate: \"\"}\n  if (browserDetails.version < 68) {\n    const nativeAddIceCandidate =\n        window.RTCPeerConnection.prototype.addIceCandidate;\n    window.RTCPeerConnection.prototype.addIceCandidate =\n    function addIceCandidate() {\n      if (!arguments[0]) {\n        if (arguments[1]) {\n          arguments[1].apply(null);\n        }\n        return Promise.resolve();\n      }\n      // Firefox 68+ emits and processes {candidate: \"\", ...}, ignore\n      // in older versions.\n      if (arguments[0] && arguments[0].candidate === '') {\n        return Promise.resolve();\n      }\n      return nativeAddIceCandidate.apply(this, arguments);\n    };\n  }\n\n  const modernStatsTypes = {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  };\n\n  const nativeGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    const [selector, onSucc, onErr] = arguments;\n    return nativeGetStats.apply(this, [selector || null])\n      .then(stats => {\n        if (browserDetails.version < 53 && !onSucc) {\n          // Shim only promise getStats with spec-hyphens in type names\n          // Leave callback version alone; misc old uses of forEach before Map\n          try {\n            stats.forEach(stat => {\n              stat.type = modernStatsTypes[stat.type] || stat.type;\n            });\n          } catch (e) {\n            if (e.name !== 'TypeError') {\n              throw e;\n            }\n            // Avoid TypeError: \"type\" is read-only, in old versions. 34-43ish\n            stats.forEach((stat, i) => {\n              stats.set(i, Object.assign({}, stat, {\n                type: modernStatsTypes[stat.type] || stat.type\n              }));\n            });\n          }\n        }\n        return stats;\n      })\n      .then(onSucc, onErr);\n  };\n}\n\nexport function shimSenderGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpSender.prototype) {\n    return;\n  }\n  const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n  if (origGetSenders) {\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      const senders = origGetSenders.apply(this, []);\n      senders.forEach(sender => sender._pc = this);\n      return senders;\n    };\n  }\n\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  if (origAddTrack) {\n    window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n      const sender = origAddTrack.apply(this, arguments);\n      sender._pc = this;\n      return sender;\n    };\n  }\n  window.RTCRtpSender.prototype.getStats = function getStats() {\n    return this.track ? this._pc.getStats(this.track) :\n        Promise.resolve(new Map());\n  };\n}\n\nexport function shimReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpReceiver.prototype) {\n    return;\n  }\n  const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n  if (origGetReceivers) {\n    window.RTCPeerConnection.prototype.getReceivers = function getReceivers() {\n      const receivers = origGetReceivers.apply(this, []);\n      receivers.forEach(receiver => receiver._pc = this);\n      return receivers;\n    };\n  }\n  utils.wrapPeerConnectionEvent(window, 'track', e => {\n    e.receiver._pc = e.srcElement;\n    return e;\n  });\n  window.RTCRtpReceiver.prototype.getStats = function getStats() {\n    return this._pc.getStats(this.track);\n  };\n}\n\nexport function shimRemoveStream(window) {\n  if (!window.RTCPeerConnection ||\n      'removeStream' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      utils.deprecated('removeStream', 'removeTrack');\n      this.getSenders().forEach(sender => {\n        if (sender.track && stream.getTracks().includes(sender.track)) {\n          this.removeTrack(sender);\n        }\n      });\n    };\n}\n\nexport function shimRTCDataChannel(window) {\n  // rename DataChannel to RTCDataChannel (native fix in FF60):\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1173851\n  if (window.DataChannel && !window.RTCDataChannel) {\n    window.RTCDataChannel = window.DataChannel;\n  }\n}\n\nexport function shimAddTransceiver(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origAddTransceiver = window.RTCPeerConnection.prototype.addTransceiver;\n  if (origAddTransceiver) {\n    window.RTCPeerConnection.prototype.addTransceiver =\n      function addTransceiver() {\n        this.setParametersPromises = [];\n        const initParameters = arguments[1];\n        const shouldPerformCheck = initParameters &&\n                                  'sendEncodings' in initParameters;\n        if (shouldPerformCheck) {\n          // If sendEncodings params are provided, validate grammar\n          initParameters.sendEncodings.forEach((encodingParam) => {\n            if ('rid' in encodingParam) {\n              const ridRegex = /^[a-z0-9]{0,16}$/i;\n              if (!ridRegex.test(encodingParam.rid)) {\n                throw new TypeError('Invalid RID value provided.');\n              }\n            }\n            if ('scaleResolutionDownBy' in encodingParam) {\n              if (!(parseFloat(encodingParam.scaleResolutionDownBy) >= 1.0)) {\n                throw new RangeError('scale_resolution_down_by must be >= 1.0');\n              }\n            }\n            if ('maxFramerate' in encodingParam) {\n              if (!(parseFloat(encodingParam.maxFramerate) >= 0)) {\n                throw new RangeError('max_framerate must be >= 0.0');\n              }\n            }\n          });\n        }\n        const transceiver = origAddTransceiver.apply(this, arguments);\n        if (shouldPerformCheck) {\n          // Check if the init options were applied. If not we do this in an\n          // asynchronous way and save the promise reference in a global object.\n          // This is an ugly hack, but at the same time is way more robust than\n          // checking the sender parameters before and after the createOffer\n          // Also note that after the createoffer we are not 100% sure that\n          // the params were asynchronously applied so we might miss the\n          // opportunity to recreate offer.\n          const {sender} = transceiver;\n          const params = sender.getParameters();\n          if (!('encodings' in params) ||\n              // Avoid being fooled by patched getParameters() below.\n              (params.encodings.length === 1 &&\n               Object.keys(params.encodings[0]).length === 0)) {\n            params.encodings = initParameters.sendEncodings;\n            sender.sendEncodings = initParameters.sendEncodings;\n            this.setParametersPromises.push(sender.setParameters(params)\n              .then(() => {\n                delete sender.sendEncodings;\n              }).catch(() => {\n                delete sender.sendEncodings;\n              })\n            );\n          }\n        }\n        return transceiver;\n      };\n  }\n}\n\nexport function shimGetParameters(window) {\n  if (!(typeof window === 'object' && window.RTCRtpSender)) {\n    return;\n  }\n  const origGetParameters = window.RTCRtpSender.prototype.getParameters;\n  if (origGetParameters) {\n    window.RTCRtpSender.prototype.getParameters =\n      function getParameters() {\n        const params = origGetParameters.apply(this, arguments);\n        if (!('encodings' in params)) {\n          params.encodings = [].concat(this.sendEncodings || [{}]);\n        }\n        return params;\n      };\n  }\n}\n\nexport function shimCreateOffer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n  window.RTCPeerConnection.prototype.createOffer = function createOffer() {\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises)\n      .then(() => {\n        return origCreateOffer.apply(this, arguments);\n      })\n      .finally(() => {\n        this.setParametersPromises = [];\n      });\n    }\n    return origCreateOffer.apply(this, arguments);\n  };\n}\n\nexport function shimCreateAnswer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origCreateAnswer = window.RTCPeerConnection.prototype.createAnswer;\n  window.RTCPeerConnection.prototype.createAnswer = function createAnswer() {\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises)\n      .then(() => {\n        return origCreateAnswer.apply(this, arguments);\n      })\n      .finally(() => {\n        this.setParametersPromises = [];\n      });\n    }\n    return origCreateAnswer.apply(this, arguments);\n  };\n}\n"]},"metadata":{},"sourceType":"module"}