{"ast":null,"code":"\"use strict\";\n\nconst stableSortBy = require(\"lodash.sortby\");\n\nconst urlencoded = require(\"./urlencoded\");\n\nexports.implementation = class URLSearchParamsImpl {\n  constructor(globalObject, constructorArgs, {\n    doNotStripQMark = false\n  }) {\n    let init = constructorArgs[0];\n    this._list = [];\n    this._url = null;\n\n    if (!doNotStripQMark && typeof init === \"string\" && init[0] === \"?\") {\n      init = init.slice(1);\n    }\n\n    if (Array.isArray(init)) {\n      for (const pair of init) {\n        if (pair.length !== 2) {\n          throw new TypeError(\"Failed to construct 'URLSearchParams': parameter 1 sequence's element does not \" + \"contain exactly two elements.\");\n        }\n\n        this._list.push([pair[0], pair[1]]);\n      }\n    } else if (typeof init === \"object\" && Object.getPrototypeOf(init) === null) {\n      for (const name of Object.keys(init)) {\n        const value = init[name];\n\n        this._list.push([name, value]);\n      }\n    } else {\n      this._list = urlencoded.parseUrlencodedString(init);\n    }\n  }\n\n  _updateSteps() {\n    if (this._url !== null) {\n      let query = urlencoded.serializeUrlencoded(this._list);\n\n      if (query === \"\") {\n        query = null;\n      }\n\n      this._url._url.query = query;\n    }\n  }\n\n  append(name, value) {\n    this._list.push([name, value]);\n\n    this._updateSteps();\n  }\n\n  delete(name) {\n    let i = 0;\n\n    while (i < this._list.length) {\n      if (this._list[i][0] === name) {\n        this._list.splice(i, 1);\n      } else {\n        i++;\n      }\n    }\n\n    this._updateSteps();\n  }\n\n  get(name) {\n    for (const tuple of this._list) {\n      if (tuple[0] === name) {\n        return tuple[1];\n      }\n    }\n\n    return null;\n  }\n\n  getAll(name) {\n    const output = [];\n\n    for (const tuple of this._list) {\n      if (tuple[0] === name) {\n        output.push(tuple[1]);\n      }\n    }\n\n    return output;\n  }\n\n  has(name) {\n    for (const tuple of this._list) {\n      if (tuple[0] === name) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  set(name, value) {\n    let found = false;\n    let i = 0;\n\n    while (i < this._list.length) {\n      if (this._list[i][0] === name) {\n        if (found) {\n          this._list.splice(i, 1);\n        } else {\n          found = true;\n          this._list[i][1] = value;\n          i++;\n        }\n      } else {\n        i++;\n      }\n    }\n\n    if (!found) {\n      this._list.push([name, value]);\n    }\n\n    this._updateSteps();\n  }\n\n  sort() {\n    this._list = stableSortBy(this._list, [0]);\n\n    this._updateSteps();\n  }\n\n  [Symbol.iterator]() {\n    return this._list[Symbol.iterator]();\n  }\n\n  toString() {\n    return urlencoded.serializeUrlencoded(this._list);\n  }\n\n};","map":{"version":3,"sources":["/Library/WebServer/Documents/capstone/capstone-project-re-coder/node_modules/whatwg-url/dist/URLSearchParams-impl.js"],"names":["stableSortBy","require","urlencoded","exports","implementation","URLSearchParamsImpl","constructor","globalObject","constructorArgs","doNotStripQMark","init","_list","_url","slice","Array","isArray","pair","length","TypeError","push","Object","getPrototypeOf","name","keys","value","parseUrlencodedString","_updateSteps","query","serializeUrlencoded","append","delete","i","splice","get","tuple","getAll","output","has","set","found","sort","Symbol","iterator","toString"],"mappings":"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","sourcesContent":["\"use strict\";\nconst stableSortBy = require(\"lodash.sortby\");\nconst urlencoded = require(\"./urlencoded\");\n\nexports.implementation = class URLSearchParamsImpl {\n  constructor(globalObject, constructorArgs, { doNotStripQMark = false }) {\n    let init = constructorArgs[0];\n    this._list = [];\n    this._url = null;\n\n    if (!doNotStripQMark && typeof init === \"string\" && init[0] === \"?\") {\n      init = init.slice(1);\n    }\n\n    if (Array.isArray(init)) {\n      for (const pair of init) {\n        if (pair.length !== 2) {\n          throw new TypeError(\"Failed to construct 'URLSearchParams': parameter 1 sequence's element does not \" +\n                              \"contain exactly two elements.\");\n        }\n        this._list.push([pair[0], pair[1]]);\n      }\n    } else if (typeof init === \"object\" && Object.getPrototypeOf(init) === null) {\n      for (const name of Object.keys(init)) {\n        const value = init[name];\n        this._list.push([name, value]);\n      }\n    } else {\n      this._list = urlencoded.parseUrlencodedString(init);\n    }\n  }\n\n  _updateSteps() {\n    if (this._url !== null) {\n      let query = urlencoded.serializeUrlencoded(this._list);\n      if (query === \"\") {\n        query = null;\n      }\n      this._url._url.query = query;\n    }\n  }\n\n  append(name, value) {\n    this._list.push([name, value]);\n    this._updateSteps();\n  }\n\n  delete(name) {\n    let i = 0;\n    while (i < this._list.length) {\n      if (this._list[i][0] === name) {\n        this._list.splice(i, 1);\n      } else {\n        i++;\n      }\n    }\n    this._updateSteps();\n  }\n\n  get(name) {\n    for (const tuple of this._list) {\n      if (tuple[0] === name) {\n        return tuple[1];\n      }\n    }\n    return null;\n  }\n\n  getAll(name) {\n    const output = [];\n    for (const tuple of this._list) {\n      if (tuple[0] === name) {\n        output.push(tuple[1]);\n      }\n    }\n    return output;\n  }\n\n  has(name) {\n    for (const tuple of this._list) {\n      if (tuple[0] === name) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  set(name, value) {\n    let found = false;\n    let i = 0;\n    while (i < this._list.length) {\n      if (this._list[i][0] === name) {\n        if (found) {\n          this._list.splice(i, 1);\n        } else {\n          found = true;\n          this._list[i][1] = value;\n          i++;\n        }\n      } else {\n        i++;\n      }\n    }\n    if (!found) {\n      this._list.push([name, value]);\n    }\n    this._updateSteps();\n  }\n\n  sort() {\n    this._list = stableSortBy(this._list, [0]);\n    this._updateSteps();\n  }\n\n  [Symbol.iterator]() {\n    return this._list[Symbol.iterator]();\n  }\n\n  toString() {\n    return urlencoded.serializeUrlencoded(this._list);\n  }\n};\n"]},"metadata":{},"sourceType":"script"}