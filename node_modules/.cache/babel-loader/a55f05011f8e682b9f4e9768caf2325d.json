{"ast":null,"code":"var _jsxFileName = \"/Library/WebServer/Documents/capstone/capstone-project-re-coder/src/Components/Modal/CreateProblem.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport useModal from \"./useModal\";\nimport QuizEditor from \"../Teacher/Editor/QuizEditor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CreateProblemInfo = ({\n  setIsOpen,\n  quizList,\n  setQuizList\n}) => {\n  _s();\n\n  const [problemBoartHtml, setProblemBoartHtml] = useState(null);\n  const [questionName, setQuestionName] = useState(\"\");\n  const [questionScore, setQuestionSocre] = useState(\"\");\n  const [questionCode, setQuestionCode] = useState(\"\");\n\n  const CreateProblemList = e => {\n    e.preventDefault();\n    console.log(e);\n    let ProblemData = {\n      question_name: \"\",\n      question_score: \"\",\n      question_text: \"\",\n      question_code: \"\"\n    };\n    ProblemData.question_name = e.target.newClassName;\n    ProblemData.question_score = e.target.new_problem_score;\n    ProblemData.question_text = e.target.problemBoartHtml;\n    ProblemData.question_code = e.target.new_problem_default_code;\n    console.log(ProblemData);\n  };\n\n  const handleCreate = e => {\n    setQuizList([...quizList, {\n      question_name: questionName,\n      question_score: questionScore,\n      question_text: problemBoartHtml,\n      question_code: questionCode\n    }]);\n  };\n\n  const handleChange = (e, setFunction) => {\n    e.preventDefault();\n    setFunction(e.target.value);\n  };\n\n  useEffect(() => {\n    console.log(questionName, questionScore, problemBoartHtml, questionCode);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create_problem_area\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: CreateProblemList,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input_area\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uBB38\\uC81C\\uBA85\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"newClassName\",\n          className: \"new_problem_name\",\n          onChange: e => {\n            handleChange(e, setQuestionName);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input_area\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uBC30\\uC810\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"newClassScore\",\n          className: \"new_problem_score\",\n          onChange: e => {\n            handleChange(e, setQuestionSocre);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text_area\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uBB38\\uC81C\\uC9C0\\uBB38\\uC785\\uB825\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(QuizEditor, {\n          setProblemBoartHtml: setProblemBoartHtml\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text_area\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uAE30\\uBCF8\\uC81C\\uACF5\\uCF54\\uB4DC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"new_problem_default_code\",\n          cols: \"30\",\n          rows: \"10\",\n          placeholder: \"\\uC2DC\\uD5D8\\uC5D0 \\uC81C\\uACF5\\uB418\\uB294 \\uAE30\\uBCF8 \\uCF54\\uB4DC\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n          onChange: e => {\n            handleChange(e, setQuestionCode);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn_wrap\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"create_problem_btn\",\n            onClick: e => {\n              handleCreate();\n              setIsOpen(false);\n            },\n            children: \"\\uC0DD\\uC131\\uD558\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateProblemInfo, \"WwmFatrbUaMTZ5Z1cG5HZ68H+Gc=\");\n\n_c = CreateProblemInfo;\n\nconst CreateProblem = ({\n  quizList,\n  setQuizList\n}) => {\n  _s2();\n\n  const [isOpen, setIsOpen, Modal] = useModal();\n  console.log(isOpen);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add_questions_btn\",\n      onClick: () => setIsOpen(!isOpen),\n      children: \"\\uBB38\\uC81C \\uCD94\\uAC00\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal create_problem \",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal_area\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"tit\",\n            children: \"\\uC0C8\\uB85C\\uC6B4 \\uBB38\\uC81C \\uCD94\\uAC00\\uD558\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CreateProblemInfo, {\n            setIsOpen: setIsOpen,\n            setQuizList: setQuizList,\n            quizList: quizList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsOpen(false),\n            className: \"modal_close\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/img/modal_close.gif\",\n              alt: \"\\uBAA8\\uB2EC \\uB2EB\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(CreateProblem, \"uFAEG/uCcMayjYkBL/X4/f9K6mI=\", false, function () {\n  return [useModal];\n});\n\n_c2 = CreateProblem;\nexport default CreateProblem;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CreateProblemInfo\");\n$RefreshReg$(_c2, \"CreateProblem\");","map":{"version":3,"sources":["/Library/WebServer/Documents/capstone/capstone-project-re-coder/src/Components/Modal/CreateProblem.js"],"names":["React","useEffect","useRef","useState","useModal","QuizEditor","CreateProblemInfo","setIsOpen","quizList","setQuizList","problemBoartHtml","setProblemBoartHtml","questionName","setQuestionName","questionScore","setQuestionSocre","questionCode","setQuestionCode","CreateProblemList","e","preventDefault","console","log","ProblemData","question_name","question_score","question_text","question_code","target","newClassName","new_problem_score","new_problem_default_code","handleCreate","handleChange","setFunction","value","CreateProblem","isOpen","Modal"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport useModal from \"./useModal\";\nimport QuizEditor from \"../Teacher/Editor/QuizEditor\";\n\nconst CreateProblemInfo = ({ setIsOpen, quizList, setQuizList }) => {\n  const [problemBoartHtml, setProblemBoartHtml] = useState(null);\n  const [questionName, setQuestionName] = useState(\"\");\n  const [questionScore, setQuestionSocre] = useState(\"\");\n  const [questionCode, setQuestionCode] = useState(\"\");\n\n  const CreateProblemList = e => {\n    e.preventDefault();\n    console.log(e);\n\n    let ProblemData = {\n      question_name: \"\",\n      question_score: \"\",\n      question_text: \"\",\n      question_code: \"\",\n    };\n\n    ProblemData.question_name = e.target.newClassName;\n    ProblemData.question_score = e.target.new_problem_score;\n    ProblemData.question_text = e.target.problemBoartHtml;\n    ProblemData.question_code = e.target.new_problem_default_code;\n\n    console.log(ProblemData);\n  };\n\n  const handleCreate = (e) => {\n    setQuizList([...quizList, {\n      question_name: questionName,\n      question_score:questionScore,\n      question_text:problemBoartHtml,\n      question_code:questionCode\n    }])\n  }\n\n  const handleChange = (e, setFunction) => {\n    e.preventDefault();\n    setFunction(e.target.value);\n  }\n\n  useEffect(() => {\n    console.log(questionName, questionScore, problemBoartHtml, questionCode)\n  })\n\n  return (\n    <div className=\"create_problem_area\">\n      <form onSubmit={CreateProblemList}>\n        <div className=\"input_area\">\n          <label>문제명</label>\n          <input\n            type=\"text\"\n            name=\"newClassName\"\n            className=\"new_problem_name\"\n            onChange={(e) => {\n              handleChange(e, setQuestionName);\n            }}\n          />\n        </div>\n        <div className=\"input_area\">\n          <label>배점</label>\n          <input\n            type=\"text\"\n            name=\"newClassScore\"\n            className=\"new_problem_score\"\n            onChange={(e) => {\n              handleChange(e, setQuestionSocre);\n            }}\n          />\n        </div>\n        <div className=\"text_area\">\n          <p>문제지문입력</p>\n          <QuizEditor setProblemBoartHtml={setProblemBoartHtml} />\n        </div>\n        <div className=\"text_area\">\n          <p>기본제공코드</p>\n          <textarea\n            name=\"new_problem_default_code\"\n            cols=\"30\"\n            rows=\"10\"\n            placeholder=\"시험에 제공되는 기본 코드를 입력해주세요.\"\n            onChange={(e) => {\n              handleChange(e, setQuestionCode);\n            }}\n          ></textarea>\n          <div className=\"btn_wrap\">\n            <button\n              className=\"create_problem_btn\"\n              onClick={(e) => {\n                handleCreate();\n                setIsOpen(false);\n              }}\n            >\n              생성하기\n            </button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n\n\nconst CreateProblem = ({quizList, setQuizList}) => {\n  const [isOpen, setIsOpen, Modal] = useModal();\n\n  console.log(isOpen);\n  return (\n    <>\n      <div className=\"add_questions_btn\" onClick={() => setIsOpen(!isOpen)}>\n        문제 추가하기\n      </div>\n      <Modal>\n        <div className=\"modal create_problem \">\n          <div className=\"modal_area\">\n            <p className=\"tit\">새로운 문제 추가하기</p>\n\n            <CreateProblemInfo setIsOpen={setIsOpen}\n              setQuizList={setQuizList}\n              quizList={quizList}\n            />\n\n            <button onClick={() => setIsOpen(false)} className=\"modal_close\">\n              <img src=\"/img/modal_close.gif\" alt=\"모달 닫기\" />\n            </button>\n          </div>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nexport default CreateProblem;\n"]},"metadata":{},"sourceType":"module"}