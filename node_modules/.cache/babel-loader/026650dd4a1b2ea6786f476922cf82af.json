{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst MessageEventInit = require(\"./MessageEventInit.js\");\n\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\n\nconst Event = require(\"./Event.js\");\n\nconst interfaceName = \"MessageEvent\";\n\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\n\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\n\nexports.convert = (value, {\n  context = \"The provided value\"\n} = {}) => {\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n\n  throw new TypeError(`${context} is not of type 'MessageEvent'.`);\n};\n\nfunction makeWrapper(globalObject) {\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    throw new Error(\"Internal error: invalid global object\");\n  }\n\n  const ctor = globalObject[ctorRegistrySymbol][\"MessageEvent\"];\n\n  if (ctor === undefined) {\n    throw new Error(\"Internal error: constructor MessageEvent is not installed on the passed global object\");\n  }\n\n  return Object.create(ctor.prototype);\n}\n\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = (wrapper, globalObject) => {\n  Event._internalSetup(wrapper, globalObject);\n};\n\nexports.setup = (wrapper, globalObject, constructorArgs = [], privateData = {}) => {\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n\n  return wrapper;\n};\n\nexports.new = globalObject => {\n  const wrapper = makeWrapper(globalObject);\n\n  exports._internalSetup(wrapper, globalObject);\n\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n\n  return wrapper[implSymbol];\n};\n\nconst exposed = new Set([\"Window\", \"Worker\", \"AudioWorklet\"]);\n\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n\n  if (globalObject.Event === undefined) {\n    throw new Error(\"Internal error: attempting to evaluate MessageEvent before Event\");\n  }\n\n  class MessageEvent extends globalObject.Event {\n    constructor(type) {\n      if (arguments.length < 1) {\n        throw new TypeError(\"Failed to construct 'MessageEvent': 1 argument required, but only \" + arguments.length + \" present.\");\n      }\n\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"DOMString\"](curArg, {\n          context: \"Failed to construct 'MessageEvent': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = MessageEventInit.convert(curArg, {\n          context: \"Failed to construct 'MessageEvent': parameter 2\"\n        });\n        args.push(curArg);\n      }\n      return exports.setup(Object.create(new.target.prototype), globalObject, args);\n    }\n\n    initMessageEvent(type) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      if (arguments.length < 1) {\n        throw new TypeError(\"Failed to execute 'initMessageEvent' on 'MessageEvent': 1 argument required, but only \" + arguments.length + \" present.\");\n      }\n\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"DOMString\"](curArg, {\n          context: \"Failed to execute 'initMessageEvent' on 'MessageEvent': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n\n        if (curArg !== undefined) {\n          curArg = conversions[\"boolean\"](curArg, {\n            context: \"Failed to execute 'initMessageEvent' on 'MessageEvent': parameter 2\"\n          });\n        } else {\n          curArg = false;\n        }\n\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[2];\n\n        if (curArg !== undefined) {\n          curArg = conversions[\"boolean\"](curArg, {\n            context: \"Failed to execute 'initMessageEvent' on 'MessageEvent': parameter 3\"\n          });\n        } else {\n          curArg = false;\n        }\n\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[3];\n\n        if (curArg !== undefined) {\n          curArg = conversions[\"any\"](curArg, {\n            context: \"Failed to execute 'initMessageEvent' on 'MessageEvent': parameter 4\"\n          });\n        } else {\n          curArg = null;\n        }\n\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[4];\n\n        if (curArg !== undefined) {\n          curArg = conversions[\"USVString\"](curArg, {\n            context: \"Failed to execute 'initMessageEvent' on 'MessageEvent': parameter 5\"\n          });\n        } else {\n          curArg = \"\";\n        }\n\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[5];\n\n        if (curArg !== undefined) {\n          curArg = conversions[\"DOMString\"](curArg, {\n            context: \"Failed to execute 'initMessageEvent' on 'MessageEvent': parameter 6\"\n          });\n        } else {\n          curArg = \"\";\n        }\n\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[6];\n\n        if (curArg !== undefined) {\n          if (curArg === null || curArg === undefined) {\n            curArg = null;\n          } else {\n            curArg = utils.tryImplForWrapper(curArg);\n          }\n        } else {\n          curArg = null;\n        }\n\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[7];\n\n        if (curArg !== undefined) {\n          if (!utils.isObject(curArg)) {\n            throw new TypeError(\"Failed to execute 'initMessageEvent' on 'MessageEvent': parameter 8\" + \" is not an iterable object.\");\n          } else {\n            const V = [];\n            const tmp = curArg;\n\n            for (let nextItem of tmp) {\n              nextItem = utils.tryImplForWrapper(nextItem);\n              V.push(nextItem);\n            }\n\n            curArg = V;\n          }\n        } else {\n          curArg = [];\n        }\n\n        args.push(curArg);\n      }\n      return esValue[implSymbol].initMessageEvent(...args);\n    }\n\n    get data() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return esValue[implSymbol][\"data\"];\n    }\n\n    get origin() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return esValue[implSymbol][\"origin\"];\n    }\n\n    get lastEventId() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return esValue[implSymbol][\"lastEventId\"];\n    }\n\n    get source() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"source\"]);\n    }\n\n    get ports() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"ports\"]);\n    }\n\n  }\n\n  Object.defineProperties(MessageEvent.prototype, {\n    initMessageEvent: {\n      enumerable: true\n    },\n    data: {\n      enumerable: true\n    },\n    origin: {\n      enumerable: true\n    },\n    lastEventId: {\n      enumerable: true\n    },\n    source: {\n      enumerable: true\n    },\n    ports: {\n      enumerable: true\n    },\n    [Symbol.toStringTag]: {\n      value: \"MessageEvent\",\n      configurable: true\n    }\n  });\n\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    globalObject[ctorRegistrySymbol] = Object.create(null);\n  }\n\n  globalObject[ctorRegistrySymbol][interfaceName] = MessageEvent;\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: MessageEvent\n  });\n};\n\nconst Impl = require(\"../events/MessageEvent-impl.js\");","map":{"version":3,"sources":["/Library/WebServer/Documents/capstone/capstone-project-re-coder/node_modules/jsdom/lib/jsdom/living/generated/MessageEvent.js"],"names":["conversions","require","utils","MessageEventInit","implSymbol","ctorRegistrySymbol","Event","interfaceName","exports","is","value","isObject","hasOwn","Impl","implementation","isImpl","convert","context","implForWrapper","TypeError","makeWrapper","globalObject","undefined","Error","ctor","Object","create","prototype","constructorArgs","privateData","wrapper","setup","createImpl","_internalSetup","defineProperty","configurable","wrapperSymbol","init","new","exposed","Set","install","globalNames","some","globalName","has","MessageEvent","constructor","type","arguments","length","args","curArg","push","target","initMessageEvent","esValue","tryImplForWrapper","V","tmp","nextItem","data","origin","lastEventId","source","tryWrapperForImpl","ports","defineProperties","enumerable","Symbol","toStringTag","writable"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst MessageEventInit = require(\"./MessageEventInit.js\");\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\nconst Event = require(\"./Event.js\");\n\nconst interfaceName = \"MessageEvent\";\n\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\nexports.convert = (value, { context = \"The provided value\" } = {}) => {\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n  throw new TypeError(`${context} is not of type 'MessageEvent'.`);\n};\n\nfunction makeWrapper(globalObject) {\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    throw new Error(\"Internal error: invalid global object\");\n  }\n\n  const ctor = globalObject[ctorRegistrySymbol][\"MessageEvent\"];\n  if (ctor === undefined) {\n    throw new Error(\"Internal error: constructor MessageEvent is not installed on the passed global object\");\n  }\n\n  return Object.create(ctor.prototype);\n}\n\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = (wrapper, globalObject) => {\n  Event._internalSetup(wrapper, globalObject);\n};\n\nexports.setup = (wrapper, globalObject, constructorArgs = [], privateData = {}) => {\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper;\n};\n\nexports.new = globalObject => {\n  const wrapper = makeWrapper(globalObject);\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper[implSymbol];\n};\n\nconst exposed = new Set([\"Window\", \"Worker\", \"AudioWorklet\"]);\n\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n\n  if (globalObject.Event === undefined) {\n    throw new Error(\"Internal error: attempting to evaluate MessageEvent before Event\");\n  }\n  class MessageEvent extends globalObject.Event {\n    constructor(type) {\n      if (arguments.length < 1) {\n        throw new TypeError(\n          \"Failed to construct 'MessageEvent': 1 argument required, but only \" + arguments.length + \" present.\"\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"DOMString\"](curArg, { context: \"Failed to construct 'MessageEvent': parameter 1\" });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = MessageEventInit.convert(curArg, { context: \"Failed to construct 'MessageEvent': parameter 2\" });\n        args.push(curArg);\n      }\n      return exports.setup(Object.create(new.target.prototype), globalObject, args);\n    }\n\n    initMessageEvent(type) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      if (arguments.length < 1) {\n        throw new TypeError(\n          \"Failed to execute 'initMessageEvent' on 'MessageEvent': 1 argument required, but only \" +\n            arguments.length +\n            \" present.\"\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"DOMString\"](curArg, {\n          context: \"Failed to execute 'initMessageEvent' on 'MessageEvent': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        if (curArg !== undefined) {\n          curArg = conversions[\"boolean\"](curArg, {\n            context: \"Failed to execute 'initMessageEvent' on 'MessageEvent': parameter 2\"\n          });\n        } else {\n          curArg = false;\n        }\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[2];\n        if (curArg !== undefined) {\n          curArg = conversions[\"boolean\"](curArg, {\n            context: \"Failed to execute 'initMessageEvent' on 'MessageEvent': parameter 3\"\n          });\n        } else {\n          curArg = false;\n        }\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[3];\n        if (curArg !== undefined) {\n          curArg = conversions[\"any\"](curArg, {\n            context: \"Failed to execute 'initMessageEvent' on 'MessageEvent': parameter 4\"\n          });\n        } else {\n          curArg = null;\n        }\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[4];\n        if (curArg !== undefined) {\n          curArg = conversions[\"USVString\"](curArg, {\n            context: \"Failed to execute 'initMessageEvent' on 'MessageEvent': parameter 5\"\n          });\n        } else {\n          curArg = \"\";\n        }\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[5];\n        if (curArg !== undefined) {\n          curArg = conversions[\"DOMString\"](curArg, {\n            context: \"Failed to execute 'initMessageEvent' on 'MessageEvent': parameter 6\"\n          });\n        } else {\n          curArg = \"\";\n        }\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[6];\n        if (curArg !== undefined) {\n          if (curArg === null || curArg === undefined) {\n            curArg = null;\n          } else {\n            curArg = utils.tryImplForWrapper(curArg);\n          }\n        } else {\n          curArg = null;\n        }\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[7];\n        if (curArg !== undefined) {\n          if (!utils.isObject(curArg)) {\n            throw new TypeError(\n              \"Failed to execute 'initMessageEvent' on 'MessageEvent': parameter 8\" + \" is not an iterable object.\"\n            );\n          } else {\n            const V = [];\n            const tmp = curArg;\n            for (let nextItem of tmp) {\n              nextItem = utils.tryImplForWrapper(nextItem);\n\n              V.push(nextItem);\n            }\n            curArg = V;\n          }\n        } else {\n          curArg = [];\n        }\n        args.push(curArg);\n      }\n      return esValue[implSymbol].initMessageEvent(...args);\n    }\n\n    get data() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return esValue[implSymbol][\"data\"];\n    }\n\n    get origin() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return esValue[implSymbol][\"origin\"];\n    }\n\n    get lastEventId() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return esValue[implSymbol][\"lastEventId\"];\n    }\n\n    get source() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"source\"]);\n    }\n\n    get ports() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"ports\"]);\n    }\n  }\n  Object.defineProperties(MessageEvent.prototype, {\n    initMessageEvent: { enumerable: true },\n    data: { enumerable: true },\n    origin: { enumerable: true },\n    lastEventId: { enumerable: true },\n    source: { enumerable: true },\n    ports: { enumerable: true },\n    [Symbol.toStringTag]: { value: \"MessageEvent\", configurable: true }\n  });\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    globalObject[ctorRegistrySymbol] = Object.create(null);\n  }\n  globalObject[ctorRegistrySymbol][interfaceName] = MessageEvent;\n\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: MessageEvent\n  });\n};\n\nconst Impl = require(\"../events/MessageEvent-impl.js\");\n"]},"metadata":{},"sourceType":"script"}