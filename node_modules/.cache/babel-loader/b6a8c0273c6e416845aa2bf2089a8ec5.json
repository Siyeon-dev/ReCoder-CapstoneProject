{"ast":null,"code":"\"use strict\";\n\nconst {\n  setAnExistingAttributeValue\n} = require(\"../attributes.js\");\n\nconst NodeImpl = require(\"../nodes/Node-impl.js\").implementation;\n\nconst {\n  ATTRIBUTE_NODE\n} = require(\"../node-type.js\");\n\nexports.implementation = class AttrImpl extends NodeImpl {\n  constructor(globalObject, args, privateData) {\n    super(globalObject, args, privateData);\n    this._namespace = privateData.namespace !== undefined ? privateData.namespace : null;\n    this._namespacePrefix = privateData.namespacePrefix !== undefined ? privateData.namespacePrefix : null;\n    this._localName = privateData.localName;\n    this._value = privateData.value !== undefined ? privateData.value : \"\";\n    this._element = privateData.element !== undefined ? privateData.element : null;\n    this.nodeType = ATTRIBUTE_NODE;\n    this.specified = true;\n  }\n\n  get namespaceURI() {\n    return this._namespace;\n  }\n\n  get prefix() {\n    return this._namespacePrefix;\n  }\n\n  get localName() {\n    return this._localName;\n  }\n\n  get name() {\n    return this._qualifiedName;\n  }\n\n  get nodeName() {\n    return this._qualifiedName;\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  set value(value) {\n    setAnExistingAttributeValue(this, value);\n  }\n\n  get ownerElement() {\n    return this._element;\n  }\n\n  get _qualifiedName() {\n    // https://dom.spec.whatwg.org/#concept-attribute-qualified-name\n    if (this._namespacePrefix === null) {\n      return this._localName;\n    }\n\n    return this._namespacePrefix + \":\" + this._localName;\n  }\n\n};","map":{"version":3,"sources":["/Library/WebServer/Documents/capstone/capstone-project-re-coder/node_modules/jsdom/lib/jsdom/living/attributes/Attr-impl.js"],"names":["setAnExistingAttributeValue","require","NodeImpl","implementation","ATTRIBUTE_NODE","exports","AttrImpl","constructor","globalObject","args","privateData","_namespace","namespace","undefined","_namespacePrefix","namespacePrefix","_localName","localName","_value","value","_element","element","nodeType","specified","namespaceURI","prefix","name","_qualifiedName","nodeName","ownerElement"],"mappings":"AAAA;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAkCC,OAAO,CAAC,kBAAD,CAA/C;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,uBAAD,CAAP,CAAiCE,cAAlD;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAqBH,OAAO,CAAC,iBAAD,CAAlC;;AAEAI,OAAO,CAACF,cAAR,GAAyB,MAAMG,QAAN,SAAuBJ,QAAvB,CAAgC;AACvDK,EAAAA,WAAW,CAACC,YAAD,EAAeC,IAAf,EAAqBC,WAArB,EAAkC;AAC3C,UAAMF,YAAN,EAAoBC,IAApB,EAA0BC,WAA1B;AAEA,SAAKC,UAAL,GAAkBD,WAAW,CAACE,SAAZ,KAA0BC,SAA1B,GAAsCH,WAAW,CAACE,SAAlD,GAA8D,IAAhF;AACA,SAAKE,gBAAL,GAAwBJ,WAAW,CAACK,eAAZ,KAAgCF,SAAhC,GAA4CH,WAAW,CAACK,eAAxD,GAA0E,IAAlG;AACA,SAAKC,UAAL,GAAkBN,WAAW,CAACO,SAA9B;AACA,SAAKC,MAAL,GAAcR,WAAW,CAACS,KAAZ,KAAsBN,SAAtB,GAAkCH,WAAW,CAACS,KAA9C,GAAsD,EAApE;AACA,SAAKC,QAAL,GAAgBV,WAAW,CAACW,OAAZ,KAAwBR,SAAxB,GAAoCH,WAAW,CAACW,OAAhD,GAA0D,IAA1E;AAEA,SAAKC,QAAL,GAAgBlB,cAAhB;AACA,SAAKmB,SAAL,GAAiB,IAAjB;AACD;;AAEe,MAAZC,YAAY,GAAG;AACjB,WAAO,KAAKb,UAAZ;AACD;;AAES,MAANc,MAAM,GAAG;AACX,WAAO,KAAKX,gBAAZ;AACD;;AAEY,MAATG,SAAS,GAAG;AACd,WAAO,KAAKD,UAAZ;AACD;;AAEO,MAAJU,IAAI,GAAG;AACT,WAAO,KAAKC,cAAZ;AACD;;AAEW,MAARC,QAAQ,GAAG;AACb,WAAO,KAAKD,cAAZ;AACD;;AAEQ,MAALR,KAAK,GAAG;AACV,WAAO,KAAKD,MAAZ;AACD;;AACQ,MAALC,KAAK,CAACA,KAAD,EAAQ;AACfnB,IAAAA,2BAA2B,CAAC,IAAD,EAAOmB,KAAP,CAA3B;AACD;;AAEe,MAAZU,YAAY,GAAG;AACjB,WAAO,KAAKT,QAAZ;AACD;;AAEiB,MAAdO,cAAc,GAAG;AACnB;AACA,QAAI,KAAKb,gBAAL,KAA0B,IAA9B,EAAoC;AAClC,aAAO,KAAKE,UAAZ;AACD;;AAED,WAAO,KAAKF,gBAAL,GAAwB,GAAxB,GAA8B,KAAKE,UAA1C;AACD;;AApDsD,CAAzD","sourcesContent":["\"use strict\";\n\nconst { setAnExistingAttributeValue } = require(\"../attributes.js\");\nconst NodeImpl = require(\"../nodes/Node-impl.js\").implementation;\nconst { ATTRIBUTE_NODE } = require(\"../node-type.js\");\n\nexports.implementation = class AttrImpl extends NodeImpl {\n  constructor(globalObject, args, privateData) {\n    super(globalObject, args, privateData);\n\n    this._namespace = privateData.namespace !== undefined ? privateData.namespace : null;\n    this._namespacePrefix = privateData.namespacePrefix !== undefined ? privateData.namespacePrefix : null;\n    this._localName = privateData.localName;\n    this._value = privateData.value !== undefined ? privateData.value : \"\";\n    this._element = privateData.element !== undefined ? privateData.element : null;\n\n    this.nodeType = ATTRIBUTE_NODE;\n    this.specified = true;\n  }\n\n  get namespaceURI() {\n    return this._namespace;\n  }\n\n  get prefix() {\n    return this._namespacePrefix;\n  }\n\n  get localName() {\n    return this._localName;\n  }\n\n  get name() {\n    return this._qualifiedName;\n  }\n\n  get nodeName() {\n    return this._qualifiedName;\n  }\n\n  get value() {\n    return this._value;\n  }\n  set value(value) {\n    setAnExistingAttributeValue(this, value);\n  }\n\n  get ownerElement() {\n    return this._element;\n  }\n\n  get _qualifiedName() {\n    // https://dom.spec.whatwg.org/#concept-attribute-qualified-name\n    if (this._namespacePrefix === null) {\n      return this._localName;\n    }\n\n    return this._namespacePrefix + \":\" + this._localName;\n  }\n};\n"]},"metadata":{},"sourceType":"script"}