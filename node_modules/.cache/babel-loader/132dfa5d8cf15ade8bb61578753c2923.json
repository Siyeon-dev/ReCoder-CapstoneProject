{"ast":null,"code":"\"use strict\";\n/**\n * Manage all the request and it is able to abort\n * all pending request.\n */\n\nmodule.exports = class RequestManager {\n  constructor() {\n    this.openedRequests = [];\n  }\n\n  add(req) {\n    this.openedRequests.push(req);\n  }\n\n  remove(req) {\n    const idx = this.openedRequests.indexOf(req);\n\n    if (idx !== -1) {\n      this.openedRequests.splice(idx, 1);\n    }\n  }\n\n  close() {\n    for (const openedRequest of this.openedRequests) {\n      openedRequest.abort();\n    }\n\n    this.openedRequests = [];\n  }\n\n  size() {\n    return this.openedRequests.length;\n  }\n\n};","map":{"version":3,"sources":["/Library/WebServer/Documents/capstone/capstone-project-re-coder/node_modules/jsdom/lib/jsdom/browser/resources/request-manager.js"],"names":["module","exports","RequestManager","constructor","openedRequests","add","req","push","remove","idx","indexOf","splice","close","openedRequest","abort","size","length"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,OAAP,GAAiB,MAAMC,cAAN,CAAqB;AACpCC,EAAAA,WAAW,GAAG;AACZ,SAAKC,cAAL,GAAsB,EAAtB;AACD;;AAEDC,EAAAA,GAAG,CAACC,GAAD,EAAM;AACP,SAAKF,cAAL,CAAoBG,IAApB,CAAyBD,GAAzB;AACD;;AAEDE,EAAAA,MAAM,CAACF,GAAD,EAAM;AACV,UAAMG,GAAG,GAAG,KAAKL,cAAL,CAAoBM,OAApB,CAA4BJ,GAA5B,CAAZ;;AACA,QAAIG,GAAG,KAAK,CAAC,CAAb,EAAgB;AACd,WAAKL,cAAL,CAAoBO,MAApB,CAA2BF,GAA3B,EAAgC,CAAhC;AACD;AACF;;AAEDG,EAAAA,KAAK,GAAG;AACN,SAAK,MAAMC,aAAX,IAA4B,KAAKT,cAAjC,EAAiD;AAC/CS,MAAAA,aAAa,CAACC,KAAd;AACD;;AACD,SAAKV,cAAL,GAAsB,EAAtB;AACD;;AAEDW,EAAAA,IAAI,GAAG;AACL,WAAO,KAAKX,cAAL,CAAoBY,MAA3B;AACD;;AAzBmC,CAAtC","sourcesContent":["\"use strict\";\n\n/**\n * Manage all the request and it is able to abort\n * all pending request.\n */\nmodule.exports = class RequestManager {\n  constructor() {\n    this.openedRequests = [];\n  }\n\n  add(req) {\n    this.openedRequests.push(req);\n  }\n\n  remove(req) {\n    const idx = this.openedRequests.indexOf(req);\n    if (idx !== -1) {\n      this.openedRequests.splice(idx, 1);\n    }\n  }\n\n  close() {\n    for (const openedRequest of this.openedRequests) {\n      openedRequest.abort();\n    }\n    this.openedRequests = [];\n  }\n\n  size() {\n    return this.openedRequests.length;\n  }\n};\n"]},"metadata":{},"sourceType":"script"}