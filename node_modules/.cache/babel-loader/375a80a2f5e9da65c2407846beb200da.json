{"ast":null,"code":"\"use strict\";\n\nconst idlUtils = require(\"../generated/utils\");\n\nconst NodeList = require(\"../generated/NodeList\");\n\nconst HTMLCollection = require(\"../generated/HTMLCollection\");\n\nconst {\n  addNwsapi\n} = require(\"../helpers/selectors\");\n\nconst {\n  domSymbolTree\n} = require(\"../helpers/internal-constants\");\n\nconst NODE_TYPE = require(\"../node-type\");\n\nconst {\n  convertNodesIntoNode\n} = require(\"../node\");\n\nclass ParentNodeImpl {\n  get children() {\n    if (!this._childrenList) {\n      this._childrenList = HTMLCollection.createImpl(this._globalObject, [], {\n        element: this,\n        query: () => domSymbolTree.childrenToArray(this, {\n          filter: node => node.nodeType === NODE_TYPE.ELEMENT_NODE\n        })\n      });\n    } else {\n      this._childrenList._update();\n    }\n\n    return this._childrenList;\n  }\n\n  get firstElementChild() {\n    for (const child of domSymbolTree.childrenIterator(this)) {\n      if (child.nodeType === NODE_TYPE.ELEMENT_NODE) {\n        return child;\n      }\n    }\n\n    return null;\n  }\n\n  get lastElementChild() {\n    for (const child of domSymbolTree.childrenIterator(this, {\n      reverse: true\n    })) {\n      if (child.nodeType === NODE_TYPE.ELEMENT_NODE) {\n        return child;\n      }\n    }\n\n    return null;\n  }\n\n  get childElementCount() {\n    return this.children.length;\n  }\n\n  prepend(...nodes) {\n    this._preInsert(convertNodesIntoNode(this._ownerDocument, nodes), this.firstChild);\n  }\n\n  append(...nodes) {\n    this._append(convertNodesIntoNode(this._ownerDocument, nodes));\n  }\n\n  querySelector(selectors) {\n    if (shouldAlwaysSelectNothing(this)) {\n      return null;\n    }\n\n    const matcher = addNwsapi(this);\n    return idlUtils.implForWrapper(matcher.first(selectors, idlUtils.wrapperForImpl(this)));\n  } // Warning for internal users: this returns a NodeList containing IDL wrappers instead of impls\n\n\n  querySelectorAll(selectors) {\n    if (shouldAlwaysSelectNothing(this)) {\n      return NodeList.create(this._globalObject, [], {\n        nodes: []\n      });\n    }\n\n    const matcher = addNwsapi(this);\n    const list = matcher.select(selectors, idlUtils.wrapperForImpl(this));\n    return NodeList.create(this._globalObject, [], {\n      nodes: list.map(n => idlUtils.tryImplForWrapper(n))\n    });\n  }\n\n}\n\nfunction shouldAlwaysSelectNothing(elImpl) {\n  // This is true during initialization.\n  return elImpl === elImpl._ownerDocument && !elImpl.documentElement;\n}\n\nmodule.exports = {\n  implementation: ParentNodeImpl\n};","map":{"version":3,"sources":["/Library/WebServer/Documents/capstone/capstone-project-re-coder/node_modules/jsdom/lib/jsdom/living/nodes/ParentNode-impl.js"],"names":["idlUtils","require","NodeList","HTMLCollection","addNwsapi","domSymbolTree","NODE_TYPE","convertNodesIntoNode","ParentNodeImpl","children","_childrenList","createImpl","_globalObject","element","query","childrenToArray","filter","node","nodeType","ELEMENT_NODE","_update","firstElementChild","child","childrenIterator","lastElementChild","reverse","childElementCount","length","prepend","nodes","_preInsert","_ownerDocument","firstChild","append","_append","querySelector","selectors","shouldAlwaysSelectNothing","matcher","implForWrapper","first","wrapperForImpl","querySelectorAll","create","list","select","map","n","tryImplForWrapper","elImpl","documentElement","module","exports","implementation"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst idlUtils = require(\"../generated/utils\");\nconst NodeList = require(\"../generated/NodeList\");\nconst HTMLCollection = require(\"../generated/HTMLCollection\");\nconst { addNwsapi } = require(\"../helpers/selectors\");\nconst { domSymbolTree } = require(\"../helpers/internal-constants\");\nconst NODE_TYPE = require(\"../node-type\");\nconst { convertNodesIntoNode } = require(\"../node\");\n\nclass ParentNodeImpl {\n  get children() {\n    if (!this._childrenList) {\n      this._childrenList = HTMLCollection.createImpl(this._globalObject, [], {\n        element: this,\n        query: () => domSymbolTree.childrenToArray(this, {\n          filter: node => node.nodeType === NODE_TYPE.ELEMENT_NODE\n        })\n      });\n    } else {\n      this._childrenList._update();\n    }\n    return this._childrenList;\n  }\n\n  get firstElementChild() {\n    for (const child of domSymbolTree.childrenIterator(this)) {\n      if (child.nodeType === NODE_TYPE.ELEMENT_NODE) {\n        return child;\n      }\n    }\n\n    return null;\n  }\n\n  get lastElementChild() {\n    for (const child of domSymbolTree.childrenIterator(this, { reverse: true })) {\n      if (child.nodeType === NODE_TYPE.ELEMENT_NODE) {\n        return child;\n      }\n    }\n\n    return null;\n  }\n\n  get childElementCount() {\n    return this.children.length;\n  }\n\n  prepend(...nodes) {\n    this._preInsert(convertNodesIntoNode(this._ownerDocument, nodes), this.firstChild);\n  }\n\n  append(...nodes) {\n    this._append(convertNodesIntoNode(this._ownerDocument, nodes));\n  }\n\n  querySelector(selectors) {\n    if (shouldAlwaysSelectNothing(this)) {\n      return null;\n    }\n    const matcher = addNwsapi(this);\n    return idlUtils.implForWrapper(matcher.first(selectors, idlUtils.wrapperForImpl(this)));\n  }\n\n  // Warning for internal users: this returns a NodeList containing IDL wrappers instead of impls\n  querySelectorAll(selectors) {\n    if (shouldAlwaysSelectNothing(this)) {\n      return NodeList.create(this._globalObject, [], { nodes: [] });\n    }\n    const matcher = addNwsapi(this);\n    const list = matcher.select(selectors, idlUtils.wrapperForImpl(this));\n\n    return NodeList.create(this._globalObject, [], { nodes: list.map(n => idlUtils.tryImplForWrapper(n)) });\n  }\n}\n\nfunction shouldAlwaysSelectNothing(elImpl) {\n  // This is true during initialization.\n  return elImpl === elImpl._ownerDocument && !elImpl.documentElement;\n}\n\nmodule.exports = {\n  implementation: ParentNodeImpl\n};\n"]},"metadata":{},"sourceType":"script"}