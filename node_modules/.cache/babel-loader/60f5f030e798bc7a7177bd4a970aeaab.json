{"ast":null,"code":"\"use strict\";\n\nconst {\n  mixin\n} = require(\"../../utils\");\n\nconst DOMTokenList = require(\"../generated/DOMTokenList\");\n\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\n\nconst HTMLHyperlinkElementUtilsImpl = require(\"./HTMLHyperlinkElementUtils-impl\").implementation;\n\nclass HTMLAnchorElementImpl extends HTMLElementImpl {\n  constructor(globalObject, args, privateData) {\n    super(globalObject, args, privateData);\n\n    this._htmlHyperlinkElementUtilsSetup();\n\n    this._hasActivationBehavior = true;\n  }\n\n  _activationBehavior() {\n    this._followAHyperlink();\n  }\n\n  get relList() {\n    if (this._relList === undefined) {\n      this._relList = DOMTokenList.createImpl(this._globalObject, [], {\n        element: this,\n        attributeLocalName: \"rel\"\n      });\n    }\n\n    return this._relList;\n  }\n\n  get text() {\n    return this.textContent;\n  }\n\n  set text(v) {\n    this.textContent = v;\n  }\n\n  _attrModified(name, value, oldValue) {\n    super._attrModified(name, value, oldValue);\n\n    if (name === \"rel\" && this._relList !== undefined) {\n      this._relList.attrModified();\n    }\n  }\n\n}\n\nmixin(HTMLAnchorElementImpl.prototype, HTMLHyperlinkElementUtilsImpl.prototype);\nmodule.exports = {\n  implementation: HTMLAnchorElementImpl\n};","map":{"version":3,"sources":["/Library/WebServer/Documents/capstone/capstone-project-re-coder/node_modules/jsdom/lib/jsdom/living/nodes/HTMLAnchorElement-impl.js"],"names":["mixin","require","DOMTokenList","HTMLElementImpl","implementation","HTMLHyperlinkElementUtilsImpl","HTMLAnchorElementImpl","constructor","globalObject","args","privateData","_htmlHyperlinkElementUtilsSetup","_hasActivationBehavior","_activationBehavior","_followAHyperlink","relList","_relList","undefined","createImpl","_globalObject","element","attributeLocalName","text","textContent","v","_attrModified","name","value","oldValue","attrModified","prototype","module","exports"],"mappings":"AAAA;;AACA,MAAM;AAAEA,EAAAA;AAAF,IAAYC,OAAO,CAAC,aAAD,CAAzB;;AACA,MAAMC,YAAY,GAAGD,OAAO,CAAC,2BAAD,CAA5B;;AACA,MAAME,eAAe,GAAGF,OAAO,CAAC,oBAAD,CAAP,CAA8BG,cAAtD;;AACA,MAAMC,6BAA6B,GAAGJ,OAAO,CAAC,kCAAD,CAAP,CAA4CG,cAAlF;;AAEA,MAAME,qBAAN,SAAoCH,eAApC,CAAoD;AAClDI,EAAAA,WAAW,CAACC,YAAD,EAAeC,IAAf,EAAqBC,WAArB,EAAkC;AAC3C,UAAMF,YAAN,EAAoBC,IAApB,EAA0BC,WAA1B;;AAEA,SAAKC,+BAAL;;AAEA,SAAKC,sBAAL,GAA8B,IAA9B;AACD;;AAEDC,EAAAA,mBAAmB,GAAG;AACpB,SAAKC,iBAAL;AACD;;AAEU,MAAPC,OAAO,GAAG;AACZ,QAAI,KAAKC,QAAL,KAAkBC,SAAtB,EAAiC;AAC/B,WAAKD,QAAL,GAAgBd,YAAY,CAACgB,UAAb,CAAwB,KAAKC,aAA7B,EAA4C,EAA5C,EAAgD;AAC9DC,QAAAA,OAAO,EAAE,IADqD;AAE9DC,QAAAA,kBAAkB,EAAE;AAF0C,OAAhD,CAAhB;AAID;;AACD,WAAO,KAAKL,QAAZ;AACD;;AAEO,MAAJM,IAAI,GAAG;AACT,WAAO,KAAKC,WAAZ;AACD;;AACO,MAAJD,IAAI,CAACE,CAAD,EAAI;AACV,SAAKD,WAAL,GAAmBC,CAAnB;AACD;;AAEDC,EAAAA,aAAa,CAACC,IAAD,EAAOC,KAAP,EAAcC,QAAd,EAAwB;AACnC,UAAMH,aAAN,CAAoBC,IAApB,EAA0BC,KAA1B,EAAiCC,QAAjC;;AAEA,QAAIF,IAAI,KAAK,KAAT,IAAkB,KAAKV,QAAL,KAAkBC,SAAxC,EAAmD;AACjD,WAAKD,QAAL,CAAca,YAAd;AACD;AACF;;AApCiD;;AAuCpD7B,KAAK,CAACM,qBAAqB,CAACwB,SAAvB,EAAkCzB,6BAA6B,CAACyB,SAAhE,CAAL;AAEAC,MAAM,CAACC,OAAP,GAAiB;AACf5B,EAAAA,cAAc,EAAEE;AADD,CAAjB","sourcesContent":["\"use strict\";\nconst { mixin } = require(\"../../utils\");\nconst DOMTokenList = require(\"../generated/DOMTokenList\");\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\nconst HTMLHyperlinkElementUtilsImpl = require(\"./HTMLHyperlinkElementUtils-impl\").implementation;\n\nclass HTMLAnchorElementImpl extends HTMLElementImpl {\n  constructor(globalObject, args, privateData) {\n    super(globalObject, args, privateData);\n\n    this._htmlHyperlinkElementUtilsSetup();\n\n    this._hasActivationBehavior = true;\n  }\n\n  _activationBehavior() {\n    this._followAHyperlink();\n  }\n\n  get relList() {\n    if (this._relList === undefined) {\n      this._relList = DOMTokenList.createImpl(this._globalObject, [], {\n        element: this,\n        attributeLocalName: \"rel\"\n      });\n    }\n    return this._relList;\n  }\n\n  get text() {\n    return this.textContent;\n  }\n  set text(v) {\n    this.textContent = v;\n  }\n\n  _attrModified(name, value, oldValue) {\n    super._attrModified(name, value, oldValue);\n\n    if (name === \"rel\" && this._relList !== undefined) {\n      this._relList.attrModified();\n    }\n  }\n}\n\nmixin(HTMLAnchorElementImpl.prototype, HTMLHyperlinkElementUtilsImpl.prototype);\n\nmodule.exports = {\n  implementation: HTMLAnchorElementImpl\n};\n"]},"metadata":{},"sourceType":"script"}