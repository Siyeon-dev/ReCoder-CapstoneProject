{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst Node = require(\"./Node.js\");\n\nconst MutationObserverInit = require(\"./MutationObserverInit.js\");\n\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\nconst interfaceName = \"MutationObserver\";\n\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\n\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\n\nexports.convert = (value, {\n  context = \"The provided value\"\n} = {}) => {\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n\n  throw new TypeError(`${context} is not of type 'MutationObserver'.`);\n};\n\nfunction makeWrapper(globalObject) {\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    throw new Error(\"Internal error: invalid global object\");\n  }\n\n  const ctor = globalObject[ctorRegistrySymbol][\"MutationObserver\"];\n\n  if (ctor === undefined) {\n    throw new Error(\"Internal error: constructor MutationObserver is not installed on the passed global object\");\n  }\n\n  return Object.create(ctor.prototype);\n}\n\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = (wrapper, globalObject) => {};\n\nexports.setup = (wrapper, globalObject, constructorArgs = [], privateData = {}) => {\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n\n  return wrapper;\n};\n\nexports.new = globalObject => {\n  const wrapper = makeWrapper(globalObject);\n\n  exports._internalSetup(wrapper, globalObject);\n\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n\n  return wrapper[implSymbol];\n};\n\nconst exposed = new Set([\"Window\"]);\n\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n\n  class MutationObserver {\n    constructor(callback) {\n      if (arguments.length < 1) {\n        throw new TypeError(\"Failed to construct 'MutationObserver': 1 argument required, but only \" + arguments.length + \" present.\");\n      }\n\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = utils.tryImplForWrapper(curArg);\n        args.push(curArg);\n      }\n      return exports.setup(Object.create(new.target.prototype), globalObject, args);\n    }\n\n    observe(target) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      if (arguments.length < 1) {\n        throw new TypeError(\"Failed to execute 'observe' on 'MutationObserver': 1 argument required, but only \" + arguments.length + \" present.\");\n      }\n\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = Node.convert(curArg, {\n          context: \"Failed to execute 'observe' on 'MutationObserver': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = MutationObserverInit.convert(curArg, {\n          context: \"Failed to execute 'observe' on 'MutationObserver': parameter 2\"\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].observe(...args);\n    }\n\n    disconnect() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return esValue[implSymbol].disconnect();\n    }\n\n    takeRecords() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return utils.tryWrapperForImpl(esValue[implSymbol].takeRecords());\n    }\n\n  }\n\n  Object.defineProperties(MutationObserver.prototype, {\n    observe: {\n      enumerable: true\n    },\n    disconnect: {\n      enumerable: true\n    },\n    takeRecords: {\n      enumerable: true\n    },\n    [Symbol.toStringTag]: {\n      value: \"MutationObserver\",\n      configurable: true\n    }\n  });\n\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    globalObject[ctorRegistrySymbol] = Object.create(null);\n  }\n\n  globalObject[ctorRegistrySymbol][interfaceName] = MutationObserver;\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: MutationObserver\n  });\n};\n\nconst Impl = require(\"../mutation-observer/MutationObserver-impl.js\");","map":{"version":3,"sources":["/Library/WebServer/Documents/capstone/capstone-project-re-coder/node_modules/jsdom/lib/jsdom/living/generated/MutationObserver.js"],"names":["conversions","require","utils","Node","MutationObserverInit","implSymbol","ctorRegistrySymbol","interfaceName","exports","is","value","isObject","hasOwn","Impl","implementation","isImpl","convert","context","implForWrapper","TypeError","makeWrapper","globalObject","undefined","Error","ctor","Object","create","prototype","constructorArgs","privateData","wrapper","setup","createImpl","_internalSetup","defineProperty","configurable","wrapperSymbol","init","new","exposed","Set","install","globalNames","some","globalName","has","MutationObserver","constructor","callback","arguments","length","args","curArg","tryImplForWrapper","push","target","observe","esValue","disconnect","takeRecords","tryWrapperForImpl","defineProperties","enumerable","Symbol","toStringTag","writable"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst Node = require(\"./Node.js\");\nconst MutationObserverInit = require(\"./MutationObserverInit.js\");\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\n\nconst interfaceName = \"MutationObserver\";\n\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\nexports.convert = (value, { context = \"The provided value\" } = {}) => {\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n  throw new TypeError(`${context} is not of type 'MutationObserver'.`);\n};\n\nfunction makeWrapper(globalObject) {\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    throw new Error(\"Internal error: invalid global object\");\n  }\n\n  const ctor = globalObject[ctorRegistrySymbol][\"MutationObserver\"];\n  if (ctor === undefined) {\n    throw new Error(\"Internal error: constructor MutationObserver is not installed on the passed global object\");\n  }\n\n  return Object.create(ctor.prototype);\n}\n\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = (wrapper, globalObject) => {};\n\nexports.setup = (wrapper, globalObject, constructorArgs = [], privateData = {}) => {\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper;\n};\n\nexports.new = globalObject => {\n  const wrapper = makeWrapper(globalObject);\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper[implSymbol];\n};\n\nconst exposed = new Set([\"Window\"]);\n\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n  class MutationObserver {\n    constructor(callback) {\n      if (arguments.length < 1) {\n        throw new TypeError(\n          \"Failed to construct 'MutationObserver': 1 argument required, but only \" + arguments.length + \" present.\"\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = utils.tryImplForWrapper(curArg);\n        args.push(curArg);\n      }\n      return exports.setup(Object.create(new.target.prototype), globalObject, args);\n    }\n\n    observe(target) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      if (arguments.length < 1) {\n        throw new TypeError(\n          \"Failed to execute 'observe' on 'MutationObserver': 1 argument required, but only \" +\n            arguments.length +\n            \" present.\"\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = Node.convert(curArg, { context: \"Failed to execute 'observe' on 'MutationObserver': parameter 1\" });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = MutationObserverInit.convert(curArg, {\n          context: \"Failed to execute 'observe' on 'MutationObserver': parameter 2\"\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].observe(...args);\n    }\n\n    disconnect() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return esValue[implSymbol].disconnect();\n    }\n\n    takeRecords() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return utils.tryWrapperForImpl(esValue[implSymbol].takeRecords());\n    }\n  }\n  Object.defineProperties(MutationObserver.prototype, {\n    observe: { enumerable: true },\n    disconnect: { enumerable: true },\n    takeRecords: { enumerable: true },\n    [Symbol.toStringTag]: { value: \"MutationObserver\", configurable: true }\n  });\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    globalObject[ctorRegistrySymbol] = Object.create(null);\n  }\n  globalObject[ctorRegistrySymbol][interfaceName] = MutationObserver;\n\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: MutationObserver\n  });\n};\n\nconst Impl = require(\"../mutation-observer/MutationObserver-impl.js\");\n"]},"metadata":{},"sourceType":"script"}