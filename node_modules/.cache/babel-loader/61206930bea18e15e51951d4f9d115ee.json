{"ast":null,"code":"\"use strict\";\n\nconst hasOwnProp = Object.prototype.hasOwnProperty;\n\nconst namedPropertiesTracker = require(\"../named-properties-tracker\");\n\nconst NODE_TYPE = require(\"./node-type\");\n\nconst HTMLCollection = require(\"./generated/HTMLCollection\");\n\nconst {\n  treeOrderSorter\n} = require(\"../utils\");\n\nconst idlUtils = require(\"./generated/utils\");\n\nfunction isNamedPropertyElement(element) {\n  // (for the name attribute)\n  // use hasOwnProperty to make sure contentWindow comes from the prototype,\n  // and is not set directly on the node by a script.\n  if (\"contentWindow\" in element && !hasOwnProp.call(element, \"contentWindow\")) {\n    return true;\n  }\n\n  switch (element.nodeName) {\n    case \"A\":\n    case \"AREA\":\n    case \"EMBED\":\n    case \"FORM\":\n    case \"FRAMESET\":\n    case \"IMG\":\n    case \"OBJECT\":\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nfunction namedPropertyResolver(window, name, values) {\n  function getResult() {\n    const results = [];\n\n    for (const node of values().keys()) {\n      if (node.nodeType !== NODE_TYPE.ELEMENT_NODE) {\n        continue;\n      }\n\n      if (node.getAttributeNS(null, \"id\") === name) {\n        results.push(node);\n      } else if (node.getAttributeNS(null, \"name\") === name && isNamedPropertyElement(node)) {\n        results.push(node);\n      }\n    }\n\n    results.sort(treeOrderSorter);\n    return results;\n  }\n\n  const document = window._document;\n  const objects = HTMLCollection.create(window, [], {\n    element: idlUtils.implForWrapper(document.documentElement),\n    query: getResult\n  });\n  const {\n    length\n  } = objects;\n\n  for (let i = 0; i < length; ++i) {\n    const node = objects[i];\n\n    if (\"contentWindow\" in node && !hasOwnProp.call(node, \"contentWindow\") && node.getAttributeNS(null, \"name\") === name) {\n      return node.contentWindow;\n    }\n  }\n\n  if (length === 0) {\n    return undefined;\n  }\n\n  if (length === 1) {\n    return objects[0];\n  }\n\n  return objects;\n}\n\nexports.initializeWindow = function (window, windowProxy) {\n  namedPropertiesTracker.create(window, windowProxy, namedPropertyResolver.bind(null));\n};\n\nexports.elementAttributeModified = function (element, name, value, oldValue) {\n  if (!element._attached) {\n    return;\n  }\n\n  const useName = isNamedPropertyElement(element);\n\n  if (name === \"id\" || name === \"name\" && useName) {\n    const tracker = namedPropertiesTracker.get(element._ownerDocument._global); // (tracker will be null if the document has no Window)\n\n    if (tracker) {\n      if (name === \"id\" && (!useName || element.getAttributeNS(null, \"name\") !== oldValue)) {\n        tracker.untrack(oldValue, element);\n      }\n\n      if (name === \"name\" && element.getAttributeNS(null, \"id\") !== oldValue) {\n        tracker.untrack(oldValue, element);\n      }\n\n      tracker.track(value, element);\n    }\n  }\n};\n\nexports.nodeAttachedToDocument = function (node) {\n  if (node.nodeType !== NODE_TYPE.ELEMENT_NODE) {\n    return;\n  }\n\n  const tracker = namedPropertiesTracker.get(node._ownerDocument._global);\n\n  if (!tracker) {\n    return;\n  }\n\n  tracker.track(node.getAttributeNS(null, \"id\"), node);\n\n  if (isNamedPropertyElement(node)) {\n    tracker.track(node.getAttributeNS(null, \"name\"), node);\n  }\n};\n\nexports.nodeDetachedFromDocument = function (node) {\n  if (node.nodeType !== NODE_TYPE.ELEMENT_NODE) {\n    return;\n  }\n\n  const tracker = namedPropertiesTracker.get(node._ownerDocument._global);\n\n  if (!tracker) {\n    return;\n  }\n\n  tracker.untrack(node.getAttributeNS(null, \"id\"), node);\n\n  if (isNamedPropertyElement(node)) {\n    tracker.untrack(node.getAttributeNS(null, \"name\"), node);\n  }\n};","map":{"version":3,"sources":["/Library/WebServer/Documents/capstone/capstone-project-re-coder/node_modules/jsdom/lib/jsdom/living/named-properties-window.js"],"names":["hasOwnProp","Object","prototype","hasOwnProperty","namedPropertiesTracker","require","NODE_TYPE","HTMLCollection","treeOrderSorter","idlUtils","isNamedPropertyElement","element","call","nodeName","namedPropertyResolver","window","name","values","getResult","results","node","keys","nodeType","ELEMENT_NODE","getAttributeNS","push","sort","document","_document","objects","create","implForWrapper","documentElement","query","length","i","contentWindow","undefined","exports","initializeWindow","windowProxy","bind","elementAttributeModified","value","oldValue","_attached","useName","tracker","get","_ownerDocument","_global","untrack","track","nodeAttachedToDocument","nodeDetachedFromDocument"],"mappings":"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","sourcesContent":["\"use strict\";\nconst hasOwnProp = Object.prototype.hasOwnProperty;\nconst namedPropertiesTracker = require(\"../named-properties-tracker\");\nconst NODE_TYPE = require(\"./node-type\");\nconst HTMLCollection = require(\"./generated/HTMLCollection\");\nconst { treeOrderSorter } = require(\"../utils\");\nconst idlUtils = require(\"./generated/utils\");\n\nfunction isNamedPropertyElement(element) {\n  // (for the name attribute)\n\n  // use hasOwnProperty to make sure contentWindow comes from the prototype,\n  // and is not set directly on the node by a script.\n  if (\"contentWindow\" in element && !hasOwnProp.call(element, \"contentWindow\")) {\n    return true;\n  }\n\n  switch (element.nodeName) {\n    case \"A\":\n    case \"AREA\":\n    case \"EMBED\":\n    case \"FORM\":\n    case \"FRAMESET\":\n    case \"IMG\":\n    case \"OBJECT\":\n      return true;\n    default:\n      return false;\n  }\n}\n\nfunction namedPropertyResolver(window, name, values) {\n  function getResult() {\n    const results = [];\n\n    for (const node of values().keys()) {\n      if (node.nodeType !== NODE_TYPE.ELEMENT_NODE) {\n        continue;\n      }\n\n      if (node.getAttributeNS(null, \"id\") === name) {\n        results.push(node);\n      } else if (node.getAttributeNS(null, \"name\") === name && isNamedPropertyElement(node)) {\n        results.push(node);\n      }\n    }\n\n    results.sort(treeOrderSorter);\n\n    return results;\n  }\n\n  const document = window._document;\n  const objects = HTMLCollection.create(window, [], {\n    element: idlUtils.implForWrapper(document.documentElement),\n    query: getResult\n  });\n\n  const { length } = objects;\n  for (let i = 0; i < length; ++i) {\n    const node = objects[i];\n\n    if (\"contentWindow\" in node && !hasOwnProp.call(node, \"contentWindow\") &&\n       node.getAttributeNS(null, \"name\") === name) {\n      return node.contentWindow;\n    }\n  }\n\n  if (length === 0) {\n    return undefined;\n  }\n\n  if (length === 1) {\n    return objects[0];\n  }\n\n  return objects;\n}\n\nexports.initializeWindow = function (window, windowProxy) {\n  namedPropertiesTracker.create(window, windowProxy, namedPropertyResolver.bind(null));\n};\n\nexports.elementAttributeModified = function (element, name, value, oldValue) {\n  if (!element._attached) {\n    return;\n  }\n\n  const useName = isNamedPropertyElement(element);\n\n  if (name === \"id\" || (name === \"name\" && useName)) {\n    const tracker = namedPropertiesTracker.get(element._ownerDocument._global);\n\n    // (tracker will be null if the document has no Window)\n    if (tracker) {\n      if (name === \"id\" && (!useName || element.getAttributeNS(null, \"name\") !== oldValue)) {\n        tracker.untrack(oldValue, element);\n      }\n\n      if (name === \"name\" && element.getAttributeNS(null, \"id\") !== oldValue) {\n        tracker.untrack(oldValue, element);\n      }\n\n      tracker.track(value, element);\n    }\n  }\n};\n\nexports.nodeAttachedToDocument = function (node) {\n  if (node.nodeType !== NODE_TYPE.ELEMENT_NODE) {\n    return;\n  }\n\n  const tracker = namedPropertiesTracker.get(node._ownerDocument._global);\n  if (!tracker) {\n    return;\n  }\n\n  tracker.track(node.getAttributeNS(null, \"id\"), node);\n\n  if (isNamedPropertyElement(node)) {\n    tracker.track(node.getAttributeNS(null, \"name\"), node);\n  }\n};\n\nexports.nodeDetachedFromDocument = function (node) {\n  if (node.nodeType !== NODE_TYPE.ELEMENT_NODE) {\n    return;\n  }\n\n  const tracker = namedPropertiesTracker.get(node._ownerDocument._global);\n  if (!tracker) {\n    return;\n  }\n\n  tracker.untrack(node.getAttributeNS(null, \"id\"), node);\n\n  if (isNamedPropertyElement(node)) {\n    tracker.untrack(node.getAttributeNS(null, \"name\"), node);\n  }\n};\n"]},"metadata":{},"sourceType":"script"}