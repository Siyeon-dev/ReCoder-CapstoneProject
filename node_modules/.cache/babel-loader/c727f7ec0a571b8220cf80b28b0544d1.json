{"ast":null,"code":"//.CommonJS\nvar CSSOM = {}; ///CommonJS\n\n/**\n * @constructor\n * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSValue\n *\n * TODO: add if needed\n */\n\nCSSOM.CSSValue = function CSSValue() {};\n\nCSSOM.CSSValue.prototype = {\n  constructor: CSSOM.CSSValue,\n\n  // @see: http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSValue\n  set cssText(text) {\n    var name = this._getConstructorName();\n\n    throw new Error('DOMException: property \"cssText\" of \"' + name + '\" is readonly and can not be replaced with \"' + text + '\"!');\n  },\n\n  get cssText() {\n    var name = this._getConstructorName();\n\n    throw new Error('getter \"cssText\" of \"' + name + '\" is not implemented!');\n  },\n\n  _getConstructorName: function () {\n    var s = this.constructor.toString(),\n        c = s.match(/function\\s([^\\(]+)/),\n        name = c[1];\n    return name;\n  }\n}; //.CommonJS\n\nexports.CSSValue = CSSOM.CSSValue; ///CommonJS","map":{"version":3,"sources":["/Library/WebServer/Documents/capstone/capstone-project-re-coder/node_modules/cssstyle/node_modules/cssom/lib/CSSValue.js"],"names":["CSSOM","CSSValue","prototype","constructor","cssText","text","name","_getConstructorName","Error","s","toString","c","match","exports"],"mappings":"AAAA;AACA,IAAIA,KAAK,GAAG,EAAZ,C,CACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AACAA,KAAK,CAACC,QAAN,GAAiB,SAASA,QAAT,GAAoB,CACpC,CADD;;AAGAD,KAAK,CAACC,QAAN,CAAeC,SAAf,GAA2B;AAC1BC,EAAAA,WAAW,EAAEH,KAAK,CAACC,QADO;;AAG1B;AACA,MAAIG,OAAJ,CAAYC,IAAZ,EAAkB;AACjB,QAAIC,IAAI,GAAG,KAAKC,mBAAL,EAAX;;AAEA,UAAM,IAAIC,KAAJ,CAAU,0CAA0CF,IAA1C,GAAiD,8CAAjD,GAAkGD,IAAlG,GAAyG,IAAnH,CAAN;AACA,GARyB;;AAU1B,MAAID,OAAJ,GAAc;AACb,QAAIE,IAAI,GAAG,KAAKC,mBAAL,EAAX;;AAEA,UAAM,IAAIC,KAAJ,CAAU,0BAA0BF,IAA1B,GAAiC,uBAA3C,CAAN;AACA,GAdyB;;AAgB1BC,EAAAA,mBAAmB,EAAE,YAAW;AAC/B,QAAIE,CAAC,GAAG,KAAKN,WAAL,CAAiBO,QAAjB,EAAR;AAAA,QACEC,CAAC,GAAGF,CAAC,CAACG,KAAF,CAAQ,oBAAR,CADN;AAAA,QAEEN,IAAI,GAAGK,CAAC,CAAC,CAAD,CAFV;AAIA,WAAOL,IAAP;AACA;AAtByB,CAA3B,C,CA0BA;;AACAO,OAAO,CAACZ,QAAR,GAAmBD,KAAK,CAACC,QAAzB,C,CACA","sourcesContent":["//.CommonJS\nvar CSSOM = {};\n///CommonJS\n\n\n/**\n * @constructor\n * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSValue\n *\n * TODO: add if needed\n */\nCSSOM.CSSValue = function CSSValue() {\n};\n\nCSSOM.CSSValue.prototype = {\n\tconstructor: CSSOM.CSSValue,\n\n\t// @see: http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSValue\n\tset cssText(text) {\n\t\tvar name = this._getConstructorName();\n\n\t\tthrow new Error('DOMException: property \"cssText\" of \"' + name + '\" is readonly and can not be replaced with \"' + text + '\"!');\n\t},\n\n\tget cssText() {\n\t\tvar name = this._getConstructorName();\n\n\t\tthrow new Error('getter \"cssText\" of \"' + name + '\" is not implemented!');\n\t},\n\n\t_getConstructorName: function() {\n\t\tvar s = this.constructor.toString(),\n\t\t\t\tc = s.match(/function\\s([^\\(]+)/),\n\t\t\t\tname = c[1];\n\n\t\treturn name;\n\t}\n};\n\n\n//.CommonJS\nexports.CSSValue = CSSOM.CSSValue;\n///CommonJS\n"]},"metadata":{},"sourceType":"script"}