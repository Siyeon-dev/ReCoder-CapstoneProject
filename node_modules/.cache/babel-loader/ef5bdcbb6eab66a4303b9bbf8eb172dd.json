{"ast":null,"code":"//.CommonJS\nvar CSSOM = {\n  StyleSheet: require(\"./StyleSheet\").StyleSheet,\n  CSSStyleRule: require(\"./CSSStyleRule\").CSSStyleRule\n}; ///CommonJS\n\n/**\n * @constructor\n * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleSheet\n */\n\nCSSOM.CSSStyleSheet = function CSSStyleSheet() {\n  CSSOM.StyleSheet.call(this);\n  this.cssRules = [];\n};\n\nCSSOM.CSSStyleSheet.prototype = new CSSOM.StyleSheet();\nCSSOM.CSSStyleSheet.prototype.constructor = CSSOM.CSSStyleSheet;\n/**\n * Used to insert a new rule into the style sheet. The new rule now becomes part of the cascade.\n *\n *   sheet = new Sheet(\"body {margin: 0}\")\n *   sheet.toString()\n *   -> \"body{margin:0;}\"\n *   sheet.insertRule(\"img {border: none}\", 0)\n *   -> 0\n *   sheet.toString()\n *   -> \"img{border:none;}body{margin:0;}\"\n *\n * @param {string} rule\n * @param {number} index\n * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleSheet-insertRule\n * @return {number} The index within the style sheet's rule collection of the newly inserted rule.\n */\n\nCSSOM.CSSStyleSheet.prototype.insertRule = function (rule, index) {\n  if (index < 0 || index > this.cssRules.length) {\n    throw new RangeError(\"INDEX_SIZE_ERR\");\n  }\n\n  var cssRule = CSSOM.parse(rule).cssRules[0];\n  cssRule.parentStyleSheet = this;\n  this.cssRules.splice(index, 0, cssRule);\n  return index;\n};\n/**\n * Used to delete a rule from the style sheet.\n *\n *   sheet = new Sheet(\"img{border:none} body{margin:0}\")\n *   sheet.toString()\n *   -> \"img{border:none;}body{margin:0;}\"\n *   sheet.deleteRule(0)\n *   sheet.toString()\n *   -> \"body{margin:0;}\"\n *\n * @param {number} index within the style sheet's rule list of the rule to remove.\n * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleSheet-deleteRule\n */\n\n\nCSSOM.CSSStyleSheet.prototype.deleteRule = function (index) {\n  if (index < 0 || index >= this.cssRules.length) {\n    throw new RangeError(\"INDEX_SIZE_ERR\");\n  }\n\n  this.cssRules.splice(index, 1);\n};\n/**\n * NON-STANDARD\n * @return {string} serialize stylesheet\n */\n\n\nCSSOM.CSSStyleSheet.prototype.toString = function () {\n  var result = \"\";\n  var rules = this.cssRules;\n\n  for (var i = 0; i < rules.length; i++) {\n    result += rules[i].cssText + \"\\n\";\n  }\n\n  return result;\n}; //.CommonJS\n\n\nexports.CSSStyleSheet = CSSOM.CSSStyleSheet;\nCSSOM.parse = require('./parse').parse; // Cannot be included sooner due to the mutual dependency between parse.js and CSSStyleSheet.js\n///CommonJS","map":{"version":3,"sources":["/Library/WebServer/Documents/capstone/capstone-project-re-coder/node_modules/cssstyle/node_modules/cssom/lib/CSSStyleSheet.js"],"names":["CSSOM","StyleSheet","require","CSSStyleRule","CSSStyleSheet","call","cssRules","prototype","constructor","insertRule","rule","index","length","RangeError","cssRule","parse","parentStyleSheet","splice","deleteRule","toString","result","rules","i","cssText","exports"],"mappings":"AAAA;AACA,IAAIA,KAAK,GAAG;AACXC,EAAAA,UAAU,EAAEC,OAAO,CAAC,cAAD,CAAP,CAAwBD,UADzB;AAEXE,EAAAA,YAAY,EAAED,OAAO,CAAC,gBAAD,CAAP,CAA0BC;AAF7B,CAAZ,C,CAIA;;AAGA;AACA;AACA;AACA;;AACAH,KAAK,CAACI,aAAN,GAAsB,SAASA,aAAT,GAAyB;AAC9CJ,EAAAA,KAAK,CAACC,UAAN,CAAiBI,IAAjB,CAAsB,IAAtB;AACA,OAAKC,QAAL,GAAgB,EAAhB;AACA,CAHD;;AAMAN,KAAK,CAACI,aAAN,CAAoBG,SAApB,GAAgC,IAAIP,KAAK,CAACC,UAAV,EAAhC;AACAD,KAAK,CAACI,aAAN,CAAoBG,SAApB,CAA8BC,WAA9B,GAA4CR,KAAK,CAACI,aAAlD;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAJ,KAAK,CAACI,aAAN,CAAoBG,SAApB,CAA8BE,UAA9B,GAA2C,UAASC,IAAT,EAAeC,KAAf,EAAsB;AAChE,MAAIA,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAG,KAAKL,QAAL,CAAcM,MAAvC,EAA+C;AAC9C,UAAM,IAAIC,UAAJ,CAAe,gBAAf,CAAN;AACA;;AACD,MAAIC,OAAO,GAAGd,KAAK,CAACe,KAAN,CAAYL,IAAZ,EAAkBJ,QAAlB,CAA2B,CAA3B,CAAd;AACAQ,EAAAA,OAAO,CAACE,gBAAR,GAA2B,IAA3B;AACA,OAAKV,QAAL,CAAcW,MAAd,CAAqBN,KAArB,EAA4B,CAA5B,EAA+BG,OAA/B;AACA,SAAOH,KAAP;AACA,CARD;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAX,KAAK,CAACI,aAAN,CAAoBG,SAApB,CAA8BW,UAA9B,GAA2C,UAASP,KAAT,EAAgB;AAC1D,MAAIA,KAAK,GAAG,CAAR,IAAaA,KAAK,IAAI,KAAKL,QAAL,CAAcM,MAAxC,EAAgD;AAC/C,UAAM,IAAIC,UAAJ,CAAe,gBAAf,CAAN;AACA;;AACD,OAAKP,QAAL,CAAcW,MAAd,CAAqBN,KAArB,EAA4B,CAA5B;AACA,CALD;AAQA;AACA;AACA;AACA;;;AACAX,KAAK,CAACI,aAAN,CAAoBG,SAApB,CAA8BY,QAA9B,GAAyC,YAAW;AACnD,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,KAAK,GAAG,KAAKf,QAAjB;;AACA,OAAK,IAAIgB,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACD,KAAK,CAACT,MAAtB,EAA8BU,CAAC,EAA/B,EAAmC;AAClCF,IAAAA,MAAM,IAAIC,KAAK,CAACC,CAAD,CAAL,CAASC,OAAT,GAAmB,IAA7B;AACA;;AACD,SAAOH,MAAP;AACA,CAPD,C,CAUA;;;AACAI,OAAO,CAACpB,aAAR,GAAwBJ,KAAK,CAACI,aAA9B;AACAJ,KAAK,CAACe,KAAN,GAAcb,OAAO,CAAC,SAAD,CAAP,CAAmBa,KAAjC,C,CAAwC;AACxC","sourcesContent":["//.CommonJS\nvar CSSOM = {\n\tStyleSheet: require(\"./StyleSheet\").StyleSheet,\n\tCSSStyleRule: require(\"./CSSStyleRule\").CSSStyleRule\n};\n///CommonJS\n\n\n/**\n * @constructor\n * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleSheet\n */\nCSSOM.CSSStyleSheet = function CSSStyleSheet() {\n\tCSSOM.StyleSheet.call(this);\n\tthis.cssRules = [];\n};\n\n\nCSSOM.CSSStyleSheet.prototype = new CSSOM.StyleSheet();\nCSSOM.CSSStyleSheet.prototype.constructor = CSSOM.CSSStyleSheet;\n\n\n/**\n * Used to insert a new rule into the style sheet. The new rule now becomes part of the cascade.\n *\n *   sheet = new Sheet(\"body {margin: 0}\")\n *   sheet.toString()\n *   -> \"body{margin:0;}\"\n *   sheet.insertRule(\"img {border: none}\", 0)\n *   -> 0\n *   sheet.toString()\n *   -> \"img{border:none;}body{margin:0;}\"\n *\n * @param {string} rule\n * @param {number} index\n * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleSheet-insertRule\n * @return {number} The index within the style sheet's rule collection of the newly inserted rule.\n */\nCSSOM.CSSStyleSheet.prototype.insertRule = function(rule, index) {\n\tif (index < 0 || index > this.cssRules.length) {\n\t\tthrow new RangeError(\"INDEX_SIZE_ERR\");\n\t}\n\tvar cssRule = CSSOM.parse(rule).cssRules[0];\n\tcssRule.parentStyleSheet = this;\n\tthis.cssRules.splice(index, 0, cssRule);\n\treturn index;\n};\n\n\n/**\n * Used to delete a rule from the style sheet.\n *\n *   sheet = new Sheet(\"img{border:none} body{margin:0}\")\n *   sheet.toString()\n *   -> \"img{border:none;}body{margin:0;}\"\n *   sheet.deleteRule(0)\n *   sheet.toString()\n *   -> \"body{margin:0;}\"\n *\n * @param {number} index within the style sheet's rule list of the rule to remove.\n * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleSheet-deleteRule\n */\nCSSOM.CSSStyleSheet.prototype.deleteRule = function(index) {\n\tif (index < 0 || index >= this.cssRules.length) {\n\t\tthrow new RangeError(\"INDEX_SIZE_ERR\");\n\t}\n\tthis.cssRules.splice(index, 1);\n};\n\n\n/**\n * NON-STANDARD\n * @return {string} serialize stylesheet\n */\nCSSOM.CSSStyleSheet.prototype.toString = function() {\n\tvar result = \"\";\n\tvar rules = this.cssRules;\n\tfor (var i=0; i<rules.length; i++) {\n\t\tresult += rules[i].cssText + \"\\n\";\n\t}\n\treturn result;\n};\n\n\n//.CommonJS\nexports.CSSStyleSheet = CSSOM.CSSStyleSheet;\nCSSOM.parse = require('./parse').parse; // Cannot be included sooner due to the mutual dependency between parse.js and CSSStyleSheet.js\n///CommonJS\n"]},"metadata":{},"sourceType":"script"}