{"ast":null,"code":"\"use strict\";\n\nconst serialize = require(\"w3c-xmlserializer\");\n\nconst DOMException = require(\"domexception/webidl2js-wrapper\");\n\nconst utils = require(\"../generated/utils\");\n\nexports.implementation = class XMLSerializerImpl {\n  constructor(globalObject) {\n    this._globalObject = globalObject;\n  }\n\n  serializeToString(root) {\n    try {\n      return serialize(utils.wrapperForImpl(root), {\n        requireWellFormed: false\n      });\n    } catch (e) {\n      throw DOMException.create(this._globalObject, [e.message, \"InvalidStateError\"]);\n    }\n  }\n\n};","map":{"version":3,"sources":["/Library/WebServer/Documents/capstone/capstone-project-re-coder/node_modules/jsdom/lib/jsdom/living/domparsing/XMLSerializer-impl.js"],"names":["serialize","require","DOMException","utils","exports","implementation","XMLSerializerImpl","constructor","globalObject","_globalObject","serializeToString","root","wrapperForImpl","requireWellFormed","e","create","message"],"mappings":"AAAA;;AACA,MAAMA,SAAS,GAAGC,OAAO,CAAC,mBAAD,CAAzB;;AACA,MAAMC,YAAY,GAAGD,OAAO,CAAC,gCAAD,CAA5B;;AACA,MAAME,KAAK,GAAGF,OAAO,CAAC,oBAAD,CAArB;;AAEAG,OAAO,CAACC,cAAR,GAAyB,MAAMC,iBAAN,CAAwB;AAC/CC,EAAAA,WAAW,CAACC,YAAD,EAAe;AACxB,SAAKC,aAAL,GAAqBD,YAArB;AACD;;AAEDE,EAAAA,iBAAiB,CAACC,IAAD,EAAO;AACtB,QAAI;AACF,aAAOX,SAAS,CAACG,KAAK,CAACS,cAAN,CAAqBD,IAArB,CAAD,EAA6B;AAAEE,QAAAA,iBAAiB,EAAE;AAArB,OAA7B,CAAhB;AACD,KAFD,CAEE,OAAOC,CAAP,EAAU;AACV,YAAMZ,YAAY,CAACa,MAAb,CAAoB,KAAKN,aAAzB,EAAwC,CAACK,CAAC,CAACE,OAAH,EAAY,mBAAZ,CAAxC,CAAN;AACD;AACF;;AAX8C,CAAjD","sourcesContent":["\"use strict\";\nconst serialize = require(\"w3c-xmlserializer\");\nconst DOMException = require(\"domexception/webidl2js-wrapper\");\nconst utils = require(\"../generated/utils\");\n\nexports.implementation = class XMLSerializerImpl {\n  constructor(globalObject) {\n    this._globalObject = globalObject;\n  }\n\n  serializeToString(root) {\n    try {\n      return serialize(utils.wrapperForImpl(root), { requireWellFormed: false });\n    } catch (e) {\n      throw DOMException.create(this._globalObject, [e.message, \"InvalidStateError\"]);\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"script"}