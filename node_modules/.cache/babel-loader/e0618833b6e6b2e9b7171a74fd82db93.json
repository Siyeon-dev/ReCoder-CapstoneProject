{"ast":null,"code":"\"use strict\";\n\nconst DOMException = require(\"domexception/webidl2js-wrapper\");\n\nconst conversions = require(\"webidl-conversions\");\n\nexports.FILTER_ACCEPT = 1; // NodeFilter.FILTER_ACCEPT\n\nexports.FILTER_REJECT = 2; // NodeFilter.FILTER_REJECT\n\nexports.FILTER_SKIP = 3; // NodeFilter.FILTER_SKIP\n\nexports.filter = (nodeIteratorOrTreeWalkerImpl, nodeImpl) => {\n  if (nodeIteratorOrTreeWalkerImpl._active) {\n    throw DOMException.create(nodeIteratorOrTreeWalkerImpl._globalObject, [\"Recursive node filtering\", \"InvalidStateError\"]);\n  }\n\n  const n = nodeImpl.nodeType - 1;\n\n  if (!(1 << n & nodeIteratorOrTreeWalkerImpl.whatToShow)) {\n    return exports.FILTER_SKIP;\n  } // Saving in a variable is important so we don't accidentally call it as a method later.\n\n\n  const {\n    filter\n  } = nodeIteratorOrTreeWalkerImpl;\n\n  if (filter === null) {\n    return exports.FILTER_ACCEPT;\n  }\n\n  nodeIteratorOrTreeWalkerImpl._active = true;\n  let result; // https://github.com/whatwg/dom/issues/494\n\n  try {\n    result = filter(nodeImpl);\n  } finally {\n    nodeIteratorOrTreeWalkerImpl._active = false;\n  }\n\n  result = conversions[\"unsigned short\"](result);\n  return result;\n};","map":{"version":3,"sources":["/Library/WebServer/Documents/capstone/capstone-project-re-coder/node_modules/jsdom/lib/jsdom/living/traversal/helpers.js"],"names":["DOMException","require","conversions","exports","FILTER_ACCEPT","FILTER_REJECT","FILTER_SKIP","filter","nodeIteratorOrTreeWalkerImpl","nodeImpl","_active","create","_globalObject","n","nodeType","whatToShow","result"],"mappings":"AAAA;;AACA,MAAMA,YAAY,GAAGC,OAAO,CAAC,gCAAD,CAA5B;;AACA,MAAMC,WAAW,GAAGD,OAAO,CAAC,oBAAD,CAA3B;;AAEAE,OAAO,CAACC,aAAR,GAAwB,CAAxB,C,CAA2B;;AAC3BD,OAAO,CAACE,aAAR,GAAwB,CAAxB,C,CAA2B;;AAC3BF,OAAO,CAACG,WAAR,GAAsB,CAAtB,C,CAAyB;;AAEzBH,OAAO,CAACI,MAAR,GAAiB,CAACC,4BAAD,EAA+BC,QAA/B,KAA4C;AAC3D,MAAID,4BAA4B,CAACE,OAAjC,EAA0C;AACxC,UAAMV,YAAY,CAACW,MAAb,CAAoBH,4BAA4B,CAACI,aAAjD,EAAgE,CACpE,0BADoE,EAEpE,mBAFoE,CAAhE,CAAN;AAID;;AAED,QAAMC,CAAC,GAAGJ,QAAQ,CAACK,QAAT,GAAoB,CAA9B;;AAEA,MAAI,EAAG,KAAKD,CAAN,GAAWL,4BAA4B,CAACO,UAA1C,CAAJ,EAA2D;AACzD,WAAOZ,OAAO,CAACG,WAAf;AACD,GAZ0D,CAc3D;;;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAaC,4BAAnB;;AAEA,MAAID,MAAM,KAAK,IAAf,EAAqB;AACnB,WAAOJ,OAAO,CAACC,aAAf;AACD;;AAEDI,EAAAA,4BAA4B,CAACE,OAA7B,GAAuC,IAAvC;AAEA,MAAIM,MAAJ,CAvB2D,CAyB3D;;AACA,MAAI;AACFA,IAAAA,MAAM,GAAGT,MAAM,CAACE,QAAD,CAAf;AACD,GAFD,SAEU;AACRD,IAAAA,4BAA4B,CAACE,OAA7B,GAAuC,KAAvC;AACD;;AAEDM,EAAAA,MAAM,GAAGd,WAAW,CAAC,gBAAD,CAAX,CAA8Bc,MAA9B,CAAT;AAEA,SAAOA,MAAP;AACD,CAnCD","sourcesContent":["\"use strict\";\nconst DOMException = require(\"domexception/webidl2js-wrapper\");\nconst conversions = require(\"webidl-conversions\");\n\nexports.FILTER_ACCEPT = 1; // NodeFilter.FILTER_ACCEPT\nexports.FILTER_REJECT = 2; // NodeFilter.FILTER_REJECT\nexports.FILTER_SKIP = 3; // NodeFilter.FILTER_SKIP\n\nexports.filter = (nodeIteratorOrTreeWalkerImpl, nodeImpl) => {\n  if (nodeIteratorOrTreeWalkerImpl._active) {\n    throw DOMException.create(nodeIteratorOrTreeWalkerImpl._globalObject, [\n      \"Recursive node filtering\",\n      \"InvalidStateError\"\n    ]);\n  }\n\n  const n = nodeImpl.nodeType - 1;\n\n  if (!((1 << n) & nodeIteratorOrTreeWalkerImpl.whatToShow)) {\n    return exports.FILTER_SKIP;\n  }\n\n  // Saving in a variable is important so we don't accidentally call it as a method later.\n  const { filter } = nodeIteratorOrTreeWalkerImpl;\n\n  if (filter === null) {\n    return exports.FILTER_ACCEPT;\n  }\n\n  nodeIteratorOrTreeWalkerImpl._active = true;\n\n  let result;\n\n  // https://github.com/whatwg/dom/issues/494\n  try {\n    result = filter(nodeImpl);\n  } finally {\n    nodeIteratorOrTreeWalkerImpl._active = false;\n  }\n\n  result = conversions[\"unsigned short\"](result);\n\n  return result;\n};\n"]},"metadata":{},"sourceType":"script"}