{"ast":null,"code":"\"use strict\";\n\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\n\nconst {\n  getLabelsForLabelable\n} = require(\"../helpers/form-controls\");\n\nconst {\n  parseFloatingPointNumber\n} = require(\"../helpers/strings\");\n\nclass HTMLProgressElementImpl extends HTMLElementImpl {\n  constructor(globalObject, args, privateData) {\n    super(globalObject, args, privateData);\n    this._labels = null;\n  }\n\n  get _isDeterminate() {\n    return this.hasAttributeNS(null, \"value\");\n  } // https://html.spec.whatwg.org/multipage/form-elements.html#concept-progress-value\n\n\n  get _value() {\n    const valueAttr = this.getAttributeNS(null, \"value\");\n    const parsedValue = parseFloatingPointNumber(valueAttr);\n\n    if (parsedValue !== null && parsedValue > 0) {\n      return parsedValue;\n    }\n\n    return 0;\n  } // https://html.spec.whatwg.org/multipage/form-elements.html#concept-progress-current-value\n\n\n  get _currentValue() {\n    const value = this._value;\n    return value > this.max ? this.max : value;\n  }\n\n  get value() {\n    if (this._isDeterminate) {\n      return this._currentValue;\n    }\n\n    return 0;\n  }\n\n  set value(value) {\n    this.setAttributeNS(null, \"value\", value);\n  }\n\n  get max() {\n    const max = this.getAttributeNS(null, \"max\");\n\n    if (max !== null) {\n      const parsedMax = parseFloatingPointNumber(max);\n\n      if (parsedMax !== null && parsedMax > 0) {\n        return parsedMax;\n      }\n    }\n\n    return 1.0;\n  }\n\n  set max(value) {\n    if (value > 0) {\n      this.setAttributeNS(null, \"max\", value);\n    }\n  }\n\n  get position() {\n    if (!this._isDeterminate) {\n      return -1;\n    }\n\n    return this._currentValue / this.max;\n  }\n\n  get labels() {\n    return getLabelsForLabelable(this);\n  }\n\n}\n\nmodule.exports = {\n  implementation: HTMLProgressElementImpl\n};","map":{"version":3,"sources":["/Library/WebServer/Documents/capstone/capstone-project-re-coder/node_modules/jsdom/lib/jsdom/living/nodes/HTMLProgressElement-impl.js"],"names":["HTMLElementImpl","require","implementation","getLabelsForLabelable","parseFloatingPointNumber","HTMLProgressElementImpl","constructor","globalObject","args","privateData","_labels","_isDeterminate","hasAttributeNS","_value","valueAttr","getAttributeNS","parsedValue","_currentValue","value","max","setAttributeNS","parsedMax","position","labels","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,eAAe,GAAGC,OAAO,CAAC,oBAAD,CAAP,CAA8BC,cAAtD;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAA4BF,OAAO,CAAC,0BAAD,CAAzC;;AACA,MAAM;AAAEG,EAAAA;AAAF,IAA+BH,OAAO,CAAC,oBAAD,CAA5C;;AAEA,MAAMI,uBAAN,SAAsCL,eAAtC,CAAsD;AACpDM,EAAAA,WAAW,CAACC,YAAD,EAAeC,IAAf,EAAqBC,WAArB,EAAkC;AAC3C,UAAMF,YAAN,EAAoBC,IAApB,EAA0BC,WAA1B;AACA,SAAKC,OAAL,GAAe,IAAf;AACD;;AAEiB,MAAdC,cAAc,GAAG;AACnB,WAAO,KAAKC,cAAL,CAAoB,IAApB,EAA0B,OAA1B,CAAP;AACD,GARmD,CAUpD;;;AACU,MAANC,MAAM,GAAG;AACX,UAAMC,SAAS,GAAG,KAAKC,cAAL,CAAoB,IAApB,EAA0B,OAA1B,CAAlB;AACA,UAAMC,WAAW,GAAGZ,wBAAwB,CAACU,SAAD,CAA5C;;AACA,QAAIE,WAAW,KAAK,IAAhB,IAAwBA,WAAW,GAAG,CAA1C,EAA6C;AAC3C,aAAOA,WAAP;AACD;;AACD,WAAO,CAAP;AACD,GAlBmD,CAoBpD;;;AACiB,MAAbC,aAAa,GAAG;AAClB,UAAMC,KAAK,GAAG,KAAKL,MAAnB;AACA,WAAOK,KAAK,GAAG,KAAKC,GAAb,GAAmB,KAAKA,GAAxB,GAA8BD,KAArC;AACD;;AAEQ,MAALA,KAAK,GAAG;AACV,QAAI,KAAKP,cAAT,EAAyB;AACvB,aAAO,KAAKM,aAAZ;AACD;;AACD,WAAO,CAAP;AACD;;AACQ,MAALC,KAAK,CAACA,KAAD,EAAQ;AACf,SAAKE,cAAL,CAAoB,IAApB,EAA0B,OAA1B,EAAmCF,KAAnC;AACD;;AAEM,MAAHC,GAAG,GAAG;AACR,UAAMA,GAAG,GAAG,KAAKJ,cAAL,CAAoB,IAApB,EAA0B,KAA1B,CAAZ;;AACA,QAAII,GAAG,KAAK,IAAZ,EAAkB;AAChB,YAAME,SAAS,GAAGjB,wBAAwB,CAACe,GAAD,CAA1C;;AACA,UAAIE,SAAS,KAAK,IAAd,IAAsBA,SAAS,GAAG,CAAtC,EAAyC;AACvC,eAAOA,SAAP;AACD;AACF;;AACD,WAAO,GAAP;AACD;;AACM,MAAHF,GAAG,CAACD,KAAD,EAAQ;AACb,QAAIA,KAAK,GAAG,CAAZ,EAAe;AACb,WAAKE,cAAL,CAAoB,IAApB,EAA0B,KAA1B,EAAiCF,KAAjC;AACD;AACF;;AAEW,MAARI,QAAQ,GAAG;AACb,QAAI,CAAC,KAAKX,cAAV,EAA0B;AACxB,aAAO,CAAC,CAAR;AACD;;AAED,WAAO,KAAKM,aAAL,GAAqB,KAAKE,GAAjC;AACD;;AAES,MAANI,MAAM,GAAG;AACX,WAAOpB,qBAAqB,CAAC,IAAD,CAA5B;AACD;;AA9DmD;;AAiEtDqB,MAAM,CAACC,OAAP,GAAiB;AACfvB,EAAAA,cAAc,EAAEG;AADD,CAAjB","sourcesContent":["\"use strict\";\n\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\nconst { getLabelsForLabelable } = require(\"../helpers/form-controls\");\nconst { parseFloatingPointNumber } = require(\"../helpers/strings\");\n\nclass HTMLProgressElementImpl extends HTMLElementImpl {\n  constructor(globalObject, args, privateData) {\n    super(globalObject, args, privateData);\n    this._labels = null;\n  }\n\n  get _isDeterminate() {\n    return this.hasAttributeNS(null, \"value\");\n  }\n\n  // https://html.spec.whatwg.org/multipage/form-elements.html#concept-progress-value\n  get _value() {\n    const valueAttr = this.getAttributeNS(null, \"value\");\n    const parsedValue = parseFloatingPointNumber(valueAttr);\n    if (parsedValue !== null && parsedValue > 0) {\n      return parsedValue;\n    }\n    return 0;\n  }\n\n  // https://html.spec.whatwg.org/multipage/form-elements.html#concept-progress-current-value\n  get _currentValue() {\n    const value = this._value;\n    return value > this.max ? this.max : value;\n  }\n\n  get value() {\n    if (this._isDeterminate) {\n      return this._currentValue;\n    }\n    return 0;\n  }\n  set value(value) {\n    this.setAttributeNS(null, \"value\", value);\n  }\n\n  get max() {\n    const max = this.getAttributeNS(null, \"max\");\n    if (max !== null) {\n      const parsedMax = parseFloatingPointNumber(max);\n      if (parsedMax !== null && parsedMax > 0) {\n        return parsedMax;\n      }\n    }\n    return 1.0;\n  }\n  set max(value) {\n    if (value > 0) {\n      this.setAttributeNS(null, \"max\", value);\n    }\n  }\n\n  get position() {\n    if (!this._isDeterminate) {\n      return -1;\n    }\n\n    return this._currentValue / this.max;\n  }\n\n  get labels() {\n    return getLabelsForLabelable(this);\n  }\n}\n\nmodule.exports = {\n  implementation: HTMLProgressElementImpl\n};\n"]},"metadata":{},"sourceType":"script"}