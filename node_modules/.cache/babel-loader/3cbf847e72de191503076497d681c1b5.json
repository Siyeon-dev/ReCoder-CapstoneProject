{"ast":null,"code":"\"use strict\";\n\nconst DOMException = require(\"domexception/webidl2js-wrapper\");\n\nconst isPotentialCustomElementName = require(\"is-potential-custom-element-name\");\n\nconst NODE_TYPE = require(\"../node-type\");\n\nconst {\n  HTML_NS\n} = require(\"./namespaces\");\n\nconst {\n  shadowIncludingRoot\n} = require(\"./shadow-dom\");\n\nconst reportException = require(\"./runtime-script-errors\");\n\nconst {\n  implForWrapper,\n  wrapperForImpl\n} = require(\"../generated/utils\"); // https://html.spec.whatwg.org/multipage/custom-elements.html#custom-element-reactions-stack\n\n\nclass CEReactionsStack {\n  constructor() {\n    this._stack = []; // https://html.spec.whatwg.org/multipage/custom-elements.html#backup-element-queue\n\n    this.backupElementQueue = []; // https://html.spec.whatwg.org/multipage/custom-elements.html#processing-the-backup-element-queue\n\n    this.processingBackupElementQueue = false;\n  }\n\n  push(elementQueue) {\n    this._stack.push(elementQueue);\n  }\n\n  pop() {\n    return this._stack.pop();\n  }\n\n  get currentElementQueue() {\n    const {\n      _stack\n    } = this;\n    return _stack[_stack.length - 1];\n  }\n\n  isEmpty() {\n    return this._stack.length === 0;\n  }\n\n} // In theory separate cross-origin Windows created by separate JSDOM instances could have separate stacks. But, we would\n// need to implement the whole agent architecture. Which is kind of questionable given that we don't run our Windows in\n// their own separate threads, which is what agents are meant to represent.\n\n\nconst customElementReactionsStack = new CEReactionsStack(); // https://html.spec.whatwg.org/multipage/custom-elements.html#cereactions\n\nfunction ceReactionsPreSteps() {\n  customElementReactionsStack.push([]);\n}\n\nfunction ceReactionsPostSteps() {\n  const queue = customElementReactionsStack.pop();\n  invokeCEReactions(queue);\n}\n\nconst RESTRICTED_CUSTOM_ELEMENT_NAME = new Set([\"annotation-xml\", \"color-profile\", \"font-face\", \"font-face-src\", \"font-face-uri\", \"font-face-format\", \"font-face-name\", \"missing-glyph\"]); // https://html.spec.whatwg.org/multipage/custom-elements.html#valid-custom-element-name\n\nfunction isValidCustomElementName(name) {\n  if (RESTRICTED_CUSTOM_ELEMENT_NAME.has(name)) {\n    return false;\n  }\n\n  return isPotentialCustomElementName(name);\n} // https://html.spec.whatwg.org/multipage/custom-elements.html#concept-upgrade-an-element\n\n\nfunction upgradeElement(definition, element) {\n  if (element._ceState !== \"undefined\" || element._ceState === \"uncustomized\") {\n    return;\n  }\n\n  element._ceDefinition = definition;\n  element._ceState = \"failed\";\n\n  for (const attribute of element._attributeList) {\n    const {\n      _localName,\n      _namespace,\n      _value\n    } = attribute;\n    enqueueCECallbackReaction(element, \"attributeChangedCallback\", [_localName, null, _value, _namespace]);\n  }\n\n  if (shadowIncludingRoot(element).nodeType === NODE_TYPE.DOCUMENT_NODE) {\n    enqueueCECallbackReaction(element, \"connectedCallback\", []);\n  }\n\n  definition.constructionStack.push(element);\n  const {\n    constructionStack,\n    ctor: C\n  } = definition;\n  let constructionError;\n\n  try {\n    if (definition.disableShadow === true && element._shadowRoot !== null) {\n      throw DOMException.create(element._globalObject, [\"Can't upgrade a custom element with a shadow root if shadow is disabled\", \"NotSupportedError\"]);\n    }\n\n    const constructionResult = new C();\n    const constructionResultImpl = implForWrapper(constructionResult);\n\n    if (constructionResultImpl !== element) {\n      throw new TypeError(\"Invalid custom element constructor return value\");\n    }\n  } catch (error) {\n    constructionError = error;\n  }\n\n  constructionStack.pop();\n\n  if (constructionError !== undefined) {\n    element._ceDefinition = null;\n    element._ceReactionQueue = [];\n    throw constructionError;\n  }\n\n  element._ceState = \"custom\";\n} // https://html.spec.whatwg.org/#concept-try-upgrade\n\n\nfunction tryUpgradeElement(element) {\n  const {\n    _ownerDocument,\n    _namespaceURI,\n    _localName,\n    _isValue\n  } = element;\n  const definition = lookupCEDefinition(_ownerDocument, _namespaceURI, _localName, _isValue);\n\n  if (definition !== null) {\n    enqueueCEUpgradeReaction(element, definition);\n  }\n} // https://html.spec.whatwg.org/#look-up-a-custom-element-definition\n\n\nfunction lookupCEDefinition(document, namespace, localName, isValue) {\n  const definition = null;\n\n  if (namespace !== HTML_NS) {\n    return definition;\n  }\n\n  if (!document._defaultView) {\n    return definition;\n  }\n\n  const registry = implForWrapper(document._globalObject.customElements);\n\n  const definitionByName = registry._customElementDefinitions.find(def => {\n    return def.name === def.localName && def.localName === localName;\n  });\n\n  if (definitionByName !== undefined) {\n    return definitionByName;\n  }\n\n  const definitionByIs = registry._customElementDefinitions.find(def => {\n    return def.name === isValue && def.localName === localName;\n  });\n\n  if (definitionByIs !== undefined) {\n    return definitionByIs;\n  }\n\n  return definition;\n} // https://html.spec.whatwg.org/multipage/custom-elements.html#invoke-custom-element-reactions\n\n\nfunction invokeCEReactions(elementQueue) {\n  for (const element of elementQueue) {\n    const reactions = element._ceReactionQueue;\n\n    try {\n      while (reactions.length > 0) {\n        const reaction = reactions.shift();\n\n        switch (reaction.type) {\n          case \"upgrade\":\n            upgradeElement(reaction.definition, element);\n            break;\n\n          case \"callback\":\n            reaction.callback.apply(wrapperForImpl(element), reaction.args);\n            break;\n        }\n      }\n    } catch (error) {\n      reportException(element._globalObject, error);\n    }\n  }\n} // https://html.spec.whatwg.org/multipage/custom-elements.html#enqueue-an-element-on-the-appropriate-element-queue\n\n\nfunction enqueueElementOnAppropriateElementQueue(element) {\n  if (customElementReactionsStack.isEmpty()) {\n    customElementReactionsStack.backupElementQueue.push(element);\n\n    if (customElementReactionsStack.processingBackupElementQueue) {\n      return;\n    }\n\n    customElementReactionsStack.processingBackupElementQueue = true;\n    Promise.resolve().then(() => {\n      const elementQueue = customElementReactionsStack.backupElementQueue;\n      invokeCEReactions(elementQueue);\n      customElementReactionsStack.processingBackupElementQueue = false;\n    });\n  } else {\n    customElementReactionsStack.currentElementQueue.push(element);\n  }\n} // https://html.spec.whatwg.org/multipage/custom-elements.html#enqueue-a-custom-element-callback-reaction\n\n\nfunction enqueueCECallbackReaction(element, callbackName, args) {\n  const {\n    _ceDefinition: {\n      lifecycleCallbacks,\n      observedAttributes\n    }\n  } = element;\n  const callback = lifecycleCallbacks[callbackName];\n\n  if (callback === null) {\n    return;\n  }\n\n  if (callbackName === \"attributeChangedCallback\") {\n    const attributeName = args[0];\n\n    if (!observedAttributes.includes(attributeName)) {\n      return;\n    }\n  }\n\n  element._ceReactionQueue.push({\n    type: \"callback\",\n    callback,\n    args\n  });\n\n  enqueueElementOnAppropriateElementQueue(element);\n} // https://html.spec.whatwg.org/#enqueue-a-custom-element-upgrade-reaction\n\n\nfunction enqueueCEUpgradeReaction(element, definition) {\n  element._ceReactionQueue.push({\n    type: \"upgrade\",\n    definition\n  });\n\n  enqueueElementOnAppropriateElementQueue(element);\n}\n\nmodule.exports = {\n  customElementReactionsStack,\n  ceReactionsPreSteps,\n  ceReactionsPostSteps,\n  isValidCustomElementName,\n  upgradeElement,\n  tryUpgradeElement,\n  lookupCEDefinition,\n  enqueueCEUpgradeReaction,\n  enqueueCECallbackReaction,\n  invokeCEReactions\n};","map":{"version":3,"sources":["/Library/WebServer/Documents/capstone/capstone-project-re-coder/node_modules/jsdom/lib/jsdom/living/helpers/custom-elements.js"],"names":["DOMException","require","isPotentialCustomElementName","NODE_TYPE","HTML_NS","shadowIncludingRoot","reportException","implForWrapper","wrapperForImpl","CEReactionsStack","constructor","_stack","backupElementQueue","processingBackupElementQueue","push","elementQueue","pop","currentElementQueue","length","isEmpty","customElementReactionsStack","ceReactionsPreSteps","ceReactionsPostSteps","queue","invokeCEReactions","RESTRICTED_CUSTOM_ELEMENT_NAME","Set","isValidCustomElementName","name","has","upgradeElement","definition","element","_ceState","_ceDefinition","attribute","_attributeList","_localName","_namespace","_value","enqueueCECallbackReaction","nodeType","DOCUMENT_NODE","constructionStack","ctor","C","constructionError","disableShadow","_shadowRoot","create","_globalObject","constructionResult","constructionResultImpl","TypeError","error","undefined","_ceReactionQueue","tryUpgradeElement","_ownerDocument","_namespaceURI","_isValue","lookupCEDefinition","enqueueCEUpgradeReaction","document","namespace","localName","isValue","_defaultView","registry","customElements","definitionByName","_customElementDefinitions","find","def","definitionByIs","reactions","reaction","shift","type","callback","apply","args","enqueueElementOnAppropriateElementQueue","Promise","resolve","then","callbackName","lifecycleCallbacks","observedAttributes","attributeName","includes","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst DOMException = require(\"domexception/webidl2js-wrapper\");\nconst isPotentialCustomElementName = require(\"is-potential-custom-element-name\");\n\nconst NODE_TYPE = require(\"../node-type\");\nconst { HTML_NS } = require(\"./namespaces\");\nconst { shadowIncludingRoot } = require(\"./shadow-dom\");\nconst reportException = require(\"./runtime-script-errors\");\n\nconst { implForWrapper, wrapperForImpl } = require(\"../generated/utils\");\n\n// https://html.spec.whatwg.org/multipage/custom-elements.html#custom-element-reactions-stack\nclass CEReactionsStack {\n  constructor() {\n    this._stack = [];\n\n    // https://html.spec.whatwg.org/multipage/custom-elements.html#backup-element-queue\n    this.backupElementQueue = [];\n\n    // https://html.spec.whatwg.org/multipage/custom-elements.html#processing-the-backup-element-queue\n    this.processingBackupElementQueue = false;\n  }\n\n  push(elementQueue) {\n    this._stack.push(elementQueue);\n  }\n\n  pop() {\n    return this._stack.pop();\n  }\n\n  get currentElementQueue() {\n    const { _stack } = this;\n    return _stack[_stack.length - 1];\n  }\n\n  isEmpty() {\n    return this._stack.length === 0;\n  }\n}\n\n// In theory separate cross-origin Windows created by separate JSDOM instances could have separate stacks. But, we would\n// need to implement the whole agent architecture. Which is kind of questionable given that we don't run our Windows in\n// their own separate threads, which is what agents are meant to represent.\nconst customElementReactionsStack = new CEReactionsStack();\n\n// https://html.spec.whatwg.org/multipage/custom-elements.html#cereactions\nfunction ceReactionsPreSteps() {\n  customElementReactionsStack.push([]);\n}\nfunction ceReactionsPostSteps() {\n  const queue = customElementReactionsStack.pop();\n  invokeCEReactions(queue);\n}\n\nconst RESTRICTED_CUSTOM_ELEMENT_NAME = new Set([\n  \"annotation-xml\",\n  \"color-profile\",\n  \"font-face\",\n  \"font-face-src\",\n  \"font-face-uri\",\n  \"font-face-format\",\n  \"font-face-name\",\n  \"missing-glyph\"\n]);\n\n// https://html.spec.whatwg.org/multipage/custom-elements.html#valid-custom-element-name\nfunction isValidCustomElementName(name) {\n  if (RESTRICTED_CUSTOM_ELEMENT_NAME.has(name)) {\n    return false;\n  }\n\n  return isPotentialCustomElementName(name);\n}\n\n// https://html.spec.whatwg.org/multipage/custom-elements.html#concept-upgrade-an-element\nfunction upgradeElement(definition, element) {\n  if (element._ceState !== \"undefined\" || element._ceState === \"uncustomized\") {\n    return;\n  }\n\n  element._ceDefinition = definition;\n  element._ceState = \"failed\";\n\n  for (const attribute of element._attributeList) {\n    const { _localName, _namespace, _value } = attribute;\n    enqueueCECallbackReaction(element, \"attributeChangedCallback\", [_localName, null, _value, _namespace]);\n  }\n\n  if (shadowIncludingRoot(element).nodeType === NODE_TYPE.DOCUMENT_NODE) {\n    enqueueCECallbackReaction(element, \"connectedCallback\", []);\n  }\n\n  definition.constructionStack.push(element);\n\n  const { constructionStack, ctor: C } = definition;\n\n  let constructionError;\n  try {\n    if (definition.disableShadow === true && element._shadowRoot !== null) {\n      throw DOMException.create(element._globalObject, [\n        \"Can't upgrade a custom element with a shadow root if shadow is disabled\",\n        \"NotSupportedError\"\n      ]);\n    }\n\n    const constructionResult = new C();\n    const constructionResultImpl = implForWrapper(constructionResult);\n\n    if (constructionResultImpl !== element) {\n      throw new TypeError(\"Invalid custom element constructor return value\");\n    }\n  } catch (error) {\n    constructionError = error;\n  }\n\n  constructionStack.pop();\n\n  if (constructionError !== undefined) {\n    element._ceDefinition = null;\n    element._ceReactionQueue = [];\n\n    throw constructionError;\n  }\n\n  element._ceState = \"custom\";\n}\n\n// https://html.spec.whatwg.org/#concept-try-upgrade\nfunction tryUpgradeElement(element) {\n  const { _ownerDocument, _namespaceURI, _localName, _isValue } = element;\n  const definition = lookupCEDefinition(_ownerDocument, _namespaceURI, _localName, _isValue);\n\n  if (definition !== null) {\n    enqueueCEUpgradeReaction(element, definition);\n  }\n}\n\n// https://html.spec.whatwg.org/#look-up-a-custom-element-definition\nfunction lookupCEDefinition(document, namespace, localName, isValue) {\n  const definition = null;\n\n  if (namespace !== HTML_NS) {\n    return definition;\n  }\n\n  if (!document._defaultView) {\n    return definition;\n  }\n\n  const registry = implForWrapper(document._globalObject.customElements);\n\n  const definitionByName = registry._customElementDefinitions.find(def => {\n    return def.name === def.localName && def.localName === localName;\n  });\n  if (definitionByName !== undefined) {\n    return definitionByName;\n  }\n\n  const definitionByIs = registry._customElementDefinitions.find(def => {\n    return def.name === isValue && def.localName === localName;\n  });\n  if (definitionByIs !== undefined) {\n    return definitionByIs;\n  }\n\n  return definition;\n}\n\n// https://html.spec.whatwg.org/multipage/custom-elements.html#invoke-custom-element-reactions\nfunction invokeCEReactions(elementQueue) {\n  for (const element of elementQueue) {\n    const reactions = element._ceReactionQueue;\n\n    try {\n      while (reactions.length > 0) {\n        const reaction = reactions.shift();\n\n        switch (reaction.type) {\n          case \"upgrade\":\n            upgradeElement(reaction.definition, element);\n            break;\n\n          case \"callback\":\n            reaction.callback.apply(wrapperForImpl(element), reaction.args);\n            break;\n        }\n      }\n    } catch (error) {\n      reportException(element._globalObject, error);\n    }\n  }\n}\n\n// https://html.spec.whatwg.org/multipage/custom-elements.html#enqueue-an-element-on-the-appropriate-element-queue\nfunction enqueueElementOnAppropriateElementQueue(element) {\n  if (customElementReactionsStack.isEmpty()) {\n    customElementReactionsStack.backupElementQueue.push(element);\n\n    if (customElementReactionsStack.processingBackupElementQueue) {\n      return;\n    }\n\n    customElementReactionsStack.processingBackupElementQueue = true;\n\n    Promise.resolve().then(() => {\n      const elementQueue = customElementReactionsStack.backupElementQueue;\n      invokeCEReactions(elementQueue);\n\n      customElementReactionsStack.processingBackupElementQueue = false;\n    });\n  } else {\n    customElementReactionsStack.currentElementQueue.push(element);\n  }\n}\n\n// https://html.spec.whatwg.org/multipage/custom-elements.html#enqueue-a-custom-element-callback-reaction\nfunction enqueueCECallbackReaction(element, callbackName, args) {\n  const { _ceDefinition: { lifecycleCallbacks, observedAttributes } } = element;\n\n  const callback = lifecycleCallbacks[callbackName];\n  if (callback === null) {\n    return;\n  }\n\n  if (callbackName === \"attributeChangedCallback\") {\n    const attributeName = args[0];\n    if (!observedAttributes.includes(attributeName)) {\n      return;\n    }\n  }\n\n  element._ceReactionQueue.push({\n    type: \"callback\",\n    callback,\n    args\n  });\n\n  enqueueElementOnAppropriateElementQueue(element);\n}\n\n// https://html.spec.whatwg.org/#enqueue-a-custom-element-upgrade-reaction\nfunction enqueueCEUpgradeReaction(element, definition) {\n  element._ceReactionQueue.push({\n    type: \"upgrade\",\n    definition\n  });\n\n  enqueueElementOnAppropriateElementQueue(element);\n}\n\nmodule.exports = {\n  customElementReactionsStack,\n\n  ceReactionsPreSteps,\n  ceReactionsPostSteps,\n\n  isValidCustomElementName,\n\n  upgradeElement,\n  tryUpgradeElement,\n\n  lookupCEDefinition,\n  enqueueCEUpgradeReaction,\n  enqueueCECallbackReaction,\n  invokeCEReactions\n};\n"]},"metadata":{},"sourceType":"script"}