{"ast":null,"code":"\"use strict\";\n\nconst {\n  appendHandler,\n  createEventAccessor\n} = require(\"../helpers/create-event-accessor\");\n\nconst events = new Set([\"abort\", \"autocomplete\", \"autocompleteerror\", \"blur\", \"cancel\", \"canplay\", \"canplaythrough\", \"change\", \"click\", \"close\", \"contextmenu\", \"cuechange\", \"dblclick\", \"drag\", \"dragend\", \"dragenter\", \"dragexit\", \"dragleave\", \"dragover\", \"dragstart\", \"drop\", \"durationchange\", \"emptied\", \"ended\", \"error\", \"focus\", \"input\", \"invalid\", \"keydown\", \"keypress\", \"keyup\", \"load\", \"loadeddata\", \"loadedmetadata\", \"loadstart\", \"mousedown\", \"mouseenter\", \"mouseleave\", \"mousemove\", \"mouseout\", \"mouseover\", \"mouseup\", \"wheel\", \"pause\", \"play\", \"playing\", \"progress\", \"ratechange\", \"reset\", \"resize\", \"scroll\", \"securitypolicyviolation\", \"seeked\", \"seeking\", \"select\", \"sort\", \"stalled\", \"submit\", \"suspend\", \"timeupdate\", \"toggle\", \"volumechange\", \"waiting\"]);\n\nclass GlobalEventHandlersImpl {\n  _initGlobalEvents() {\n    this._registeredHandlers = new Set();\n    this._eventHandlers = Object.create(null);\n  }\n\n  _getEventHandlerTarget() {\n    return this;\n  }\n\n  _getEventHandlerFor(event) {\n    const target = this._getEventHandlerTarget(event);\n\n    if (!target) {\n      return null;\n    }\n\n    return target._eventHandlers[event];\n  }\n\n  _setEventHandlerFor(event, handler) {\n    const target = this._getEventHandlerTarget(event);\n\n    if (!target) {\n      return;\n    }\n\n    if (!target._registeredHandlers.has(event) && handler !== null) {\n      target._registeredHandlers.add(event);\n\n      appendHandler(target, event);\n    }\n\n    target._eventHandlers[event] = handler;\n  }\n\n  _globalEventChanged(event) {\n    const propName = \"on\" + event;\n\n    if (!(propName in this)) {\n      return;\n    } // Only translate attribute changes into properties when runScripts: \"dangerously\" is set.\n    // Documents without a browsing context (i.e. without a _defaultView) never run scripts.\n\n\n    const runScripts = \"_runScripts\" in this ? this._runScripts : (this._ownerDocument._defaultView || {})._runScripts;\n\n    if (runScripts !== \"dangerously\") {\n      return;\n    }\n\n    const val = this.getAttributeNS(null, propName);\n    const handler = val === null ? null : {\n      body: val\n    };\n\n    this._setEventHandlerFor(event, handler);\n  }\n\n}\n\nfor (const event of events) {\n  createEventAccessor(GlobalEventHandlersImpl.prototype, event);\n}\n\nmodule.exports = {\n  implementation: GlobalEventHandlersImpl\n};","map":{"version":3,"sources":["/Library/WebServer/Documents/capstone/capstone-project-re-coder/node_modules/jsdom/lib/jsdom/living/nodes/GlobalEventHandlers-impl.js"],"names":["appendHandler","createEventAccessor","require","events","Set","GlobalEventHandlersImpl","_initGlobalEvents","_registeredHandlers","_eventHandlers","Object","create","_getEventHandlerTarget","_getEventHandlerFor","event","target","_setEventHandlerFor","handler","has","add","_globalEventChanged","propName","runScripts","_runScripts","_ownerDocument","_defaultView","val","getAttributeNS","body","prototype","module","exports","implementation"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst { appendHandler, createEventAccessor } = require(\"../helpers/create-event-accessor\");\n\nconst events = new Set([\n  \"abort\", \"autocomplete\",\n  \"autocompleteerror\", \"blur\",\n  \"cancel\", \"canplay\", \"canplaythrough\",\n  \"change\", \"click\",\n  \"close\", \"contextmenu\",\n  \"cuechange\", \"dblclick\",\n  \"drag\", \"dragend\",\n  \"dragenter\", \"dragexit\",\n  \"dragleave\", \"dragover\",\n  \"dragstart\", \"drop\",\n  \"durationchange\", \"emptied\",\n  \"ended\", \"error\", \"focus\",\n  \"input\", \"invalid\",\n  \"keydown\", \"keypress\",\n  \"keyup\", \"load\", \"loadeddata\",\n  \"loadedmetadata\", \"loadstart\",\n  \"mousedown\", \"mouseenter\",\n  \"mouseleave\", \"mousemove\",\n  \"mouseout\", \"mouseover\",\n  \"mouseup\", \"wheel\",\n  \"pause\", \"play\",\n  \"playing\", \"progress\",\n  \"ratechange\", \"reset\",\n  \"resize\", \"scroll\",\n  \"securitypolicyviolation\",\n  \"seeked\", \"seeking\",\n  \"select\", \"sort\", \"stalled\",\n  \"submit\", \"suspend\",\n  \"timeupdate\", \"toggle\",\n  \"volumechange\", \"waiting\"\n]);\n\nclass GlobalEventHandlersImpl {\n  _initGlobalEvents() {\n    this._registeredHandlers = new Set();\n    this._eventHandlers = Object.create(null);\n  }\n\n  _getEventHandlerTarget() {\n    return this;\n  }\n\n  _getEventHandlerFor(event) {\n    const target = this._getEventHandlerTarget(event);\n    if (!target) {\n      return null;\n    }\n\n    return target._eventHandlers[event];\n  }\n\n  _setEventHandlerFor(event, handler) {\n    const target = this._getEventHandlerTarget(event);\n    if (!target) {\n      return;\n    }\n\n    if (!target._registeredHandlers.has(event) && handler !== null) {\n      target._registeredHandlers.add(event);\n      appendHandler(target, event);\n    }\n    target._eventHandlers[event] = handler;\n  }\n\n  _globalEventChanged(event) {\n    const propName = \"on\" + event;\n    if (!(propName in this)) {\n      return;\n    }\n\n    // Only translate attribute changes into properties when runScripts: \"dangerously\" is set.\n    // Documents without a browsing context (i.e. without a _defaultView) never run scripts.\n    const runScripts = \"_runScripts\" in this ? this._runScripts : (this._ownerDocument._defaultView || {})._runScripts;\n    if (runScripts !== \"dangerously\") {\n      return;\n    }\n\n    const val = this.getAttributeNS(null, propName);\n    const handler = val === null ? null : { body: val };\n    this._setEventHandlerFor(event, handler);\n  }\n}\n\nfor (const event of events) {\n  createEventAccessor(GlobalEventHandlersImpl.prototype, event);\n}\n\nmodule.exports = {\n  implementation: GlobalEventHandlersImpl\n};\n"]},"metadata":{},"sourceType":"script"}