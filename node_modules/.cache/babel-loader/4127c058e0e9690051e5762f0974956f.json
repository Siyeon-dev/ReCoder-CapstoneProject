{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\n\nconst utils = require(\"./utils.js\");\n\nconst HTMLConstructor_helpers_html_constructor = require(\"../helpers/html-constructor.js\").HTMLConstructor;\n\nconst ceReactionsPreSteps_helpers_custom_elements = require(\"../helpers/custom-elements.js\").ceReactionsPreSteps;\n\nconst ceReactionsPostSteps_helpers_custom_elements = require(\"../helpers/custom-elements.js\").ceReactionsPostSteps;\n\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\n\nconst HTMLElement = require(\"./HTMLElement.js\");\n\nconst interfaceName = \"HTMLFieldSetElement\";\n\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\n\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\n\nexports.convert = (value, {\n  context = \"The provided value\"\n} = {}) => {\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n\n  throw new TypeError(`${context} is not of type 'HTMLFieldSetElement'.`);\n};\n\nfunction makeWrapper(globalObject) {\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    throw new Error(\"Internal error: invalid global object\");\n  }\n\n  const ctor = globalObject[ctorRegistrySymbol][\"HTMLFieldSetElement\"];\n\n  if (ctor === undefined) {\n    throw new Error(\"Internal error: constructor HTMLFieldSetElement is not installed on the passed global object\");\n  }\n\n  return Object.create(ctor.prototype);\n}\n\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = (wrapper, globalObject) => {\n  HTMLElement._internalSetup(wrapper, globalObject);\n};\n\nexports.setup = (wrapper, globalObject, constructorArgs = [], privateData = {}) => {\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n\n  return wrapper;\n};\n\nexports.new = globalObject => {\n  const wrapper = makeWrapper(globalObject);\n\n  exports._internalSetup(wrapper, globalObject);\n\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n\n  return wrapper[implSymbol];\n};\n\nconst exposed = new Set([\"Window\"]);\n\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n\n  if (globalObject.HTMLElement === undefined) {\n    throw new Error(\"Internal error: attempting to evaluate HTMLFieldSetElement before HTMLElement\");\n  }\n\n  class HTMLFieldSetElement extends globalObject.HTMLElement {\n    constructor() {\n      return HTMLConstructor_helpers_html_constructor(globalObject, interfaceName, new.target);\n    }\n\n    checkValidity() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return esValue[implSymbol].checkValidity();\n    }\n\n    reportValidity() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return esValue[implSymbol].reportValidity();\n    }\n\n    setCustomValidity(error) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      if (arguments.length < 1) {\n        throw new TypeError(\"Failed to execute 'setCustomValidity' on 'HTMLFieldSetElement': 1 argument required, but only \" + arguments.length + \" present.\");\n      }\n\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"DOMString\"](curArg, {\n          context: \"Failed to execute 'setCustomValidity' on 'HTMLFieldSetElement': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].setCustomValidity(...args);\n    }\n\n    get disabled() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n      try {\n        return esValue[implSymbol].hasAttributeNS(null, \"disabled\");\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n\n    set disabled(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      V = conversions[\"boolean\"](V, {\n        context: \"Failed to set the 'disabled' property on 'HTMLFieldSetElement': The provided value\"\n      });\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n      try {\n        if (V) {\n          esValue[implSymbol].setAttributeNS(null, \"disabled\", \"\");\n        } else {\n          esValue[implSymbol].removeAttributeNS(null, \"disabled\");\n        }\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n\n    get form() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"form\"]);\n    }\n\n    get name() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n      try {\n        const value = esValue[implSymbol].getAttributeNS(null, \"name\");\n        return value === null ? \"\" : value;\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n\n    set name(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      V = conversions[\"DOMString\"](V, {\n        context: \"Failed to set the 'name' property on 'HTMLFieldSetElement': The provided value\"\n      });\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n      try {\n        esValue[implSymbol].setAttributeNS(null, \"name\", V);\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n\n    get type() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return esValue[implSymbol][\"type\"];\n    }\n\n    get elements() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return utils.getSameObject(this, \"elements\", () => {\n        return utils.tryWrapperForImpl(esValue[implSymbol][\"elements\"]);\n      });\n    }\n\n    get willValidate() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return esValue[implSymbol][\"willValidate\"];\n    }\n\n    get validity() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return utils.getSameObject(this, \"validity\", () => {\n        return utils.tryWrapperForImpl(esValue[implSymbol][\"validity\"]);\n      });\n    }\n\n    get validationMessage() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return esValue[implSymbol][\"validationMessage\"];\n    }\n\n  }\n\n  Object.defineProperties(HTMLFieldSetElement.prototype, {\n    checkValidity: {\n      enumerable: true\n    },\n    reportValidity: {\n      enumerable: true\n    },\n    setCustomValidity: {\n      enumerable: true\n    },\n    disabled: {\n      enumerable: true\n    },\n    form: {\n      enumerable: true\n    },\n    name: {\n      enumerable: true\n    },\n    type: {\n      enumerable: true\n    },\n    elements: {\n      enumerable: true\n    },\n    willValidate: {\n      enumerable: true\n    },\n    validity: {\n      enumerable: true\n    },\n    validationMessage: {\n      enumerable: true\n    },\n    [Symbol.toStringTag]: {\n      value: \"HTMLFieldSetElement\",\n      configurable: true\n    }\n  });\n\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    globalObject[ctorRegistrySymbol] = Object.create(null);\n  }\n\n  globalObject[ctorRegistrySymbol][interfaceName] = HTMLFieldSetElement;\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: HTMLFieldSetElement\n  });\n};\n\nconst Impl = require(\"../nodes/HTMLFieldSetElement-impl.js\");","map":{"version":3,"sources":["/Library/WebServer/Documents/capstone/capstone-project-re-coder/node_modules/jsdom/lib/jsdom/living/generated/HTMLFieldSetElement.js"],"names":["conversions","require","utils","HTMLConstructor_helpers_html_constructor","HTMLConstructor","ceReactionsPreSteps_helpers_custom_elements","ceReactionsPreSteps","ceReactionsPostSteps_helpers_custom_elements","ceReactionsPostSteps","implSymbol","ctorRegistrySymbol","HTMLElement","interfaceName","exports","is","value","isObject","hasOwn","Impl","implementation","isImpl","convert","context","implForWrapper","TypeError","makeWrapper","globalObject","undefined","Error","ctor","Object","create","prototype","constructorArgs","privateData","wrapper","setup","createImpl","_internalSetup","defineProperty","configurable","wrapperSymbol","init","new","exposed","Set","install","globalNames","some","globalName","has","HTMLFieldSetElement","constructor","target","checkValidity","esValue","reportValidity","setCustomValidity","error","arguments","length","args","curArg","push","disabled","hasAttributeNS","V","setAttributeNS","removeAttributeNS","form","tryWrapperForImpl","name","getAttributeNS","type","elements","getSameObject","willValidate","validity","validationMessage","defineProperties","enumerable","Symbol","toStringTag","writable"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst HTMLConstructor_helpers_html_constructor = require(\"../helpers/html-constructor.js\").HTMLConstructor;\nconst ceReactionsPreSteps_helpers_custom_elements = require(\"../helpers/custom-elements.js\").ceReactionsPreSteps;\nconst ceReactionsPostSteps_helpers_custom_elements = require(\"../helpers/custom-elements.js\").ceReactionsPostSteps;\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\nconst HTMLElement = require(\"./HTMLElement.js\");\n\nconst interfaceName = \"HTMLFieldSetElement\";\n\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\nexports.convert = (value, { context = \"The provided value\" } = {}) => {\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n  throw new TypeError(`${context} is not of type 'HTMLFieldSetElement'.`);\n};\n\nfunction makeWrapper(globalObject) {\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    throw new Error(\"Internal error: invalid global object\");\n  }\n\n  const ctor = globalObject[ctorRegistrySymbol][\"HTMLFieldSetElement\"];\n  if (ctor === undefined) {\n    throw new Error(\"Internal error: constructor HTMLFieldSetElement is not installed on the passed global object\");\n  }\n\n  return Object.create(ctor.prototype);\n}\n\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = (wrapper, globalObject) => {\n  HTMLElement._internalSetup(wrapper, globalObject);\n};\n\nexports.setup = (wrapper, globalObject, constructorArgs = [], privateData = {}) => {\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper;\n};\n\nexports.new = globalObject => {\n  const wrapper = makeWrapper(globalObject);\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper[implSymbol];\n};\n\nconst exposed = new Set([\"Window\"]);\n\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n\n  if (globalObject.HTMLElement === undefined) {\n    throw new Error(\"Internal error: attempting to evaluate HTMLFieldSetElement before HTMLElement\");\n  }\n  class HTMLFieldSetElement extends globalObject.HTMLElement {\n    constructor() {\n      return HTMLConstructor_helpers_html_constructor(globalObject, interfaceName, new.target);\n    }\n\n    checkValidity() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return esValue[implSymbol].checkValidity();\n    }\n\n    reportValidity() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return esValue[implSymbol].reportValidity();\n    }\n\n    setCustomValidity(error) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      if (arguments.length < 1) {\n        throw new TypeError(\n          \"Failed to execute 'setCustomValidity' on 'HTMLFieldSetElement': 1 argument required, but only \" +\n            arguments.length +\n            \" present.\"\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"DOMString\"](curArg, {\n          context: \"Failed to execute 'setCustomValidity' on 'HTMLFieldSetElement': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].setCustomValidity(...args);\n    }\n\n    get disabled() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        return esValue[implSymbol].hasAttributeNS(null, \"disabled\");\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n\n    set disabled(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      V = conversions[\"boolean\"](V, {\n        context: \"Failed to set the 'disabled' property on 'HTMLFieldSetElement': The provided value\"\n      });\n\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        if (V) {\n          esValue[implSymbol].setAttributeNS(null, \"disabled\", \"\");\n        } else {\n          esValue[implSymbol].removeAttributeNS(null, \"disabled\");\n        }\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n\n    get form() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"form\"]);\n    }\n\n    get name() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        const value = esValue[implSymbol].getAttributeNS(null, \"name\");\n        return value === null ? \"\" : value;\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n\n    set name(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      V = conversions[\"DOMString\"](V, {\n        context: \"Failed to set the 'name' property on 'HTMLFieldSetElement': The provided value\"\n      });\n\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        esValue[implSymbol].setAttributeNS(null, \"name\", V);\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n\n    get type() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return esValue[implSymbol][\"type\"];\n    }\n\n    get elements() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return utils.getSameObject(this, \"elements\", () => {\n        return utils.tryWrapperForImpl(esValue[implSymbol][\"elements\"]);\n      });\n    }\n\n    get willValidate() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return esValue[implSymbol][\"willValidate\"];\n    }\n\n    get validity() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return utils.getSameObject(this, \"validity\", () => {\n        return utils.tryWrapperForImpl(esValue[implSymbol][\"validity\"]);\n      });\n    }\n\n    get validationMessage() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return esValue[implSymbol][\"validationMessage\"];\n    }\n  }\n  Object.defineProperties(HTMLFieldSetElement.prototype, {\n    checkValidity: { enumerable: true },\n    reportValidity: { enumerable: true },\n    setCustomValidity: { enumerable: true },\n    disabled: { enumerable: true },\n    form: { enumerable: true },\n    name: { enumerable: true },\n    type: { enumerable: true },\n    elements: { enumerable: true },\n    willValidate: { enumerable: true },\n    validity: { enumerable: true },\n    validationMessage: { enumerable: true },\n    [Symbol.toStringTag]: { value: \"HTMLFieldSetElement\", configurable: true }\n  });\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    globalObject[ctorRegistrySymbol] = Object.create(null);\n  }\n  globalObject[ctorRegistrySymbol][interfaceName] = HTMLFieldSetElement;\n\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: HTMLFieldSetElement\n  });\n};\n\nconst Impl = require(\"../nodes/HTMLFieldSetElement-impl.js\");\n"]},"metadata":{},"sourceType":"script"}