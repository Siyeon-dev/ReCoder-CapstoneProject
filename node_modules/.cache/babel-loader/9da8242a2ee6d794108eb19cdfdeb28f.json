{"ast":null,"code":"\"use strict\";\n\nconst DOMException = require(\"domexception/webidl2js-wrapper\");\n\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\n\nconst notImplemented = require(\"../../browser/not-implemented\");\n\nconst {\n  fireAnEvent\n} = require(\"../helpers/events\");\n\nfunction getTimeRangeDummy() {\n  return {\n    length: 0,\n\n    start() {\n      return 0;\n    },\n\n    end() {\n      return 0;\n    }\n\n  };\n}\n\nclass HTMLMediaElementImpl extends HTMLElementImpl {\n  constructor(globalObject, args, privateData) {\n    super(globalObject, args, privateData);\n    this._muted = false;\n    this._volume = 1.0;\n    this.readyState = 0;\n    this.networkState = 0;\n    this.currentTime = 0;\n    this.currentSrc = \"\";\n    this.buffered = getTimeRangeDummy();\n    this.seeking = false;\n    this.duration = NaN;\n    this.paused = true;\n    this.played = getTimeRangeDummy();\n    this.seekable = getTimeRangeDummy();\n    this.ended = false;\n    this.audioTracks = [];\n    this.videoTracks = [];\n    this.textTracks = [];\n  } // Implemented accoring to W3C Draft 22 August 2012\n\n\n  set defaultPlaybackRate(v) {\n    if (v === 0.0) {\n      throw DOMException.create(this._globalObject, [\"The operation is not supported.\", \"NotSupportedError\"]);\n    }\n\n    if (this._defaultPlaybackRate !== v) {\n      this._defaultPlaybackRate = v;\n\n      this._dispatchRateChange();\n    }\n  }\n\n  _dispatchRateChange() {\n    fireAnEvent(\"ratechange\", this);\n  }\n\n  get defaultPlaybackRate() {\n    if (this._defaultPlaybackRate === undefined) {\n      return 1.0;\n    }\n\n    return this._defaultPlaybackRate;\n  }\n\n  get playbackRate() {\n    if (this._playbackRate === undefined) {\n      return 1.0;\n    }\n\n    return this._playbackRate;\n  }\n\n  set playbackRate(v) {\n    if (v !== this._playbackRate) {\n      this._playbackRate = v;\n\n      this._dispatchRateChange();\n    }\n  }\n\n  get muted() {\n    return this._muted;\n  }\n\n  _dispatchVolumeChange() {\n    fireAnEvent(\"volumechange\", this);\n  }\n\n  set muted(v) {\n    if (v !== this._muted) {\n      this._muted = v;\n\n      this._dispatchVolumeChange();\n    }\n  }\n\n  get defaultMuted() {\n    return this.getAttributeNS(null, \"muted\") !== null;\n  }\n\n  set defaultMuted(v) {\n    if (v) {\n      this.setAttributeNS(null, \"muted\", v);\n    } else {\n      this.removeAttributeNS(null, \"muted\");\n    }\n  }\n\n  get volume() {\n    return this._volume;\n  }\n\n  set volume(v) {\n    if (v < 0 || v > 1) {\n      throw DOMException.create(this._globalObject, [\"The index is not in the allowed range.\", \"IndexSizeError\"]);\n    }\n\n    if (this._volume !== v) {\n      this._volume = v;\n\n      this._dispatchVolumeChange();\n    }\n  } // Not (yet) implemented according to spec\n  // Should return sane default values\n\n\n  load() {\n    notImplemented(\"HTMLMediaElement.prototype.load\", this._ownerDocument._defaultView);\n  }\n\n  canPlayType() {\n    return \"\";\n  }\n\n  play() {\n    notImplemented(\"HTMLMediaElement.prototype.play\", this._ownerDocument._defaultView);\n  }\n\n  pause() {\n    notImplemented(\"HTMLMediaElement.prototype.pause\", this._ownerDocument._defaultView);\n  }\n\n  addTextTrack() {\n    notImplemented(\"HTMLMediaElement.prototype.addTextTrack\", this._ownerDocument._defaultView);\n  }\n\n}\n\nmodule.exports = {\n  implementation: HTMLMediaElementImpl\n};","map":{"version":3,"sources":["/Library/WebServer/Documents/capstone/capstone-project-re-coder/node_modules/jsdom/lib/jsdom/living/nodes/HTMLMediaElement-impl.js"],"names":["DOMException","require","HTMLElementImpl","implementation","notImplemented","fireAnEvent","getTimeRangeDummy","length","start","end","HTMLMediaElementImpl","constructor","globalObject","args","privateData","_muted","_volume","readyState","networkState","currentTime","currentSrc","buffered","seeking","duration","NaN","paused","played","seekable","ended","audioTracks","videoTracks","textTracks","defaultPlaybackRate","v","create","_globalObject","_defaultPlaybackRate","_dispatchRateChange","undefined","playbackRate","_playbackRate","muted","_dispatchVolumeChange","defaultMuted","getAttributeNS","setAttributeNS","removeAttributeNS","volume","load","_ownerDocument","_defaultView","canPlayType","play","pause","addTextTrack","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\nconst DOMException = require(\"domexception/webidl2js-wrapper\");\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\nconst notImplemented = require(\"../../browser/not-implemented\");\nconst { fireAnEvent } = require(\"../helpers/events\");\n\nfunction getTimeRangeDummy() {\n  return {\n    length: 0,\n    start() {\n      return 0;\n    },\n    end() {\n      return 0;\n    }\n  };\n}\n\nclass HTMLMediaElementImpl extends HTMLElementImpl {\n  constructor(globalObject, args, privateData) {\n    super(globalObject, args, privateData);\n\n    this._muted = false;\n    this._volume = 1.0;\n    this.readyState = 0;\n    this.networkState = 0;\n    this.currentTime = 0;\n    this.currentSrc = \"\";\n    this.buffered = getTimeRangeDummy();\n    this.seeking = false;\n    this.duration = NaN;\n    this.paused = true;\n    this.played = getTimeRangeDummy();\n    this.seekable = getTimeRangeDummy();\n    this.ended = false;\n    this.audioTracks = [];\n    this.videoTracks = [];\n    this.textTracks = [];\n  }\n  // Implemented accoring to W3C Draft 22 August 2012\n  set defaultPlaybackRate(v) {\n    if (v === 0.0) {\n      throw DOMException.create(this._globalObject, [\"The operation is not supported.\", \"NotSupportedError\"]);\n    }\n    if (this._defaultPlaybackRate !== v) {\n      this._defaultPlaybackRate = v;\n      this._dispatchRateChange();\n    }\n  }\n\n  _dispatchRateChange() {\n    fireAnEvent(\"ratechange\", this);\n  }\n  get defaultPlaybackRate() {\n    if (this._defaultPlaybackRate === undefined) {\n      return 1.0;\n    }\n    return this._defaultPlaybackRate;\n  }\n  get playbackRate() {\n    if (this._playbackRate === undefined) {\n      return 1.0;\n    }\n    return this._playbackRate;\n  }\n  set playbackRate(v) {\n    if (v !== this._playbackRate) {\n      this._playbackRate = v;\n      this._dispatchRateChange();\n    }\n  }\n  get muted() {\n    return this._muted;\n  }\n  _dispatchVolumeChange() {\n    fireAnEvent(\"volumechange\", this);\n  }\n  set muted(v) {\n    if (v !== this._muted) {\n      this._muted = v;\n      this._dispatchVolumeChange();\n    }\n  }\n  get defaultMuted() {\n    return this.getAttributeNS(null, \"muted\") !== null;\n  }\n  set defaultMuted(v) {\n    if (v) {\n      this.setAttributeNS(null, \"muted\", v);\n    } else {\n      this.removeAttributeNS(null, \"muted\");\n    }\n  }\n  get volume() {\n    return this._volume;\n  }\n  set volume(v) {\n    if (v < 0 || v > 1) {\n      throw DOMException.create(this._globalObject, [\"The index is not in the allowed range.\", \"IndexSizeError\"]);\n    }\n    if (this._volume !== v) {\n      this._volume = v;\n      this._dispatchVolumeChange();\n    }\n  }\n\n  // Not (yet) implemented according to spec\n  // Should return sane default values\n  load() {\n    notImplemented(\"HTMLMediaElement.prototype.load\", this._ownerDocument._defaultView);\n  }\n  canPlayType() {\n    return \"\";\n  }\n  play() {\n    notImplemented(\"HTMLMediaElement.prototype.play\", this._ownerDocument._defaultView);\n  }\n  pause() {\n    notImplemented(\"HTMLMediaElement.prototype.pause\", this._ownerDocument._defaultView);\n  }\n  addTextTrack() {\n    notImplemented(\"HTMLMediaElement.prototype.addTextTrack\", this._ownerDocument._defaultView);\n  }\n}\n\nmodule.exports = {\n  implementation: HTMLMediaElementImpl\n};\n"]},"metadata":{},"sourceType":"script"}