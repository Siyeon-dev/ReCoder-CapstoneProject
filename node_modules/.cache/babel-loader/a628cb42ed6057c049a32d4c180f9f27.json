{"ast":null,"code":"\"use strict\";\n\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\n\nconst {\n  removeStylesheet,\n  createStylesheet\n} = require(\"../helpers/stylesheets\");\n\nconst {\n  documentBaseURL\n} = require(\"../helpers/document-base-url\");\n\nconst {\n  childTextContent\n} = require(\"../helpers/text\");\n\nconst {\n  asciiCaseInsensitiveMatch\n} = require(\"../helpers/strings\");\n\nclass HTMLStyleElementImpl extends HTMLElementImpl {\n  constructor(globalObject, args, privateData) {\n    super(globalObject, args, privateData);\n    this.sheet = null;\n    this._isOnStackOfOpenElements = false;\n  }\n\n  _attach() {\n    super._attach();\n\n    if (!this._isOnStackOfOpenElements) {\n      this._updateAStyleBlock();\n    }\n  }\n\n  _detach() {\n    super._detach();\n\n    if (!this._isOnStackOfOpenElements) {\n      this._updateAStyleBlock();\n    }\n  }\n\n  _childTextContentChangeSteps() {\n    super._childTextContentChangeSteps(); // This guard is not required by the spec, but should be unobservable (since you can't run script during the middle\n    // of parsing a <style> element) and saves a bunch of unnecessary work.\n\n\n    if (!this._isOnStackOfOpenElements) {\n      this._updateAStyleBlock();\n    }\n  }\n\n  _poppedOffStackOfOpenElements() {\n    this._isOnStackOfOpenElements = false;\n\n    this._updateAStyleBlock();\n  }\n\n  _pushedOnStackOfOpenElements() {\n    this._isOnStackOfOpenElements = true;\n  }\n\n  _updateAStyleBlock() {\n    if (this.sheet) {\n      removeStylesheet(this.sheet, this);\n    } // Browsing-context connected, per https://github.com/whatwg/html/issues/4547\n\n\n    if (!this.isConnected || !this._ownerDocument._defaultView) {\n      return;\n    }\n\n    const type = this.getAttributeNS(null, \"type\");\n\n    if (type !== null && type !== \"\" && !asciiCaseInsensitiveMatch(type, \"text/css\")) {\n      return;\n    } // Not implemented: CSP\n\n\n    const content = childTextContent(this); // Not implemented: a bunch of other state, e.g. title/media attributes\n\n    createStylesheet(content, this, documentBaseURL(this._ownerDocument));\n  }\n\n}\n\nmodule.exports = {\n  implementation: HTMLStyleElementImpl\n};","map":{"version":3,"sources":["/Library/WebServer/Documents/capstone/capstone-project-re-coder/node_modules/jsdom/lib/jsdom/living/nodes/HTMLStyleElement-impl.js"],"names":["HTMLElementImpl","require","implementation","removeStylesheet","createStylesheet","documentBaseURL","childTextContent","asciiCaseInsensitiveMatch","HTMLStyleElementImpl","constructor","globalObject","args","privateData","sheet","_isOnStackOfOpenElements","_attach","_updateAStyleBlock","_detach","_childTextContentChangeSteps","_poppedOffStackOfOpenElements","_pushedOnStackOfOpenElements","isConnected","_ownerDocument","_defaultView","type","getAttributeNS","content","module","exports"],"mappings":"AAAA;;AACA,MAAMA,eAAe,GAAGC,OAAO,CAAC,oBAAD,CAAP,CAA8BC,cAAtD;;AACA,MAAM;AAAEC,EAAAA,gBAAF;AAAoBC,EAAAA;AAApB,IAAyCH,OAAO,CAAC,wBAAD,CAAtD;;AACA,MAAM;AAAEI,EAAAA;AAAF,IAAsBJ,OAAO,CAAC,8BAAD,CAAnC;;AACA,MAAM;AAAEK,EAAAA;AAAF,IAAuBL,OAAO,CAAC,iBAAD,CAApC;;AACA,MAAM;AAAEM,EAAAA;AAAF,IAAgCN,OAAO,CAAC,oBAAD,CAA7C;;AAEA,MAAMO,oBAAN,SAAmCR,eAAnC,CAAmD;AACjDS,EAAAA,WAAW,CAACC,YAAD,EAAeC,IAAf,EAAqBC,WAArB,EAAkC;AAC3C,UAAMF,YAAN,EAAoBC,IAApB,EAA0BC,WAA1B;AAEA,SAAKC,KAAL,GAAa,IAAb;AACA,SAAKC,wBAAL,GAAgC,KAAhC;AACD;;AAEDC,EAAAA,OAAO,GAAG;AACR,UAAMA,OAAN;;AACA,QAAI,CAAC,KAAKD,wBAAV,EAAoC;AAClC,WAAKE,kBAAL;AACD;AACF;;AAEDC,EAAAA,OAAO,GAAG;AACR,UAAMA,OAAN;;AACA,QAAI,CAAC,KAAKH,wBAAV,EAAoC;AAClC,WAAKE,kBAAL;AACD;AACF;;AAEDE,EAAAA,4BAA4B,GAAG;AAC7B,UAAMA,4BAAN,GAD6B,CAG7B;AACA;;;AACA,QAAI,CAAC,KAAKJ,wBAAV,EAAoC;AAClC,WAAKE,kBAAL;AACD;AACF;;AAEDG,EAAAA,6BAA6B,GAAG;AAC9B,SAAKL,wBAAL,GAAgC,KAAhC;;AACA,SAAKE,kBAAL;AACD;;AAEDI,EAAAA,4BAA4B,GAAG;AAC7B,SAAKN,wBAAL,GAAgC,IAAhC;AACD;;AAEDE,EAAAA,kBAAkB,GAAG;AACnB,QAAI,KAAKH,KAAT,EAAgB;AACdV,MAAAA,gBAAgB,CAAC,KAAKU,KAAN,EAAa,IAAb,CAAhB;AACD,KAHkB,CAKnB;;;AACA,QAAI,CAAC,KAAKQ,WAAN,IAAqB,CAAC,KAAKC,cAAL,CAAoBC,YAA9C,EAA4D;AAC1D;AACD;;AAED,UAAMC,IAAI,GAAG,KAAKC,cAAL,CAAoB,IAApB,EAA0B,MAA1B,CAAb;;AACA,QAAID,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,EAA1B,IAAgC,CAACjB,yBAAyB,CAACiB,IAAD,EAAO,UAAP,CAA9D,EAAkF;AAChF;AACD,KAbkB,CAenB;;;AAEA,UAAME,OAAO,GAAGpB,gBAAgB,CAAC,IAAD,CAAhC,CAjBmB,CAkBnB;;AACAF,IAAAA,gBAAgB,CAACsB,OAAD,EAAU,IAAV,EAAgBrB,eAAe,CAAC,KAAKiB,cAAN,CAA/B,CAAhB;AACD;;AA7DgD;;AAgEnDK,MAAM,CAACC,OAAP,GAAiB;AACf1B,EAAAA,cAAc,EAAEM;AADD,CAAjB","sourcesContent":["\"use strict\";\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\nconst { removeStylesheet, createStylesheet } = require(\"../helpers/stylesheets\");\nconst { documentBaseURL } = require(\"../helpers/document-base-url\");\nconst { childTextContent } = require(\"../helpers/text\");\nconst { asciiCaseInsensitiveMatch } = require(\"../helpers/strings\");\n\nclass HTMLStyleElementImpl extends HTMLElementImpl {\n  constructor(globalObject, args, privateData) {\n    super(globalObject, args, privateData);\n\n    this.sheet = null;\n    this._isOnStackOfOpenElements = false;\n  }\n\n  _attach() {\n    super._attach();\n    if (!this._isOnStackOfOpenElements) {\n      this._updateAStyleBlock();\n    }\n  }\n\n  _detach() {\n    super._detach();\n    if (!this._isOnStackOfOpenElements) {\n      this._updateAStyleBlock();\n    }\n  }\n\n  _childTextContentChangeSteps() {\n    super._childTextContentChangeSteps();\n\n    // This guard is not required by the spec, but should be unobservable (since you can't run script during the middle\n    // of parsing a <style> element) and saves a bunch of unnecessary work.\n    if (!this._isOnStackOfOpenElements) {\n      this._updateAStyleBlock();\n    }\n  }\n\n  _poppedOffStackOfOpenElements() {\n    this._isOnStackOfOpenElements = false;\n    this._updateAStyleBlock();\n  }\n\n  _pushedOnStackOfOpenElements() {\n    this._isOnStackOfOpenElements = true;\n  }\n\n  _updateAStyleBlock() {\n    if (this.sheet) {\n      removeStylesheet(this.sheet, this);\n    }\n\n    // Browsing-context connected, per https://github.com/whatwg/html/issues/4547\n    if (!this.isConnected || !this._ownerDocument._defaultView) {\n      return;\n    }\n\n    const type = this.getAttributeNS(null, \"type\");\n    if (type !== null && type !== \"\" && !asciiCaseInsensitiveMatch(type, \"text/css\")) {\n      return;\n    }\n\n    // Not implemented: CSP\n\n    const content = childTextContent(this);\n    // Not implemented: a bunch of other state, e.g. title/media attributes\n    createStylesheet(content, this, documentBaseURL(this._ownerDocument));\n  }\n}\n\nmodule.exports = {\n  implementation: HTMLStyleElementImpl\n};\n"]},"metadata":{},"sourceType":"script"}