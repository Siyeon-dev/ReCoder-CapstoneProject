{"ast":null,"code":"\"use strict\";\n\nconst NODE_TYPE = require(\"../node-type\");\n\nconst {\n  domSymbolTree\n} = require(\"./internal-constants\"); // https://dom.spec.whatwg.org/#concept-node-length\n\n\nfunction nodeLength(node) {\n  switch (node.nodeType) {\n    case NODE_TYPE.DOCUMENT_TYPE_NODE:\n      return 0;\n\n    case NODE_TYPE.TEXT_NODE:\n    case NODE_TYPE.PROCESSING_INSTRUCTION_NODE:\n    case NODE_TYPE.COMMENT_NODE:\n      return node.data.length;\n\n    default:\n      return domSymbolTree.childrenCount(node);\n  }\n} // https://dom.spec.whatwg.org/#concept-tree-root\n\n\nfunction nodeRoot(node) {\n  while (domSymbolTree.parent(node)) {\n    node = domSymbolTree.parent(node);\n  }\n\n  return node;\n} // https://dom.spec.whatwg.org/#concept-tree-inclusive-ancestor\n\n\nfunction isInclusiveAncestor(ancestorNode, node) {\n  while (node) {\n    if (ancestorNode === node) {\n      return true;\n    }\n\n    node = domSymbolTree.parent(node);\n  }\n\n  return false;\n} // https://dom.spec.whatwg.org/#concept-tree-following\n\n\nfunction isFollowing(nodeA, nodeB) {\n  if (nodeA === nodeB) {\n    return false;\n  }\n\n  let current = nodeB;\n\n  while (current) {\n    if (current === nodeA) {\n      return true;\n    }\n\n    current = domSymbolTree.following(current);\n  }\n\n  return false;\n}\n\nmodule.exports = {\n  nodeLength,\n  nodeRoot,\n  isInclusiveAncestor,\n  isFollowing\n};","map":{"version":3,"sources":["/Library/WebServer/Documents/capstone/capstone-project-re-coder/node_modules/jsdom/lib/jsdom/living/helpers/node.js"],"names":["NODE_TYPE","require","domSymbolTree","nodeLength","node","nodeType","DOCUMENT_TYPE_NODE","TEXT_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","data","length","childrenCount","nodeRoot","parent","isInclusiveAncestor","ancestorNode","isFollowing","nodeA","nodeB","current","following","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,cAAD,CAAzB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAoBD,OAAO,CAAC,sBAAD,CAAjC,C,CAEA;;;AACA,SAASE,UAAT,CAAoBC,IAApB,EAA0B;AACxB,UAAQA,IAAI,CAACC,QAAb;AACE,SAAKL,SAAS,CAACM,kBAAf;AACE,aAAO,CAAP;;AAEF,SAAKN,SAAS,CAACO,SAAf;AACA,SAAKP,SAAS,CAACQ,2BAAf;AACA,SAAKR,SAAS,CAACS,YAAf;AACE,aAAOL,IAAI,CAACM,IAAL,CAAUC,MAAjB;;AAEF;AACE,aAAOT,aAAa,CAACU,aAAd,CAA4BR,IAA5B,CAAP;AAVJ;AAYD,C,CAED;;;AACA,SAASS,QAAT,CAAkBT,IAAlB,EAAwB;AACtB,SAAOF,aAAa,CAACY,MAAd,CAAqBV,IAArB,CAAP,EAAmC;AACjCA,IAAAA,IAAI,GAAGF,aAAa,CAACY,MAAd,CAAqBV,IAArB,CAAP;AACD;;AAED,SAAOA,IAAP;AACD,C,CAED;;;AACA,SAASW,mBAAT,CAA6BC,YAA7B,EAA2CZ,IAA3C,EAAiD;AAC/C,SAAOA,IAAP,EAAa;AACX,QAAIY,YAAY,KAAKZ,IAArB,EAA2B;AACzB,aAAO,IAAP;AACD;;AAEDA,IAAAA,IAAI,GAAGF,aAAa,CAACY,MAAd,CAAqBV,IAArB,CAAP;AACD;;AAED,SAAO,KAAP;AACD,C,CAED;;;AACA,SAASa,WAAT,CAAqBC,KAArB,EAA4BC,KAA5B,EAAmC;AACjC,MAAID,KAAK,KAAKC,KAAd,EAAqB;AACnB,WAAO,KAAP;AACD;;AAED,MAAIC,OAAO,GAAGD,KAAd;;AACA,SAAOC,OAAP,EAAgB;AACd,QAAIA,OAAO,KAAKF,KAAhB,EAAuB;AACrB,aAAO,IAAP;AACD;;AAEDE,IAAAA,OAAO,GAAGlB,aAAa,CAACmB,SAAd,CAAwBD,OAAxB,CAAV;AACD;;AAED,SAAO,KAAP;AACD;;AAEDE,MAAM,CAACC,OAAP,GAAiB;AACfpB,EAAAA,UADe;AAEfU,EAAAA,QAFe;AAIfE,EAAAA,mBAJe;AAKfE,EAAAA;AALe,CAAjB","sourcesContent":["\"use strict\";\n\nconst NODE_TYPE = require(\"../node-type\");\nconst { domSymbolTree } = require(\"./internal-constants\");\n\n// https://dom.spec.whatwg.org/#concept-node-length\nfunction nodeLength(node) {\n  switch (node.nodeType) {\n    case NODE_TYPE.DOCUMENT_TYPE_NODE:\n      return 0;\n\n    case NODE_TYPE.TEXT_NODE:\n    case NODE_TYPE.PROCESSING_INSTRUCTION_NODE:\n    case NODE_TYPE.COMMENT_NODE:\n      return node.data.length;\n\n    default:\n      return domSymbolTree.childrenCount(node);\n  }\n}\n\n// https://dom.spec.whatwg.org/#concept-tree-root\nfunction nodeRoot(node) {\n  while (domSymbolTree.parent(node)) {\n    node = domSymbolTree.parent(node);\n  }\n\n  return node;\n}\n\n// https://dom.spec.whatwg.org/#concept-tree-inclusive-ancestor\nfunction isInclusiveAncestor(ancestorNode, node) {\n  while (node) {\n    if (ancestorNode === node) {\n      return true;\n    }\n\n    node = domSymbolTree.parent(node);\n  }\n\n  return false;\n}\n\n// https://dom.spec.whatwg.org/#concept-tree-following\nfunction isFollowing(nodeA, nodeB) {\n  if (nodeA === nodeB) {\n    return false;\n  }\n\n  let current = nodeB;\n  while (current) {\n    if (current === nodeA) {\n      return true;\n    }\n\n    current = domSymbolTree.following(current);\n  }\n\n  return false;\n}\n\nmodule.exports = {\n  nodeLength,\n  nodeRoot,\n\n  isInclusiveAncestor,\n  isFollowing\n};\n"]},"metadata":{},"sourceType":"script"}